<?xml version="1.0" encoding="utf-8"?>
	<Managers address="heu" author="heulaoyoutiao">
		<Manager Number="0">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #6</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/6</url>
			<description>
		Either that or just change it to be alphabetical -- I'm not sure if anyone actually gets the current sorting mechanism.
	</description>
			<title>Allow for changing the sort order for stops</title>
		</Manager>
		<Manager Number="1">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #7</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/7</url>
			<description>
		I think a lot of people get errors about getting stops or arrivals when they don't realize they don't have network connectivity, either due to a dead zone or some temporary lapse. Rather than a generic &quot;problem getting stops&quot; toast or &quot;communication error&quot;, try to make it clear that this is because you actually don't have any internet connectivity.
	</description>
			<title>Make errors more specific, in particular around network connectivity</title>
		</Manager>
		<Manager Number="2">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #8</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/8</url>
			<description>
		We can add a checkbox for the folks who really don't like this popup.
	</description>
			<title>Add a preference to disable to GPS warning popup</title>
		</Manager>
		<Manager Number="3">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #9</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/9</url>
			<description>
		In newest SDKs, the lighter icon is used so it's basically a white-on-white icon.
	</description>
			<title>Use different icon for notifications in arrivals screen</title>
		</Manager>
		<Manager Number="4">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #10</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/10</url>
			<description>
		I use the &quot;reminder/notification&quot; icon which looks like a generic &quot;notification&quot; icon. We should use something that more specifically calls out as OneBusAway, like the old bus icon.
	</description>
			<title>Use transit-specific icon in the notification tray</title>
		</Manager>
		<Manager Number="5">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #11</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/11</url>
			<description>
		This is the hint text on the &quot;Search&quot; tab of the &quot;My Routes&quot; activity. I never noticed when the default background was white, but on ICS/JB it's off white it has this strange white-on-off white.
	</description>
			<title>Search route hint has wrong background</title>
		</Manager>
		<Manager Number="6">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #12</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/12</url>
			<description>
		This will be helpful in diagnosing when people email me about GPS problems. I may be able to add a lat/lon/accuracy as well.
	</description>
			<title>Add location provider status to bug report email</title>
		</Manager>
		<Manager Number="7">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #13</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/13</url>
			<description>
		This didn't seem to happen on Gingerbread, perhaps it's ICS/JB only?
	</description>
			<title>Polylines appear and disappear at different zoom levels</title>
		</Manager>
		<Manager Number="8">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #14</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/14</url>
			<description>
		This would be useful for three reasons: It's cool we wouldn't have to shove so much into a popup box We could add even more information that would be useful for debugging We could display extra warning text to make it clear when we don't have predicted information. We could finally make people understand what &quot;scheduled arrival&quot; means. OK, that's four reasons.
	</description>
			<title>Add trip status/extended arrival details screen</title>
		</Manager>
		<Manager Number="9">
			<labels>
				<label>enhancement</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #15</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/15</url>
			<description>
		We should be able to detect stops that are right on top of each other, or close enough within some range, and popup something that will allow you to disambiguate them.
	</description>
			<title>Fix the case with overlapping map stops</title>
		</Manager>
		<Manager Number="10">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #16</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/16</url>
			<description>
		Move from http://code.google.com/p/seattle-bus-bot/issues/detail?id=17 Reported by project member paulcwatts, Dec 1, 2009 It would be useful to view the posted schedule of departures from the StopInfo screen. Right now this information isn't available from the REST APIs, but we could still link to the KC Metro site for KCM routes. Comment 3 by hoffman.mm, Jul 19, 2012 Could you link to the OneBusAway web site instead? Comment 4 by cookieguru, Today (40 minutes ago) Since this ticket was created an API method has been added: http://developer.onebusaway.org/modules/onebusaway-application-modules/current/api/where/methods/schedule-for-stop.html Comment 5 by project member paulcwatts, Today (27 minutes ago) Yeah, the API has been there for a while. It's just that I haven't had time to implement it :) Part of the big redesign was to allow for more easily adding functionality like this, so it's potentially possible I could get around to it sooner than later.
	</description>
			<title>View posted schedule from a stop</title>
		</Manager>
		<Manager Number="11">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #19</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/19</url>
			<description>
		What steps will reproduce the problem? Schedule a reminder Update the app Wait for the reminder What is the expected output? What do you see instead? Android doesn't seem to be restarting the TripService, and so the reminder alarms are removed. The user has to go and re-save a reminder, add a new reminder, or reboot their phone. Figure out a way for Android to run the server post-update, or always run the service when the user runs the app.
	</description>
			<title>Reminders don't restart after an update</title>
		</Manager>
		<Manager Number="12">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #20</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/20</url>
			<description>
		Reported by eric.hanchrow, May 1, 2010 What steps will reproduce the problem? Start the app Somehow get to a page that shows the arrival times for a particular stop Tap the line corresponding to any arrival. You'll see &quot;Bus options&quot;; one of those options is &quot;Set a reminder&quot;; tap it. What is the expected output? What do you see instead? What I'd prefer is for the dumb soft keyboard to NOT pop up, thus hiding half the screen. But in fact, it does pop up, which is annoying: I have zero interest in giving this reminder a name; I just want to be alerted when the bus is going to arrive. I have to hit the &quot;back&quot; button to get the keyboard out of the way. I realize this is just one keystroke, but it irks me every time. (Also, I use a non-standard soft keyboard, which is larger than the built-in one, so it's even more annoying.) What version of the product are you using? On what operating system? Android app, version 13. Comment 1 by project member paulcwatts, May 6, 2010 Hmm, the keyboard doesn't pop up on my phones (G1 and Droid). But yeah, I've been annoyed at starting on the 'name' field when all I want is a one-shot reminder. Status: Accepted Owner: paulcwatts Comment 2 by project member paulcwatts, May 7, 2010 This does happen on a myTouch 3G, so it just have something to do with physical/virtual keyboards. Comment 5 by eric.hanchrow, Oct 28, 2010 Let me amend this a little (perhaps this should become a separate issue): setting reminders takes way too many steps. I realize some of these are outside of your control, but in the interest of being a whiner, let me enumerate the steps I go through every morning before leaving home: Push the phone's lock button to wake it up Tap the OneBusAway icon for my stop Tap the particular line that corresponds to the arrival time I want tap &quot;Set a reminder&quot; tap the &quot;Reminder Time&quot; dropdown tap &quot;5 minutes&quot; (because I don't like the default of 10 minutes) tap the back button to move the onscreen keyboard out of the way tap &quot;Save&quot; raise the phone's volume to ensure I actually hear the alarm when it goes off That's nine separate actions, each of which is crucial. It'd be ideal if there were some way to boil this down to one action (after unlocking the phone, which of course you have no control over) -- perhaps by having an icon that means &quot;set an alert, for my favorite time interval, on my favorite stop, and oh by the way make sure the sound isn't muted&quot; Comment 6 by devin@twuni.org, Jun 13, 2011 I think that this problem could be solved by moving the 'Name' field down further in the form. The Android OS probably anticipates that that field is the first thing you want to enter because of its position in the form. If it is moved further down, it will naturally no longer be selected by default.
	</description>
			<title>Please don't make me enter a title for reminders</title>
		</Manager>
		<Manager Number="13">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #23</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/23</url>
			<description>
		Honestly I think we can improve the whole pin to make it look better and to have different resolutions for different screen sizes. This is migrated from this bug, where there is a PSD attached: http://code.google.com/p/seattle-bus-bot/issues/detail?id=56
	</description>
			<title>improve the green directional arrows with better/thicker outlines/shadows</title>
		</Manager>
		<Manager Number="14">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #25</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/25</url>
			<description>
		There's no longer an OBA API for it, but people continue to ask for it. Frankly I doubt I will ever have time to do this, but I want to keep something open because it's such a popular feature request. To be clear, this would involve either bringing back Brian's API, integrating OpenTripPlanner, or running my own server. If it were a different server it would have to be kept updated with GTFS updates just like the main OBA server is. Moved from: http://code.google.com/p/seattle-bus-bot/issues/detail?id=83
	</description>
			<title>Trip planning</title>
		</Manager>
		<Manager Number="15">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #26</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/26</url>
			<description>
		I'd still like to do this. I may be able to incorporate it into a neat &quot;get more&quot; UI.
	</description>
			<title>Add option to include arrivals more than 30 minutes out</title>
		</Manager>
		<Manager Number="16">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #30</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/30</url>
			<description>
		Reported by eric.hanchrow, Dec 16, 2010 What steps will reproduce the problem? Somehow get to the page with the magnifying glass in the rightmost top tab, then click it Tap in the text entry area. The soft keyboard appears -- but it's displaying letters, not numbers; in order to type a number, I have to first hit the &quot;123&quot; button in the lower-left corner. What is the expected output? What do you see instead? I'm pretty sure I've seen other apps bring up the numeric keyboard when it's clear from context that I'm only going to want to type some digits. For example, if I use the built-in &quot;Contacts&quot; app, add a new contact, and tap in the &quot;Phone&quot; text entry field, I get a nice telephone-style sixteen-key keyboard, with the digits, and just a couple relevant symbols. I wish OneBusAway did the same thing. What version of the product are you using? On what operating system? (It sure would be nice if there were an easy way to figure out what version of the app I'm using; I have to grovel around inside Settings/Applications to get that info) Version 1.2.8, on Android 2.2 (on a Nexus one, which of course has no physical keyboard) Please provide any additional information below. Comment 1 by project member paulcwatts, Dec 19, 2010 Originally OneBusAway did bring up a digits-only keyboard. But you also need to be able to search for non-number routes like &quot;Link&quot; or &quot;Sounder.&quot; Yes, I'd love to have the digits appear first, because it's more likely that you'll want to search for numbers. Unfortunately there didn't seem to be a way to tell Android to do that. It's worth taking another look to see if they haven't added something in newer SDKs. I'll also add something in Help to get the Version. A cheap way right now is to click on Help / &quot;I found a bug!&quot; and the version is listed in the email template that you are taken to. Comment 2 by devin@twuni.org, Jun 6, 2011 The Android SDK does let you specify the input format so that the numeric keyboard is used. Unfortunately, the numeric keyboard is exclusive and does not let you get back to the 'regular' one. To support both, maybe a toggle next to the input field for the preferred keyboard would suffice. If the most common use case is for strictly numbers and this is the default, then I might never use that little icon except in a 'Ooo, this is new... what does this do?' context. If you need to type something like 'Link' or 'Sounder' and all you get is a numeric keypad, then you'll probably start looking for a way to get a regular keyboard. An icon next to the text field that says 'Abc' would then seem pretty obvious. It's worth experimenting with, I think. Ideally, though, you'd get a numeric keypad by default and the Android OS would provide an integrated way to get back to a regular keyboard. Maybe there is a way to do this. Comment 3 by cookieguru, Jan 22, 2012 Launch this app: https://market.android.com/details?id=com.usps From the landing page, select zip codes. Tap the &quot;Cities in a ZIP code&quot; field. Focus on the only text box. Default keyboard is numeric, and I can switch to my ABC keyboard. This is NOT the &quot;dialer&quot; numeric keyboard but the one with all the symbols.
	</description>
			<title>When searching for numeric stops, switch the soft keyboard to digits</title>
		</Manager>
		<Manager Number="17">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #31</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/31</url>
			<description>
		This is possible, but I'm not sure if we really need it. If it's easy to do and doesn't get in the way.
	</description>
			<title>Option for satellite images on map</title>
		</Manager>
		<Manager Number="18">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #34</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/34</url>
			<description>
		The wiki/developer page, as well as the mobile app design considerations page: https://github.com/OneBusAway/onebusaway-application-modules/wiki/Mobile-App-Design-Considerations
	</description>
			<title>Include links to OneBusAway project in the readme</title>
		</Manager>
		<Manager Number="19">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #35</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/35</url>
			<description>
		Repro: Go out of range of OneBusAway so the Out of range dialog pops up. Look at the header of the dialog Expected: 3. You should be able to read the text 4. The text is white-on-white, it makes it really difficult to read.
	</description>
			<title>White on white text in dialogs</title>
		</Manager>
		<Manager Number="20">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #36</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/36</url>
			<description>
		We're on 1.8.5, they're on 2.0.6.
	</description>
			<title>Update Jackson libraries</title>
		</Manager>
		<Manager Number="21">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #37</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/37</url>
			<description>
		See this discussion: https://groups.google.com/forum/#!topic/onebusaway-developers/MsGNjBDdFXs This would require a few things to happen: The app would always have to get the user's location on first launch Either get the list of regions and select the closest, or allow the user to select one; Remove the hardcoded locations in the various areas around the app; Persist the selected region and allow the user to choose a different one through preferences Figure out what to do with the out of range dialog. Do we want to have people choose from the region list? Update the product descriptions to include the various regions (when they are deployed)
	</description>
			<title>Support multiple OBA servers in different regions</title>
		</Manager>
		<Manager Number="22">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #38</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/38</url>
			<description>
		This time I can potentially add it directly to the app, since it changes infrequently enough.
	</description>
			<title>Add User Guide back</title>
		</Manager>
		<Manager Number="23">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #42</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/42</url>
			<description>
		It looks like we may need to expand our search radius -- perhaps the default radius should be expanded?
	</description>
			<title>Unable to search for the &quot;A Line&quot; from downtown Seattle</title>
		</Manager>
		<Manager Number="24">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #43</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/43</url>
			<description>
		The length of the route name &quot;Sounder / South ...&quot; pushes the long description far to the right.
	</description>
			<title>Sounder route popup on map obscures the entire map</title>
		</Manager>
		<Manager Number="25">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #44</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/44</url>
			<description>
		java.lang.NullPointerException at com.joulespersecond.seattlebusbot.ReportProblemFragmentBase.onLoadFinished(ReportProblemFragmentBase.java:89) at com.joulespersecond.seattlebusbot.ReportProblemFragmentBase.onLoadFinished(ReportProblemFragmentBase.java:38) at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:424) at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:392) at android.support.v4.content.Loader.deliverResult(Loader.java:103) at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:221) at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61) at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461) at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47) at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474) at android.os.Handler.dispatchMessage(Handler.java:99) at android.os.Looper.loop(Looper.java:154) at android.app.ActivityThread.main(ActivityThread.java:4945) at java.lang.reflect.Method.invokeNative(Native Method) at java.lang.reflect.Method.invoke(Method.java:511) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551) at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>Crash when sending problem reports</title>
		</Manager>
		<Manager Number="26">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #45</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/45</url>
			<description>
		It occurred to me the way we persist the old arrival information might end up being more of a problem that a solution. In particular this case: Have OneBusAway active on the arrivals screen; Have your phone go to sleep A few minutes later, bring your phone back from sleep In onResume, we show the old data and immediately start fetching new data. However, the old data is still on the screen just as we had left it. At some point in the future, the app gets the new data and replaces the old data -- the times appear to jump. Could this be the reason why people sometimes complain the data is jumpy? Two solutions: onResume, refresh the displayed data to accurately reflect the current time. If the data is too old, discard it completely and show the large &quot;loading&quot; data. How old is too old? 10 minutes? This may be a problem for people who want to keep the app open in areas with no service (the tunnel), but that may be a power user feature.
	</description>
			<title>Refresh old arrival data on resume, discard if it is too old</title>
		</Manager>
		<Manager Number="27">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #46</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/46</url>
			<description>
		When using shortcuts to stops, the app might not display the shortcut that was actually activated. Repro: Open OneBusAway using the App icon in the app drawer Press the phone back button (bottom left) multiple time, until the app quit completely, back to the phone home screen Open shortcut to stop A. Schedule of stop A is showing Press phone Home button Open shortcut to stop B. Schedule of stop B is showing Press phone Home button Open shortcut to stop A. Schedule of stop B is showing Workaround: After step 7 above, press the back button on the phone. This correctly display the first stop schedule. Notes: once the bug is triggered, clicking the back button of the app (one bus away logo at the top left) bring you to the map. From that point, going back to the home screen and clicking the first shortcut brings you to the map instead of the schedule of the stop.
	</description>
			<title>Shortcuts not always showing the shortcut stop</title>
		</Manager>
		<Manager Number="28">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #47</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/47</url>
			<description>
		See this conversation on Twitter: https://twitter.com/leggett/status/279304677294747648 The idea would be to have the App Icon go to My Stops from a Stop, then to the Map. I know a lot of people, including me, like the ability to go directly to the map from stop, but this may have the added benefit of prioritizing the My Stops screen (which isn't very discoverable as it is). This could also be done for Routes, where the App Icon on the Route screen goes to My Routes, then to the Map. Getting back to the map would then require two taps on the same target.
	</description>
			<title>Consider improvements in app icon navigation: Up vs Home</title>
		</Manager>
		<Manager Number="29">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #48</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/48</url>
			<description>
		Right now we'll warn the user that you can't use it in Airplane Mode right as you start the app. Since I added this warning, I've added much better error reporting, so there's no sense in pre-warning the user. In particular, this error is totally useless if you want to use the app with Airplane Mode enabled but Wifi turned on (which I didn't realize was possible, at least it probably wasn't when I added the feature). I just need to move the airplane mode check into the places where I already check for connectivity: https://github.com/paulcwatts/onebusaway-android/blob/develop/src/com/joulespersecond/seattlebusbot/UIHelp.java#L254 We can reword the Toast as well to say we don't need it, but it's probably preventing you from accessing the Internet.
	</description>
			<title>Only warn that Airplane Mode is on when we can't connect</title>
		</Manager>
		<Manager Number="30">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #50</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/50</url>
			<description>
		I just built from my fork -- offby1/onebusaway-android@6e5bcb6 -- and saw this: Note how the entry for route 16 says &quot;You are out of OneBusAway's service area. Go there now?&quot; That seems out of place.
	</description>
			<title>&quot;Out of range&quot; warning appeared in a funny place</title>
		</Manager>
		<Manager Number="31">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #51</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/51</url>
			<description>
		It would be great if you could convert the APK file to a BAR, so the Android version of the app can be either be side-loaded on a Z10/Q10 or hosted on blackberry world. https://bdsc.webapps.blackberry.com/android/bpaa/
	</description>
			<title>Blackberry 10 Conversion</title>
		</Manager>
		<Manager Number="32">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #52</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/52</url>
			<description>
		Adding debug statements to track regions logic will help developers that aren't as familiar with the source code follow the current state of the application at runtime and make improvements. Debug statements should be added so they are only visible in the debug configuration (i.e., not in release): if (BuildConfig.DEBUG) { Log.d(TAG, &quot;debug message goes here&quot;); }
	</description>
			<title>Add debug statements to track regions logic</title>
		</Manager>
		<Manager Number="33">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #54</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/54</url>
			<description>
		Android docs explicitly say that super.onCreate() should be called in Application.onCreate(): http://developer.android.com/reference/android/app/Application.html#onCreate() ...and this isn't currently being done in com.joulespersecond.seattlebusbot.Application: https://github.com/OneBusAway/onebusaway-android/blob/develop/src/com/joulespersecond/seattlebusbot/Application.java#L35 There should be some discussion surrounding this, as we don't want to break anything if its working and I don't know if there are other reasons for not doing this.
	</description>
			<title>super.onCreate() isn't called in Application.onCreate()</title>
		</Manager>
		<Manager Number="34">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #56</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/56</url>
			<description>
		There are many advantages for switching to the new Maps API, some detailed here: https://developers.google.com/maps/documentation/android/ Drawbacks: Need to add Google Play services SDK, which is only compatible with Android 2.2 and higher - We currently support Android 2.1 as well, so we'd need to maintain two versions of the app going forward, or drop support for Android 2.1. As of May 29, 2013, Android 2.1 has only 1.7% of market share, so dropping support wouldn't be horrible. Need to redraw stop icons based on map bearing - currently, OBA shows small arrows on the bus stop icons to indicate direction of travel of the bus. Since the top of the screen always faces north on the map, these arrows consistently face the right direction. Maps API v2 allows the user to change change the bearing of the map (e.g., the top of the screen faces east on the map instead of north) via multitouch. So, we'd need to add a listener to the camera change events and redraw the icons when the bearing changed by some amount, so that the arrows were pointing in the correct direction, given the current bearing of the map. Items to research: Does Maps API v2 play well with ActionBarSherlock?
	</description>
			<title>Upgrade to Android Maps API v2</title>
		</Manager>
		<Manager Number="35">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #58</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/58</url>
			<description>
		http://developer.android.com/reference/android/support/v4/app/NavUtils.html We should use this to implement the Up navigation implemented in NavHelp.java.
	</description>
			<title>New NavUtils support library for up navigation</title>
		</Manager>
		<Manager Number="36">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #59</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/59</url>
			<description>
		I'm using ant to build the project as per the README, but get the following error: BUILD FAILED
/home/joshua/projects/onebusaway-android/build.xml:7: Source resource does not exist: /home/joshua/projects/onebusaway-android/local.properties
 I see there is a local.properties file in the tests subdirectory which has a comment saying it should not be commited to the repo. What are the steps for building the project with ant? Thanks!
	</description>
			<title>Build failed with ant</title>
		</Manager>
		<Manager Number="37">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #60</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/60</url>
			<description>
		I would like to see if it would be possible to have this app be made available outside of Google Play? This is an important app on my phone, and having it available to install outside of Google Play would go far towards not having gapps on my device. Thanks!
	</description>
			<title>Enhancement: distribute app via f-droid or some other method besides Google Play</title>
		</Manager>
		<Manager Number="38">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #61</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/61</url>
			<description>
		i don't see any reason why the play store version needs a number of these testing permissions: mock location sources for testing phone status and identity run at startup - why? test access to protected storage view network connections prevent tablet from sleeping
	</description>
			<title>reduce permission requests</title>
		</Manager>
		<Manager Number="39">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #62</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/62</url>
			<description>
		would like to see the app zoom to the current location on startup.
	</description>
			<title>zoom to current location on startup</title>
		</Manager>
		<Manager Number="40">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #64</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/64</url>
			<description>
		The old Location API is now outdated by Google Play Services Location Services (available on Android 2.2 and up): http://developer.android.com/training/location/retrieve-current.html The old Location.getLastKnownLocation() can be buggy on some devices, resulting in the app not getting a location fix quickly and users needing to wait for a new location update, or worse, providing a wrong location (resulting in the user being attached to the wrong OBA region). We should update the app to use Google Play Services Location Services, which is more reliable. We should include a fallback to the old Location API, since some devices may not have Google Play Services installed.
	</description>
			<title>Update from original Location API to Google Play Services Location Services</title>
		</Manager>
		<Manager Number="41">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #65</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/65</url>
			<description>
		Right now the Twitter URL is hard-coded to Puget Sound. The Regions API was just recently updated to include a Twitter URL for each region. We should display the Twitter URL for the region in the app when a region is selected, and default to the hard-coded version when a custom URL is selected.
	</description>
			<title>Show Twitter URL of the currently selected region</title>
		</Manager>
		<Manager Number="42">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #67</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/67</url>
			<description>
		Would it be too much of an issue for you to QUICKLY implement a feature allowing users to jump directly to the &quot;favorites&quot; (starred bus routes and locations) section upon opening the app?  I hate having to clutter my Android desktop with a bunch of nearly redundant icons, all for the sake of getting quicker access to route information.  I need this particular feature ASAP.  Now later on it would be nice if we could also organize our favorites into folders. Actually I have a bunch of ideas that I could pass over to you. Just too bad I don't have any Java programming experience....
	</description>
			<title>Add an option to show favorites rather than map as main screen</title>
		</Manager>
		<Manager Number="43">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #68</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/68</url>
			<description>
		There's an NPE happening in the wild here: https://github.com/OneBusAway/onebusaway-android/blob/master/src/com/joulespersecond/oba/region/RegionUtils.java#L81 I suspect that the null pointer that's causing it is the fact that getDistanceAway() returns a Float but the return value being assigned to a float. getDistanceAway() can return null if region.getBounds() is null. Nothing else on that line seems like it could be causing an NPE. java.lang.NullPointerException at com.joulespersecond.oba.region.RegionUtils.getClosestRegion(RegionUtils.java:81) at com.joulespersecond.oba.region.ObaRegionsTask.onPostExecute(ObaRegionsTask.java:123) at com.joulespersecond.oba.region.ObaRegionsTask.onPostExecute(ObaRegionsTask.java:1) at android.os.AsyncTask.finish(AsyncTask.java:417) at android.os.AsyncTask.access$300(AsyncTask.java:127) at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:429) at android.os.Handler.dispatchMessage(Handler.java:99) at android.os.Looper.loop(Looper.java:130) at android.app.ActivityThread.main(ActivityThread.java:3691) at java.lang.reflect.Method.invokeNative(Native Method) at java.lang.reflect.Method.invoke(Method.java:507) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:907) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:665) at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>NPE in RegionUtils</title>
		</Manager>
		<Manager Number="44">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #69</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/69</url>
			<description>
		Happened a couple times in the wild. v1.6.0. java.lang.IllegalArgumentException: Location must be a valid location at com.joulespersecond.oba.region.RegionUtils.isLocationWithinRegion(RegionUtils.java:195) at com.joulespersecond.oba.region.RegionUtils.isLocationWithinRegion(RegionUtils.java:219) at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadFinished(StopMapController.java:245) at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadComplete(StopMapController.java:266) at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadComplete(StopMapController.java:1) at android.support.v4.content.Loader.deliverResult(Loader.java:103) at com.joulespersecond.seattlebusbot.map.StopMapController$StopsLoader.deliverResult(StopMapController.java:329) at com.joulespersecond.seattlebusbot.map.StopMapController$StopsLoader.deliverResult(StopMapController.java:1) at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:221) at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61) at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461) at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47) at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474) at android.os.Handler.dispatchMessage(Handler.java:99) at android.os.Looper.loop(Looper.java:130) at android.app.ActivityThread.main(ActivityThread.java:3683) at java.lang.reflect.Method.invokeNative(Native Method) at java.lang.reflect.Method.invoke(Method.java:507) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:875) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:633) at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>IllegalArgumentException: Location must be a valid location</title>
		</Manager>
		<Manager Number="45">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #70</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/70</url>
			<description>
		Haven't gotten to investigate this. It only happened 5 times this week. java.lang.RuntimeException: An error occured while executing doInBackground() at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137) at java.util.concurrent.FutureTask$Sync.innerSetException(FutureTask.java:274) at java.util.concurrent.FutureTask.setException(FutureTask.java:125) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:308) at java.util.concurrent.FutureTask.run(FutureTask.java:138) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1088) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:581) at java.lang.Thread.run(Thread.java:1019) Caused by: java.lang.NullPointerException at com.joulespersecond.oba.request.ObaRoutesForLocationRequest$Builder.(ObaRoutesForLocationRequest.java:40) at com.joulespersecond.seattlebusbot.MySearchRoutesFragment$MyLoader.loadInBackground(MySearchRoutesFragment.java:227) at com.joulespersecond.seattlebusbot.MySearchRoutesFragment$MyLoader.loadInBackground(MySearchRoutesFragment.java:1) at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:240) at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51) at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40) at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:306) ... 4 more
	</description>
			<title>NPE in ObaRoutesForLocationRequest.Builder</title>
		</Manager>
		<Manager Number="46">
			<labels>
				<label>bug</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #72</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/72</url>
			<description>
		I had thought we decided to have the custom API server be a URL, rather than a server. However, in this commit: 1af6403#src/com/joulespersecond/oba/ObaContext.java The custom URL is being prepended with &quot;http://&quot;, so you still add just a server name. What's worse, since it's actually not joined as a server/URL, you actually have to have an end slash to get it to work properly. Adding &quot;test.myserver.com&quot; doesn't work, but &quot;test.myserver.com/&quot; does. I'd expect that it didn't automatically prepend http://, so you actually would put a URL as the API server. Come to think of it, we should also change the Preference string to &quot;API URL&quot; rather than &quot;Server&quot;.
	</description>
			<title>Confusing issue around a custom API server</title>
		</Manager>
		<Manager Number="47">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #76</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/76</url>
			<description>
		Currently, according to the OBA REST API docs for arrival times, the API only returns arrivals for the next 35 minutes by default. If a bus is estimated to arrive in 36 or more minutes from now, OBA Android displays a message: There are no upcoming arrivals at this stop. For example: This is being interpreted by users in Tampa as there are no more buses running for the rest of the day, even if there is a bus estimated to arrive in 36 minutes. Tampa has some very large headways of 30 minutes or longer. We should clarify this message to say: There are no arrivals in the next 35 minutes at this stop. NOTE: In this same situation, the OBA iPhone app says: No arrivals in the next 30 minutes We should double-check to see whether the iPhone app is using a custom minutesBefore parameter to change from the default 35 minutes, or whether the OBA REST API docs or the OBA iPhone app user message is wrong.
	</description>
			<title>Clarify &quot;There are no upcoming arrivals&quot; message</title>
		</Manager>
		<Manager Number="48">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #85</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/85</url>
			<description>
		Interesting request from a Twitter user to upload this application to the Amazon App Store.
	</description>
			<title>Submit to Amazon App Store.</title>
		</Manager>
		<Manager Number="49">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #86</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/86</url>
			<description>
		Convert app to use Amazon Maps API when installed on a Kindle Fire. Related to #85.
	</description>
			<title>Add support for amazon maps api on amazon app store version</title>
		</Manager>
		<Manager Number="50">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #87</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/87</url>
			<description>
		Details on process here: http://developer.android.com/sdk/installing/migrate.html But there are a lot of issues getting to work properly when including a library project such as ActionBarSherlock. Here's the best resource I've found yet to get everything working properly: http://stackoverflow.com/a/16639227/937715
	</description>
			<title>Migrate to Gradle build process and Android Studio</title>
		</Manager>
		<Manager Number="51">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #89</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/89</url>
			<description>
		As discussed on the OBA dev list, we'd like to support experimental servers in the OBA apps. This would involve: Consuming a new experimental boolean value for each region from the Regions API Only using servers with experimental set to false AND active set to true, by default Allowing the user to opt-in to including experimental servers (i.e., experimental set to true) for manual or automatic selection, via a preference If the user chooses to enabled this option, a message is displayed &quot;Warning: Experimental regions may not have real-time info and may not always be available. Are you sure you want to enable experimental regions?&quot;. If the user selects &quot;Yes&quot;, then regions with experimental set to true AND active set to true are used in the app for both manual and automatic region selection. If the user deselects &quot;Enabled experimental regions&quot;, or cancels out of the enabling dialog, then all regions with &quot;experimental&quot; set to true are again removed from consideration in the app (i.e., same as default setting).
	</description>
			<title>Add support for experimental servers</title>
		</Manager>
		<Manager Number="52">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #94</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/94</url>
			<description>
		Unknown repro. Version 1.6.4 This is the only crash with any &quot;large&quot; reporting (13 reports this week): java.lang.NullPointerException at com.joulespersecond.seattlebusbot.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:258) at com.joulespersecond.seattlebusbot.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:61) at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:427) at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:395) at android.support.v4.content.Loader.deliverResult(Loader.java:104) at com.joulespersecond.seattlebusbot.ArrivalsListLoader.deliverResult(ArrivalsListLoader.java:53) at com.joulespersecond.seattlebusbot.ArrivalsListLoader.deliverResult(ArrivalsListLoader.java:27) at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:223) at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61) at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461) at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47) at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474) at android.os.Handler.dispatchMessage(Handler.java:99) at android.os.Looper.loop(Looper.java:137) at android.app.ActivityThread.main(ActivityThread.java:5419) at java.lang.reflect.Method.invokeNative(Native Method) at java.lang.reflect.Method.invoke(Method.java:525) at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1187) at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1003) at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>NullPointerException at com.joulespersecond.seattlebusbot.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:258)</title>
		</Manager>
		<Manager Number="53">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #97</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/97</url>
			<description>
		As discussed here, we'd like OBA Android to follow similar code style guidelines as Android itself: http://source.android.com/source/code-style.html We can use the AOSP style guide template for IntelliJ from latest Android code with Android Studio: https://android.googlesource.com/platform/development/+/master/ide/intellij/codestyles/AndroidStyle.xml Based on this SO post, you can drop this AndroidStyle.xml file into the Android Studio codestyles directory, which for me is in my user preferences directory C:\Users\barbeau\.AndroidStudioPreview\config\codestyles. @paulcwatts Thoughts on officially adopting this code style, and adding guidance to README and CONTRIBUTIONS to use this style for contributions? This might result in several initial formatting commits to fully bring the project in line with the style guide.
	</description>
			<title>Add code style guide and template</title>
		</Manager>
		<Manager Number="54">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #101</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/101</url>
			<description>
		The current plural subtext that indicates how late a bus is running is phrased as &quot;X minutes delay&quot;, to match the &quot;X minutes early&quot; text: This doesn't sound natural to me. IMO, more natural plural alternatives would be: &quot;X minutes delayed&quot; &quot;X minute delay&quot; @paulcwatts Do you have strong feelings on this? I'm ok with leaving it as-is if you strongly prefer the current wording, otherwise I would recommend changing to one of the above.
	</description>
			<title>Change &quot;X minutes delay&quot; text?</title>
		</Manager>
		<Manager Number="55">
			<labels>
				<label>accessibility</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #103</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/103</url>
			<description>
		More info about the StopInfo project on OBA Dev list here. PR that added this feature to OBA iPhone: OneBusAway/onebusaway-iphone#245 To implement this, we'd need to: Consume StopInfo server url from Regions API Show info button on arrival info fragment, if the StopInfo url is not null for the current region Direct the user to the StopInfo server url when they tap on the info button More details are in the above links.
	</description>
			<title>Add support for StopInfo project to help blind riders to better locate bus stops</title>
		</Manager>
		<Manager Number="56">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #104</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/104</url>
			<description>
		From Google Play (Galaxy S4 (jfltevzw)): I have to clear reminder notifications many times, even after the bus has departed. Up to 30 minutes afterwards! I recall a few others user reporting this too.
	</description>
			<title>Reminder notifications are triggered again after being dismissed</title>
		</Manager>
		<Manager Number="57">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #106</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/106</url>
			<description>
		In OBA iOS, there is a 100 mile distance limiter placed on automatic region selection. In other words, if the device is detected as being more than 100 miles from the closest OBA region, then automatic selection is aborted and the user is prompted to manually select the region. I'd like to implement this in Android as well, since I believe this would cut down on some of the instances of users being connected to the wrong OBA region. If the device location error is so great that its over 100 miles from any instance, the probability of them being connected to the correct region is fairly slim. Huge location errors are also likely biasing incorrect attachments towards regions closer to (0,0), since this lat/long is a common location error IME (and we're not currently doing any filtering to avoid considering (0,0) a valid location - something else to consider, since if a user is actually at (0,0), they have bigger problems).
	</description>
			<title>Add distance limiter to automatic region selection</title>
		</Manager>
		<Manager Number="58">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #107</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/107</url>
			<description>
		Now that OBA iOS is including info footer in feedback emails, we should add the word &quot;Android&quot; to the subject line of OBA Android feedback email to allow clear distinction between the two sources.
	</description>
			<title>Add &quot;Android&quot; to &quot;Contact Us&quot; email subject</title>
		</Manager>
		<Manager Number="59">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #108</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/108</url>
			<description>
		From Atlanta user: When I click on a particular stop on the map, I wish the show routes option would automatically show up, instead of me having to click &quot;Show routes&quot; to see them. As a personal preference, I like to immediately see which routes serve that stop before I click on &quot;Show arrivals&quot; for more information. That way, if I click on the wrong stop because it is not served by that route, I can tap another stop immediately instead of needing to check which route. I know that if I click &quot;Show routes,&quot; the preference will stay, but it will reset itself when the app is relaunched. I would prefer the &quot;Show route&quot; information shown by default I would imagine screen real-estate on small screen devices is probably why &quot;Show routes&quot; is hidden by default, and I don't think we should change the default behavior. However, seems like it would be a good idea to keep whatever state the user last selected.
	</description>
			<title>Persist state of &quot;Show routes&quot; between app executions</title>
		</Manager>
		<Manager Number="60">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #112</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/112</url>
			<description>
		@paulcwatts I noticed your Travis branch here: https://github.com/OneBusAway/onebusaway-android/tree/Travis ...and account on Travis CI: https://travis-ci.org/OneBusAway/onebusaway-android Thanks for working on this, its been on my TODO list for a while but I haven't gotten around to it. Adding the issue here to track progress, as I might have more time to work on this soon ((also for posterity, here's our past conversation related to CI here). From your commit history, looks like we just need to add support for the Google APIs? Is this the last missing step?
	</description>
			<title>Add continuous integration via Travis CI build server</title>
		</Manager>
		<Manager Number="61">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #120</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/120</url>
			<description>
		From a former OBA iPhone user: On the iPhone OneBusAway app, if you click on a specific bus's status, one of your choices is &quot;Vehicle Info&quot; which leads to a screen that shows the vehicle number (not the route number) and a list of times that the bus reached previous stops and is projected to reach future stops. This functionality is valuable for estimating when a specific bus -- say, the one my kid is on -- will reach a specific stop. I don't see how to access this functionality on the Android version. If we want feature parity with OBA iPhone we should add this feature.
	</description>
			<title>Add &quot;Vehicle Info&quot; option to provide arrival list/map for a single vehicle</title>
		</Manager>
		<Manager Number="62">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #130</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/130</url>
			<description>
		The update to Android Gradle plugin 0.9 requires renaming the test folder, which we haven't done yet. Per http://tools.android.com/tech-docs/new-build-system/migrating_to_09: If you have instrumentation tests (or other types of tests) in your project, note that we changed the name and folder from instrumentation tests to android tests to reflect the fact that this facility is not just for instrumentation tests but for plain JUnit tests (running on a device) and eventually also UI automator tests. To update your project: Rename your instrumentTest folders to androidTest, e.g. git mv app/src/instrumentTest app/src/androidTest. Alternatively you can tell gradle to keep using the old folder by relocating your sourcesets. Update any test dependencies from instrumentTestCompile to androidTestCompile: dependencies { -instrumentTestCompile 'com.jayway.android.robotium:robotium-solo:4.3.1' +androidTestCompile 'com.jayway.android.robotium:robotium-solo:4.3.1' }
	</description>
			<title>Tests are broken after update to Android Gradle plugin 0.9</title>
		</Manager>
		<Manager Number="63">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #136</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/136</url>
			<description>
		Selecting the show stop on map button on the stop arrivals view briefly centers the map on the stop location and then recenters the user on their current location. I think it would be more useful to leave the map centered on the stop location until the user takes an action. Same issue seems to appear when selecting the show route on map button.
	</description>
			<title>Show stop button centers on users current location</title>
		</Manager>
		<Manager Number="64">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #145</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/145</url>
			<description>
		Travis build: https://travis-ci.org/OneBusAway/onebusaway-android/builds/28670672 ...failed with these messages: ...
Do you accept the license 'android-sdk-license-5be876d5' [y/n]: n
Package Android SDK Build-tools, revision 19.1 not installed due to rejected license 'android-sdk-license-5be876d5'.
...
$ echo no | android create avd --force -n test -t &quot;Google Inc.:Google APIs:&quot;$ANDROID_API_LEVEL --abi $ANDROID_ABI
Error: Target id is not valid. Use 'android list targets' to get the target ids.
The command &quot;android create avd --force -n test -t &quot;Google Inc.:Google APIs:&quot;$ANDROID_API_LEVEL --abi $ANDROID_ABI&quot; failed and exited with 1 during .
 It appears that the Android SDK license has changed with the release of L preview: https://twitter.com/travisci/status/482255297738985473 Here's an example of the new license to include: https://gist.github.com/BanzaiMan/545cf6d6fe9639c7c7cd#file-travis-yml-L9 Here's the Travis issue describing the problem: travis-ci/travis-ci#2466 I'll submit a PR to fix this shortly.
	</description>
			<title>Travis builds are failing</title>
		</Manager>
		<Manager Number="65">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #151</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/151</url>
			<description>
		As mentioned in #104 (comment), the current Intent actions for the AlarmReceiver in the AndroidManifest.xml don't match the constants defined in TripService. If I understand the general design of AlarmReceiver and TripService correctly, this means that an external app could never actually invoke the TripService via an Intent, since the Intent actions that match the intent-filter aren't actually used within the TripService.
	</description>
			<title>AlarmReceiver Intent actions in manifest don't match constants defined in TripService</title>
		</Manager>
		<Manager Number="66">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #157</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/157</url>
			<description>
		I saw this comment in the Google Play Developer console today: On August 31st, 2014 the feature graphic will become mandatory and you will have to supply one before you can make any changes to your Store listing. In the Play Store, the feature graphic is shown at the top of the store listing and is a powerful tool to show off your app. Feature Graphic requirements: Feature Graphic 1024 w x 500 h JPG or 24-bit PNG (no alpha)
	</description>
			<title>Add Feature Graphic to Google Play</title>
		</Manager>
		<Manager Number="67">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #160</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/160</url>
			<description>
		Following discussions on the OBA developer list and OBA Board discussions, we have a general consensus that an ICLA should be signed by 3rd party contributors. Here's the click-to-accept ICLA as a Google Doc Form: https://docs.google.com/forms/d/12jV-ByyN186MuPotMvxJtNKtSaGGTnEHm8rXomM2bm4/viewform
	</description>
			<title>Add ICLA to readme</title>
		</Manager>
		<Manager Number="68">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #162</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/162</url>
			<description>
		Not sure when this happened, but for Google Play Services apparently the LocationClient is now deprecated: https://developer.android.com/reference/com/google/android/gms/location/LocationClient.html ...and we should be using LocationServices.FusedLocationApi instead: https://developer.android.com/reference/com/google/android/gms/location/LocationServices.html#FusedLocationApi As of the creation of this ticket the Location docs haven't yet caught up - they still say to use the LocationClient: http://developer.android.com/training/location/retrieve-current.html
	</description>
			<title>Use `FusedLocationApi` instead of `LocationClient` for Location</title>
		</Manager>
		<Manager Number="69">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #163</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/163</url>
			<description>
		Discussed here, in context of adding a Finnish translation: https://groups.google.com/forum/#!topic/onebusaway-developers/IIbTIlv85L4 Finnish translation is ticketed in #159.
	</description>
			<title>Add option to change preferred distance units (metric, imperial)</title>
		</Manager>
		<Manager Number="70">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #165</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/165</url>
			<description>
		If you update the Android SDK to &quot;Google Repository&quot; v11 and Google Play services v19, the build will fail since it can't find com.google.android.gms:play-services:5.0.77. According to: http://tools.android.com/knownissues https://groups.google.com/forum/#!msg/adt-dev/NPCx-2udgDk/A3-kMSjeJHAJ ...Google found critical bugs in Google Play services v5.0.77 and yanked the published artifact from the repo without providing any redirection to the new artifact. According to the above, the newest Google Play services version that we should be using is 5.2.08. @paulcwatts This also means that we shouldn't push the current beta to production, since that is using the buggy v5.0.77. I'll submit a PR shortly with the updated version - we should push a new beta out with this fix.
	</description>
			<title>Build fails w/ Android SDK &quot;Google Repository&quot; v11</title>
		</Manager>
		<Manager Number="71">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #167</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/167</url>
			<description>
		Travis now recommends that you explicitly specify required components: http://docs.travis-ci.com/user/languages/android/#Pre-installed-components The downside of explicitly referencing components is that this can significantly increase the Travis build times, since components are installed at run-time instead of using preexisting images with common components already installed. As seen in #165 and #166, though, it may be worth it to avoid failed builds.
	</description>
			<title>Update Travis config to explicitly reference required components</title>
		</Manager>
		<Manager Number="72">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #168</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/168</url>
			<description>
		The below exception is thrown internally (so the user never sees it, nor does the app crash) with orientation changes: 08-12 17:13:36.368  20568-20568/com.joulespersecond.seattlebusbot W/Bundle﹕ Attempt to cast generated internal exception:
    java.lang.ClassCastException: java.lang.Float cannot be cast to java.lang.Integer
            at android.os.Bundle.getInt(Bundle.java:1000)
            at com.joulespersecond.seattlebusbot.map.StopMapController.setState(StopMapController.java:177)
            at com.joulespersecond.seattlebusbot.map.googlemapsv1.BaseMapActivity.setMapMode(BaseMapActivity.java:362)
            at com.joulespersecond.seattlebusbot.map.googlemapsv1.BaseMapActivity.initMap(BaseMapActivity.java:193)
            at com.joulespersecond.seattlebusbot.map.googlemapsv1.BaseMapActivity.onCreate(BaseMapActivity.java:149)
            at com.joulespersecond.seattlebusbot.HomeActivity.onCreate(HomeActivity.java:130)
            at android.app.Activity.performCreate(Activity.java:5231)
            at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)
            at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2169)
            at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2264)
            at android.app.ActivityThread.handleRelaunchActivity(ActivityThread.java:3755)
            at android.app.ActivityThread.access$900(ActivityThread.java:144)
            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1211)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:136)
            at android.app.ActivityThread.main(ActivityThread.java:5139)
            at java.lang.reflect.Method.invokeNative(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:515)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)
            at dalvik.system.NativeStart.main(Native Method)
 I missed a Bundle cast when I refactored map zoom from an int to a float. I'll submit a PR for this shortly.
	</description>
			<title>Exception when changing orientation of map view</title>
		</Manager>
		<Manager Number="73">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #171</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/171</url>
			<description>
		We're increasingly finding that seeing the Stop IDs somewhere (subtlety) in the app would be extremely useful for debugging issues, both in having users tell us which stops they had problems at, as well as immediately seeing Stop IDs ourselves during testing. OBA iOS shows the Stop ID as part of the arrival list header:
	</description>
			<title>Show stop_code inside the app</title>
		</Manager>
		<Manager Number="74">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #172</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/172</url>
			<description>
		This has come up multiple times - people want to deploy OBA Android for their own transit agency, but want to re-brand it with colors/logos and even custom icons and Google Play store listings. It would be nice to be able to support re-branding within the application, without forking the project. This way everyone continues to benefit from improvements to the app. I see two possible solutions: Dynamic re-skinning at run time inside the app Use Gradle build flavors to manage separate APK creation for each brand Option 1 is the easiest to manage - you’d still have a single “OneBusAway” app on the market. When the user downloaded the app, the presentation to the user would be re-skinned with whatever colors and name should be shown to the user (similar to how a region is selected at runtime). However, this sacrifices the individual brand presence on the app stores. In Option 2, you’d have individual brand presence on the markets, but at the cost of pushing out a new app version per agency per release. Pushing out new branded version would need to be handled by whoever controlled that brand, and each brand would need their own Google Play developer account. Including build flavors in the project also slightly increases complexity of the project. So, whether or not an agency wants their brand to extend to a separate app on Google Play that users download (i.e., “Bear Transit”, with the Bear Transit logo, instead of OBA name/logo) would likely determine whether Option 1 is acceptable. From existing conversations, it seems like agencies want Option 2. For Option 2, see these links for discussions of using build flavors to white-label apps: http://apporia.blogspot.com/2013/11/gradle-and-flavor-groups.html http://stackoverflow.com/questions/20976946/dynamically-generating-product-flavors https://plus.google.com/+CyrilMottier/posts/Dk65EACXqsh http://blog.robustastudio.com/mobile-development/android/building-multiple-editions-of-android-app-gradle/ See discussion at: https://groups.google.com/d/msg/onebusaway-developers/OWkt-1TjRzo/G-fUpXBB-UEJ
	</description>
			<title>Support re-branding/white-labeling without forking project</title>
		</Manager>
		<Manager Number="75">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #176</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/176</url>
			<description>
		I just opened this ticket on iPhone as well (OneBusAway/onebusaway-iphone#320), but I wanted to mirror here so we have a reference specific to Android as well. This was something that @caitbonnar and @jrharshath discussed the other day, and I wanted to capture some info/links related to this. We have all the data we need to simulate the bus position based on a particular trip and schedule (from GTFS / OBA REST APIs) as well as the current time. If we have shapes.txt in GTFS we can simulate precise position, if not position simulation will be rougher. Real-time vehicle position is a little harder - from what I can tell the OBA REST APIs don't have a way to pull back vehicle positions related to a single route/trip (See additional comments below - OBA REST API trips-for-route returns all active trips per route, which include a status element that has real-time and interpolated vehicle position information). However, the OBA SIRI APIs that MTA deployed in NYC do. So, going forward, it would probably make sense to do real-time vehicle position based on the SIRI APIs. I don't believe the SIRI APIs are plug-and-play yet with the rest of the OBA core app modules server-side, but hopefully that will happen soon. Related items: The Transit App shows simulated bus position based on schedule data (on Android, at least - haven't checked iPhone): Transit Map is an open-source web application that shows simulated bus position based on GTFS data TRAVIC and Trajserver together apparently do something similar, although I haven't looked at them in detail yet (they were sent to me). They are both apparently related to this Master's Thesis on &quot;Real-time Movement Visualization of Public Transit Data&quot;. This issue is also related to showing route flow lines (OneBusAway/onebusaway-iphone#319), since a moving vehicle on the map would also indicate direction of flow.
	</description>
			<title>Show bus position on map, either simulated or using real-time data</title>
		</Manager>
		<Manager Number="76">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #179</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/179</url>
			<description>
		Was going through the Testflight crash logs, and found one that appears to have been occurring while the users edit bookmarks. Here's the log: @wizecoder, can you take a look? Fortunately it isn't occurring too often, and as far as I know we haven't had any reports, but there have still been enough crashes that we should look into it.
	</description>
			<title>Crash on bookmark editing</title>
		</Manager>
		<Manager Number="77">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #180</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/180</url>
			<description>
		Currently, if you tap &quot;Contact Us&quot; menu option while having a custom API set, the app does nothing (just returns to map view) and provides no message. We should add an informational message saying that no contact information is available because a custom API is set (contact information for each region comes from the Region API).
	</description>
			<title>Hide &quot;Contact Us&quot; when custom API is set</title>
		</Manager>
		<Manager Number="78">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #183</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/183</url>
			<description>
		Some history - OneBusAway Android used to be &quot;Seattle Bus Bot&quot;. @paulcwatts graciously donated his work to the OneBusAway project and it became the official Android client to OneBusAway. There are still some remnants of this former identity within the project. For example, the core package of the app is &quot;com.joulespersecond&quot;, with the app then split between UI elements from the app's former identity (&quot;seattlebusbot&quot;) and the newer OBA-specific code (&quot;oba&quot;): com.joulespersecond ----&gt;oba ----&gt;seattlebusbot As work has progressed under the OBA banner, the line between these two packages has blurred, making good organization more difficult. However, we had to maintain the original &quot;com.joulespersecond.seattlebusbot&quot; as the core package for the code so that the app would build within Eclipse with ADT and be distributed under the same listing on Google Play. With the Gradle build system, you can now decouple the package name that your code is under (internal to the project) with the application package name used to identify your project (&quot;com.joulespersecond.seattlebusbot&quot;) to Google Play. You can do that by adding the applicationId element to your build.gradle file - this is the ID that is used to identify your app, no matter what your internal package names are. See the Gradle docs for applicationId for details. I'd like to refactor the packages in this project under the official &quot;org.onebusaway.android&quot; namespace, to match the other mobile apps. This will make it easier to organize the current package names and classes for the app, and make it easier for newcomers to find things. Nothing should change in terms of the distribution of the app - we will still build/sign APKs as usual, and we can still deploy APKs via the same Google Play listing, since the applicationId will remain &quot;com.joulerpersecond.seattlebusbot&quot;. This change will also set us up to use build variants (each variant/flavor being defined by different applicationIds in build.gradle), which is our most likely candidate for allowing re-branding of the app without forking the project code (see #172 for details). @paulcwatts Do you have any objections to this? I don't want to erase history, but on the other hand I think this would be a big improvement :).
	</description>
			<title>Refactor core package to &quot;org.onebusaway.android&quot;</title>
		</Manager>
		<Manager Number="79">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #185</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/185</url>
			<description>
		See in production versions 1.6.4 and 1.6.5 on Google Play, via Developer Console (225 reports over 5 months). Based on user comments, seems to happen when launching and then immediately exiting OBA. From a quick look at the stacktrace, it appears that the task to select the region is still running in the background and attempt to access the Activity after it is paused/destroyed. android.view.WindowManager$BadTokenException: Unable to add window -- token android.os.BinderProxy@425cef20 is not valid; is your activity running?
at android.view.ViewRootImpl.setView(ViewRootImpl.java:532)
at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:259)
at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:69)
at android.app.Dialog.show(Dialog.java:286)
at android.app.Activity.showDialog(Activity.java:3125)
at android.app.Activity.showDialog(Activity.java:3075)
at com.joulespersecond.seattlebusbot.map.BaseMapActivity.setMyLocation(BaseMapActivity.java:481)
at com.joulespersecond.seattlebusbot.map.BaseMapActivity.onTaskFinished(BaseMapActivity.java:381)
at com.joulespersecond.oba.region.ObaRegionsTask$2.run(ObaRegionsTask.java:226)
at android.os.Handler.handleCallback(Handler.java:733)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:136)
at android.app.ActivityThread.main(ActivityThread.java:5001)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:515)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:785)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:601)
at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>Crash when starting and then navigating away from HomeActivity</title>
		</Manager>
		<Manager Number="80">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #190</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/190</url>
			<description>
		I'd like to change the beta testing group structure with the goal of: Getting us more beta testers to more thoroughly test production-ready releases Providing alpha releases to other OBA developers via a new alpha channel Currently, to sign up for OBA betas you have to be a member of the onebusaway-developers group. IMO, this doesn't align well with the type of users we want beta testing apps that are candidates for production releases. Beta testers should be power users (or adventurous users), but not necessarily developers. Additionally, if we want to communicate with these beta users, we would have to post to the onebusaway-developers list - which conflicts with most types of communication on the list that is mostly aimed at other developers. Having the beta testing group aimed more at developers also significantly limits the number of potential testers - right now we have 7. I would like to start using the OneBusAway Google+ Group for a larger, better advertised Beta channel to a more casual user group. Then, we could switch the onebusaway-developer group to an Alpha channel that would get early previews of new things like the UI re-design. This would allow us to get better feedback before a full production release via a larger Beta channel, and would open up Alphas for the developers, who are more likely interested in works-in-progress/bleeding edge stuff. For example, right now I'm distributing a debug-signed APK via a Dropbox link for others to test the UI re-design (in PR #177). It would be much easier for other developers to test if they subscribed to the alpha channel, and we could release new UI versions there. The above design our also allow us to keep communication aimed at developers on onebusaway-developers group, and more casual general user feedback in the OneBusAway G+ group. @paulcwatts Any thoughts/comments?
	</description>
			<title>Change beta testing group structure</title>
		</Manager>
		<Manager Number="81">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #193</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/193</url>
			<description>
		This is really an extension of #42. In #182, in my implementation I increased the route search radius, but not the stop search radius (and, I mislabeled the PR title). We should expand the stop search radius to match.
	</description>
			<title>Increase stop search radius parameter</title>
		</Manager>
		<Manager Number="82">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #195</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/195</url>
			<description>
		Here's the stack trace, which has happened 28 times according to Google Play (mainly on older devices (Android 2.3 had this 16 times): java.lang.IllegalArgumentException: View not attached to window manager
at android.view.WindowManagerImpl.findViewLocked(WindowManagerImpl.java:355)
at android.view.WindowManagerImpl.removeView(WindowManagerImpl.java:200)
at android.view.Window$LocalWindowManager.removeView(Window.java:432)
at android.app.Dialog.dismissDialog(Dialog.java:278)
at android.app.Dialog.access$000(Dialog.java:71)
at android.app.Dialog$1.run(Dialog.java:111)
at android.app.Dialog.dismiss(Dialog.java:268)
at com.joulespersecond.oba.region.ObaRegionsTask.onPostExecute(ObaRegionsTask.java:129)
at com.joulespersecond.oba.region.ObaRegionsTask.onPostExecute(ObaRegionsTask.java:47)
at android.os.AsyncTask.finish(AsyncTask.java:417)
at android.os.AsyncTask.access$300(AsyncTask.java:127)
at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:429)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:123)
at android.app.ActivityThread.main(ActivityThread.java:4627)
at java.lang.reflect.Method.invokeNative(Native Method)
at java.lang.reflect.Method.invoke(Method.java:521)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:858)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>Error when dismissing dialog from ObaRegionTask (AsyncTask)</title>
		</Manager>
		<Manager Number="83">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #201</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/201</url>
			<description>
		This would be for donations to the overall OBA project (not regions), and would direct to this link: http://onebusaway.org/donate/ Currently the donation account is managed via UW, and used for overall project expenses. Also ticketed for iOS in OneBusAway/onebusaway-iphone#349.
	</description>
			<title>Create a &quot;Donate&quot; link in the mobile app</title>
		</Manager>
		<Manager Number="84">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #202</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/202</url>
			<description>
		We've seen some evidence on iOS that users are entering strange things into the custom API setting (e.g., seattle wa), which likely results in the app not working and the user contacting tech support. We should validate a custom API as a working OBA server prior to accepting it. This will help developers as well since they will get instant feedback on whether the server they've just entered is working correctly (vs. having to pan around the map of the covered area and wait for the &quot;Unable to get stops&quot; error toast). Similar issue on iOS is OneBusAway/onebusaway-iphone#347
	</description>
			<title>Prevent invalid custom APIs from being entered in the app</title>
		</Manager>
		<Manager Number="85">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #203</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/203</url>
			<description>
		Travis builds have been failing intermittently for over a month (see the history). I initially thought this was something intermittent on Travis's end, but it appears not. I filed an issue on Github with Travis two weeks ago, but no response. I initially thought it was an issue with the Android builds tools killing things prematurely (see above issue for details). I also found this issue today, which is essentially the same problem (not sure why this didn't turn up in initial Google searches): SecUpwN/Android-IMSI-Catcher-Detector#236 It sounds like they fixed the issue by moving to a new Travis &quot;Container-Based Infrastructure&quot; - see details about this new feature on Travis here: http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/ It seems like this may let you escape the build time limit, since the new infrastructure promises more dedicated resources for the build, which lets it run faster. I'm going to give this a shot and see what happens.
	</description>
			<title>Travis builds failing with `gradlew... exited with 137`</title>
		</Manager>
		<Manager Number="86">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #214</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/214</url>
			<description>
		Just realized we don't have this, since its rare to get a response with a situation (i.e., alert) in it. Here's a JSON response from a test server that was consuming GTFS-rt Service Alerts that we can use: 
{&quot;code&quot;:200,&quot;currentTime&quot;:1424788245637,&quot;data&quot;:{&quot;entry&quot;:{&quot;arrivalsAndDepartures&quot;:[{&quot;arrivalEnabled&quot;:true,&quot;blockTripSequence&quot;:1,&quot;departureEnabled&quot;:true,&quot;distanceFromStop&quot;:3997.1715107403434,&quot;frequency&quot;:null,&quot;lastUpdateTime&quot;:0,&quot;numberOfStopsAway&quot;:15,&quot;predicted&quot;:false,&quot;predictedArrivalInterval&quot;:null,&quot;predictedArrivalTime&quot;:0,&quot;predictedDepartureInterval&quot;:null,&quot;predictedDepartureTime&quot;:0,&quot;routeId&quot;:&quot;PSTA_52&quot;,&quot;routeLongName&quot;:&quot;ROUTE 52&quot;,&quot;routeShortName&quot;:&quot;52&quot;,&quot;scheduledArrivalInterval&quot;:null,&quot;scheduledArrivalTime&quot;:1424788815000,&quot;scheduledDepartureInterval&quot;:null,&quot;scheduledDepartureTime&quot;:1424788815000,&quot;serviceDate&quot;:1424754000000,&quot;situationIds&quot;:[],&quot;status&quot;:&quot;default&quot;,&quot;stopId&quot;:&quot;PSTA_4077&quot;,&quot;stopSequence&quot;:131,&quot;tripHeadsign&quot;:&quot;ST PETE&quot;,&quot;tripId&quot;:&quot;PSTA_1136252020&quot;,&quot;tripStatus&quot;:{&quot;activeTripId&quot;:&quot;PSTA_1136252020&quot;,&quot;blockTripSequence&quot;:1,&quot;closestStop&quot;:&quot;PSTA_3863&quot;,&quot;closestStopTimeOffset&quot;:9,&quot;distanceAlongTrip&quot;:0,&quot;frequency&quot;:null,&quot;lastKnownDistanceAlongTrip&quot;:0,&quot;lastKnownLocation&quot;:null,&quot;lastKnownOrientation&quot;:0,&quot;lastLocationUpdateTime&quot;:0,&quot;lastUpdateTime&quot;:0,&quot;nextStop&quot;:&quot;PSTA_3863&quot;,&quot;nextStopTimeOffset&quot;:9,&quot;orientation&quot;:0,&quot;phase&quot;:&quot;&quot;,&quot;position&quot;:{&quot;lat&quot;:27.83547,&quot;lon&quot;:-82.69602425744553},&quot;predicted&quot;:false,&quot;scheduleDeviation&quot;:0,&quot;scheduledDistanceAlongTrip&quot;:34839.90238345887,&quot;serviceDate&quot;:1424754000000,&quot;situationIds&quot;:[&quot;PSTA_1&quot;,&quot;PSTA_3&quot;,&quot;PSTA_2&quot;],&quot;status&quot;:&quot;default&quot;,&quot;totalDistanceAlongTrip&quot;:51353.931474477125,&quot;vehicleId&quot;:&quot;&quot;},&quot;vehicleId&quot;:&quot;&quot;},{&quot;arrivalEnabled&quot;:true,&quot;blockTripSequence&quot;:1,&quot;departureEnabled&quot;:true,&quot;distanceFromStop&quot;:12418.401726783573,&quot;frequency&quot;:null,&quot;lastUpdateTime&quot;:0,&quot;numberOfStopsAway&quot;:40,&quot;predicted&quot;:false,&quot;predictedArrivalInterval&quot;:null,&quot;predictedArrivalTime&quot;:0,&quot;predictedDepartureInterval&quot;:null,&quot;predictedDepartureTime&quot;:0,&quot;routeId&quot;:&quot;PSTA_52&quot;,&quot;routeLongName&quot;:&quot;ROUTE 52&quot;,&quot;routeShortName&quot;:&quot;52&quot;,&quot;scheduledArrivalInterval&quot;:null,&quot;scheduledArrivalTime&quot;:1424790015000,&quot;scheduledDepartureInterval&quot;:null,&quot;scheduledDepartureTime&quot;:1424790015000,&quot;serviceDate&quot;:1424754000000,&quot;situationIds&quot;:[],&quot;status&quot;:&quot;default&quot;,&quot;stopId&quot;:&quot;PSTA_4077&quot;,&quot;stopSequence&quot;:131,&quot;tripHeadsign&quot;:&quot;ST PETE&quot;,&quot;tripId&quot;:&quot;PSTA_1136359020&quot;,&quot;tripStatus&quot;:{&quot;activeTripId&quot;:&quot;PSTA_1136359020&quot;,&quot;blockTripSequence&quot;:1,&quot;closestStop&quot;:&quot;PSTA_3889&quot;,&quot;closestStopTimeOffset&quot;:10,&quot;distanceAlongTrip&quot;:0,&quot;frequency&quot;:null,&quot;lastKnownDistanceAlongTrip&quot;:0,&quot;lastKnownLocation&quot;:null,&quot;lastKnownOrientation&quot;:0,&quot;lastLocationUpdateTime&quot;:0,&quot;lastUpdateTime&quot;:0,&quot;nextStop&quot;:&quot;PSTA_3889&quot;,&quot;nextStopTimeOffset&quot;:10,&quot;orientation&quot;:90,&quot;phase&quot;:&quot;&quot;,&quot;position&quot;:{&quot;lat&quot;:27.887754229548623,&quot;lon&quot;:-82.67973},&quot;predicted&quot;:false,&quot;scheduleDeviation&quot;:0,&quot;scheduledDistanceAlongTrip&quot;:26418.672167415643,&quot;serviceDate&quot;:1424754000000,&quot;situationIds&quot;:[&quot;PSTA_1&quot;,&quot;PSTA_3&quot;,&quot;PSTA_2&quot;],&quot;status&quot;:&quot;default&quot;,&quot;totalDistanceAlongTrip&quot;:51353.931474477125,&quot;vehicleId&quot;:&quot;&quot;},&quot;vehicleId&quot;:&quot;&quot;}],&quot;nearbyStopIds&quot;:[&quot;PSTA_3853&quot;,&quot;PSTA_3854&quot;],&quot;situationIds&quot;:[&quot;PSTA_1&quot;,&quot;PSTA_3&quot;,&quot;PSTA_2&quot;],&quot;stopId&quot;:&quot;PSTA_4077&quot;},&quot;references&quot;:{&quot;agencies&quot;:[{&quot;disclaimer&quot;:&quot;&quot;,&quot;id&quot;:&quot;PSTA&quot;,&quot;lang&quot;:&quot;en&quot;,&quot;name&quot;:&quot;PSTA&quot;,&quot;phone&quot;:&quot;(727) 540-1834&quot;,&quot;privateService&quot;:false,&quot;timezone&quot;:&quot;America/New_York&quot;,&quot;url&quot;:&quot;http://www.psta.net/&quot;}],&quot;routes&quot;:[{&quot;agencyId&quot;:&quot;PSTA&quot;,&quot;color&quot;:&quot;FFFFFF&quot;,&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;PSTA_52&quot;,&quot;longName&quot;:&quot;ROUTE 52&quot;,&quot;shortName&quot;:&quot;52&quot;,&quot;textColor&quot;:&quot;000000&quot;,&quot;type&quot;:3,&quot;url&quot;:&quot;&quot;},{&quot;agencyId&quot;:&quot;PSTA&quot;,&quot;color&quot;:&quot;FFFFFF&quot;,&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;PSTA_97&quot;,&quot;longName&quot;:&quot;ROUTE 97&quot;,&quot;shortName&quot;:&quot;97&quot;,&quot;textColor&quot;:&quot;000000&quot;,&quot;type&quot;:3,&quot;url&quot;:&quot;&quot;}],&quot;situations&quot;:[{&quot;activeWindows&quot;:[],&quot;allAffects&quot;:[{&quot;agencyId&quot;:&quot;PSTA&quot;,&quot;applicationId&quot;:&quot;&quot;,&quot;directionId&quot;:&quot;&quot;,&quot;routeId&quot;:&quot;&quot;,&quot;stopId&quot;:&quot;&quot;,&quot;tripId&quot;:&quot;&quot;}],&quot;consequences&quot;:[],&quot;creationTime&quot;:1424788240588,&quot;description&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;[Low] : 29 updated&quot;},&quot;id&quot;:&quot;PSTA_1&quot;,&quot;publicationWindows&quot;:[],&quot;reason&quot;:&quot;&quot;,&quot;severity&quot;:&quot;&quot;,&quot;summary&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;new 29: 29&quot;},&quot;url&quot;:null},{&quot;activeWindows&quot;:[],&quot;allAffects&quot;:[{&quot;agencyId&quot;:&quot;PSTA&quot;,&quot;applicationId&quot;:&quot;&quot;,&quot;directionId&quot;:&quot;&quot;,&quot;routeId&quot;:&quot;&quot;,&quot;stopId&quot;:&quot;&quot;,&quot;tripId&quot;:&quot;&quot;}],&quot;consequences&quot;:[],&quot;creationTime&quot;:1424788240590,&quot;description&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;[Low] : global&quot;},&quot;id&quot;:&quot;PSTA_3&quot;,&quot;publicationWindows&quot;:[],&quot;reason&quot;:&quot;&quot;,&quot;severity&quot;:&quot;&quot;,&quot;summary&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;Global: global&quot;},&quot;url&quot;:null},{&quot;activeWindows&quot;:[],&quot;allAffects&quot;:[{&quot;agencyId&quot;:&quot;PSTA&quot;,&quot;applicationId&quot;:&quot;&quot;,&quot;directionId&quot;:&quot;&quot;,&quot;routeId&quot;:&quot;&quot;,&quot;stopId&quot;:&quot;&quot;,&quot;tripId&quot;:&quot;&quot;}],&quot;consequences&quot;:[],&quot;creationTime&quot;:1424788240589,&quot;description&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;[Low] Global Bulletin: Global Bulletin&quot;},&quot;id&quot;:&quot;PSTA_2&quot;,&quot;publicationWindows&quot;:[],&quot;reason&quot;:&quot;&quot;,&quot;severity&quot;:&quot;&quot;,&quot;summary&quot;:{&quot;lang&quot;:&quot;en&quot;,&quot;value&quot;:&quot;Global bulletin: Global Bulletin&quot;},&quot;url&quot;:null}],&quot;stops&quot;:[{&quot;code&quot;:&quot;2534&quot;,&quot;direction&quot;:&quot;S&quot;,&quot;id&quot;:&quot;PSTA_4077&quot;,&quot;lat&quot;:27.8225,&quot;locationType&quot;:0,&quot;lon&quot;:-82.70007,&quot;name&quot;:&quot;49TH ST N + 5406&quot;,&quot;routeIds&quot;:[&quot;PSTA_52&quot;,&quot;PSTA_97&quot;],&quot;wheelchairBoarding&quot;:&quot;UNKNOWN&quot;},{&quot;code&quot;:&quot;2766&quot;,&quot;direction&quot;:&quot;E&quot;,&quot;id&quot;:&quot;PSTA_3863&quot;,&quot;lat&quot;:27.83547,&quot;locationType&quot;:0,&quot;lon&quot;:-82.69537,&quot;name&quot;:&quot;70TH AVE + 46TH ST&quot;,&quot;routeIds&quot;:[&quot;PSTA_52&quot;,&quot;PSTA_97&quot;],&quot;wheelchairBoarding&quot;:&quot;UNKNOWN&quot;},{&quot;code&quot;:&quot;6570&quot;,&quot;direction&quot;:&quot;S&quot;,&quot;id&quot;:&quot;PSTA_3889&quot;,&quot;lat&quot;:27.88762,&quot;locationType&quot;:0,&quot;lon&quot;:-82.67938,&quot;name&quot;:&quot;PSTA 34TH ST LAYBY - PLATFORM - A&quot;,&quot;routeIds&quot;:[&quot;PSTA_52&quot;],&quot;wheelchairBoarding&quot;:&quot;UNKNOWN&quot;},{&quot;code&quot;:&quot;2523&quot;,&quot;direction&quot;:&quot;N&quot;,&quot;id&quot;:&quot;PSTA_3853&quot;,&quot;lat&quot;:27.82178,&quot;locationType&quot;:0,&quot;lon&quot;:-82.6998,&quot;name&quot;:&quot;49TH ST N + 54TH AVE N&quot;,&quot;routeIds&quot;:[&quot;PSTA_52&quot;,&quot;PSTA_97&quot;],&quot;wheelchairBoarding&quot;:&quot;UNKNOWN&quot;},{&quot;code&quot;:&quot;2536&quot;,&quot;direction&quot;:&quot;N&quot;,&quot;id&quot;:&quot;PSTA_3854&quot;,&quot;lat&quot;:27.8231,&quot;locationType&quot;:0,&quot;lon&quot;:-82.69982,&quot;name&quot;:&quot;49TH ST N + 55TH AVE N&quot;,&quot;routeIds&quot;:[&quot;PSTA_52&quot;,&quot;PSTA_97&quot;],&quot;wheelchairBoarding&quot;:&quot;UNKNOWN&quot;}],&quot;trips&quot;:[{&quot;blockId&quot;:&quot;PSTA_15980702&quot;,&quot;directionId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;PSTA_1136252020&quot;,&quot;routeId&quot;:&quot;PSTA_52&quot;,&quot;routeShortName&quot;:&quot;&quot;,&quot;serviceId&quot;:&quot;PSTA_246&quot;,&quot;shapeId&quot;:&quot;PSTA_52:51&quot;,&quot;timeZone&quot;:&quot;&quot;,&quot;tripHeadsign&quot;:&quot;ST PETE&quot;,&quot;tripShortName&quot;:&quot;&quot;},{&quot;blockId&quot;:&quot;PSTA_15981602&quot;,&quot;directionId&quot;:&quot;1&quot;,&quot;id&quot;:&quot;PSTA_1136359020&quot;,&quot;routeId&quot;:&quot;PSTA_52&quot;,&quot;routeShortName&quot;:&quot;&quot;,&quot;serviceId&quot;:&quot;PSTA_246&quot;,&quot;shapeId&quot;:&quot;PSTA_52:51&quot;,&quot;timeZone&quot;:&quot;&quot;,&quot;tripHeadsign&quot;:&quot;ST PETE&quot;,&quot;tripShortName&quot;:&quot;&quot;}]}},&quot;text&quot;:&quot;OK&quot;,&quot;version&quot;:2}
	</description>
			<title>Add test for parsing response with situations (i.e., alerts)</title>
		</Manager>
		<Manager Number="87">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #217</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/217</url>
			<description>
		In the OBA Server Directory, TwitterUrl is an optional field and can be empty text. However, our testRegionTwitterUrls test currently expects a valid URL - previous to the current Region API output, we've never had a region that wasn't supplying a Twitter URL. We should change our test to accept empty text as a valid Twitter URL.
	</description>
			<title>Test testRegionTwitterUrls is currently failing</title>
		</Manager>
		<Manager Number="88">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #220</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/220</url>
			<description>
		I actually didn't realize that this was supposed to be happening until I was looking at implementing the same feature. It appears that its not working on new installs because the default version is 0, and there is an IF statement in HomeActivity checking for oldVer &gt; 0 before notifying the user. I'll submit a fix for this shortly.
	</description>
			<title>Auto-show &quot;What's New&quot; dialog is broken</title>
		</Manager>
		<Manager Number="89">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #223</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/223</url>
			<description>
		I'm getting the following error on Windows 7 when running gradlew assembleRelease: :onebusaway-android:lintVitalRelease FAILED

FAILURE: Build failed with an exception.

* What went wrong:

Execution failed for task ':onebusaway-android:lintVitalRelease'.
&gt; Could not normalize path for file 'F:\Android_Studio\onebusaway-android\onebusaway-android\build\intermediates\mockable-Google Inc.:Google APIs:19.jar'.
 Our build.gradle originally had: compileSdkVersion &quot;Google Inc.:Google APIs:19&quot;
buildToolsVersion &quot;19.1.0&quot;
 I changed this to: compileSdkVersion &quot;Google Inc.:Google APIs:21&quot;
buildToolsVersion &quot;21.1.2&quot;
 ... and I no longer get the above error. Looks like there is an open issue on AOSP (148912) for this. But, for now, we can update our build tools and compileSdkVersion to fix it.
	</description>
			<title>Error when building release - &quot;Could not normalize path for file&quot;</title>
		</Manager>
		<Manager Number="90">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #224</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/224</url>
			<description>
		After fixing #223, when trying to run: gradlew assembleRelease ...I'm getting the error: :onebusaway-android:processReleaseManifest
:onebusaway-android:processReleaseResources
 Position 23 : note: did you mean to use @+id instead of @+android:id?
 Position 23 : creating resource for external package android: id/progress_small
.
 Position 23:30-57 : No resource found that matches the given name (at 'id' with
 value '@+android:id/progress_small').

:onebusaway-android:processReleaseResources FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':onebusaway-android:processReleaseResources'.
&gt; com.android.ide.common.process.ProcessException: org.gradle.process.internal.E
xecException: Process 'command 'F:\APIs\android\sdk\build-tools\21.1.2\aapt.exe'
' finished with non-zero exit value 1
 It doesn't say which file is triggering this, but I believe its layout/loading.xml. Will test further.
	</description>
			<title>Error during release build - wrong resource id</title>
		</Manager>
		<Manager Number="91">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #228</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/228</url>
			<description>
		After updating to the API 21 build tools and SDK, we're getting the following error on Travis: 0.42s$ echo no | android create avd --force -n test -t &quot;Google Inc.:Google APIs:&quot;$ANDROID_API_LEVEL --abi $ANDROID_ABI
Valid ABIs: no ABIs.
Error: Invalid --abi armeabi-v7a for the selected target.
The command &quot;echo no | android create avd --force -n test -t &quot;Google Inc.:Google APIs:&quot;$ANDROID_API_LEVEL --abi $ANDROID_ABI&quot; failed and exited with 1 during .
 See https://travis-ci.org/OneBusAway/onebusaway-android/builds/52205081
	</description>
			<title>Travis builds failing - &quot;Invalid --abi armeabi-v7a for the selected target&quot;</title>
		</Manager>
		<Manager Number="92">
			<labels>
				<label>bug</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #230</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/230</url>
			<description>
		In #227, we have to disable Lint checks on release builds to fix #223 due to this AOSP issue: https://code.google.com/p/android/issues/detail?id=148912 When this AOSP issue is fixed (targeted for Android Studio 1.2), we should re-enable Lint checks.
	</description>
			<title>Re-enable Lint checks on release builds following AOSP fix</title>
		</Manager>
		<Manager Number="93">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #233</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/233</url>
			<description>
		Right now, when the user taps on the icon the map, we're reporting a &quot;Loaded StopInfo from X&quot;, where X is the region name. This event on iOS is actually related to the StopInfo project, the icon for which is shown next to the stop name on the ArrivalList Fragment, as discussed in #103. We should remove the &quot;Loaded StopInfo from X&quot; event from the current master branch, and replace it with a new event (not currently reported on iOS) called &quot;Clicked MapStopIcon from X&quot;. We should then report a similar map icon click event on iOS, to be opened in a new issue on OBA iOS.
	</description>
			<title>StopInfo event reported for incorrect button press in master branch</title>
		</Manager>
		<Manager Number="94">
			<labels>
				<label>bug</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #234</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/234</url>
			<description>
		We should report the &quot;Loaded StopInfo from X&quot; event, where X is the region name, when the user taps on the icon for which is shown next to the stop name on the ArrivalList Fragment, as discussed in #103. This was originally incorrectly reported for the event of tapping on the map in the master branch, as discussed in #233.
	</description>
			<title>Report StopInfo event (develop)</title>
		</Manager>
		<Manager Number="95">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #243</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/243</url>
			<description>
		We've observed a number of Google Analytics (GA) events reported from Amazon Fire Phones, which is strange because: if BuildConfig.DEBUG == TRUE we set GoogleAnalytics.getInstance(context).setDryRun(true);, which should disable event reporting on any non-production signed build The currently deployed production-signed beta that includes analytics does not run on a Fire Phone (currently only the develop branch supports the amazon build flavor) There haven't been any production-signed releases of the amazon build flavor on the develop branch Upon further inspection, it appears that GoogleAnalytics.getInstance(context).setDryRun(true); does not have any affect devices without Google Play Services (including the Fire Phone). In other words, this is likely a bug in the Google Analytics SDK with local dispatching. The GA documentation does not state anything about this method not working on non-Google Play Services devices, so we assume it should work on devices like the Fire Phone: public void setDryRun (boolean dryRun) Toggles dry run mode. In dry run mode, the normal code paths are executed locally, but hits are not sent to Google Analytics servers. This is useful for debugging calls to the Google Analytics SDK without polluting recorded data. Related StackOverflow post: http://stackoverflow.com/questions/28842499/google-analytics-setdryruntrue-doesnt-work-in-amazon-firephone Related post on Google GA forum: https://productforums.google.com/forum/#!topic/analytics/1zAmZCu1Bx4
	</description>
			<title>GoogleAnalytics.setDryRun(true) doesn't work on Amazon Fire Phone (develop)</title>
		</Manager>
		<Manager Number="96">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #244</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/244</url>
			<description>
		In the current Google Analytics implementation, we're reporting a generic &quot;problem report&quot; metric in ReportProblemFragmentBase: https://github.com/OneBusAway/onebusaway-android/blob/master/onebusaway-android/src/main/java/com/joulespersecond/seattlebusbot/ReportProblemFragmentBase.java#L117 However, as far as I can tell this won't provide any separate reporting for trip/stop reports, and I'd like to be able to record what reports of each type are submitted. So, this analytics event should probably be moved to the sendReport() method of the subclasses ReportStopProblemFragment and ReportTripProblemFragment, and a separate label should be included (or another way to distinguish the report types). @cagryInside Could you please confirm this is correct, and if so submit a quick fix for this? We should fix this before pushing the next beta based on master, and would need to fix in develop too.
	</description>
			<title>Add Google Analytics individually for trip/stop problem reports</title>
		</Manager>
		<Manager Number="97">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #247</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/247</url>
			<description>
		We're seeing a lot of build failures on the first and even second execution of PRs on Travis, which then pass on the next attempt. Here's what the error looks like on failures: :onebusaway-android:connectedAndroidTest
09:48:14 E/Device: Error during shell execution: null
Unable to install /home/travis/build/OneBusAway/onebusaway-android/onebusaway-android/build/outputs/apk/onebusaway-android-debug.apk
com.android.ddmlib.InstallException
    at com.android.ddmlib.Device.installPackages(Device.java:927)
    at com.android.builder.testing.ConnectedDevice.installPackages(ConnectedDevice.java:105)
    at com.android.builder.internal.testing.SimpleTestCallable.call(SimpleTestCallable.java:125)
    at com.android.builder.internal.testing.SimpleTestCallable.call(SimpleTestCallable.java:48)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Caused by: com.android.ddmlib.ShellCommandUnresponsiveException
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:513)
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:390)
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:359)
    at com.android.ddmlib.Device.executeShellCommand(Device.java:566)
    at com.android.ddmlib.Device.createMultiInstallSession(Device.java:987)
    at com.android.ddmlib.Device.installPackages(Device.java:884)
    ... 9 more
com.android.builder.testing.ConnectedDevice &gt; runTests[test(AVD) - 5.0.1] FAILED 
    com.android.builder.testing.api.DeviceException: com.android.ddmlib.InstallException
        at com.android.builder.testing.ConnectedDevice.installPackages(ConnectedDevice.java:108)
null
com.android.builder.testing.api.DeviceException: com.android.ddmlib.InstallException
    at com.android.builder.testing.ConnectedDevice.installPackages(ConnectedDevice.java:108)
    at com.android.builder.internal.testing.SimpleTestCallable.call(SimpleTestCallable.java:125)
    at com.android.builder.internal.testing.SimpleTestCallable.call(SimpleTestCallable.java:48)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Caused by: com.android.ddmlib.InstallException
    at com.android.ddmlib.Device.installPackages(Device.java:927)
    at com.android.builder.testing.ConnectedDevice.installPackages(ConnectedDevice.java:105)
    ... 8 more
Caused by: com.android.ddmlib.ShellCommandUnresponsiveException
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:513)
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:390)
    at com.android.ddmlib.AdbHelper.executeRemoteCommand(AdbHelper.java:359)
    at com.android.ddmlib.Device.executeShellCommand(Device.java:566)
    at com.android.ddmlib.Device.createMultiInstallSession(Device.java:987)
    at com.android.ddmlib.Device.installPackages(Device.java:884)
    ... 9 more
:onebusaway-android:connectedAndroidTest FAILED
FAILURE: Build failed with an exception.
 I believe this is the underlying issue on Travis: travis-ci/travis-ci#3110 I'm leaving this open for now just so everyone knows why they are failing, and I'll close this out when we have some type of resolution.
	</description>
			<title>Travis build failures - ShellCommandUnresponsiveException</title>
		</Manager>
		<Manager Number="98">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #254</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/254</url>
			<description>
		With the addition of support for the Amazon Fire Phone (#158), we now have two platform build flavors in the following packages: src/google/java/org/onebusaway/android/map src/amazon/java/org/onebusaway/android/map With the exception of ProprietaryMapHelpV2, all other classes in these two packages are identical, except that they import classes from the amazon/google packages for the respective Maps APIs and reference the Amazon/GoogleMap object. Here's our current manual process for maintaining these files: If changes are made to classes in src/google/java/org/onebusaway/android/map package, the same classes should be copied to src/amazon/java/org/onebusaway/android/map package. Then, the Google classes should be replaced with equivalent Amazon classes as specified in http://bit.ly/AmazonMapsMigration. NOTE: When doing this copying, ProprietaryMapHelpV2 should not need to be copied. It's specific to each platform. We should be able to do better than manually copying/changing files. I see two approaches: Refactor these classes behind a common interface - I started down this path, but this gets ugly quick, since there is substantial logic in BaseMapFragment and StopOverlay that relies on the core classes used in the respective Maps APIs. The result is interfaces for all the Maps API v2 classes, and its not clear to me that this is even possible due to the underlying management of SupportMapFragment, which is native to the Maps API, as well as the callbacks for detecting taps on a Marker, which are generated by the platform and provide a Marker Maps API v2 object. Script the copy/replace logic - we should be able to accomplish this using Gradle and the filterOnCopy task - http://gradle.org/docs/current/userguide/userguide_single.html#filterOnCopy. We would set this up so we'd edit the Google flavor classes, and then the Amazon classes would be auto-generated on the first Gradle build following the edit. We'd also need to add some warning text of &quot;this class is auto-generated, please don't edit&quot; to the top of the Amazon package classes. The second option seems like the simpler approach that keeps the code the cleanest, so I'm going to look into it further.
	</description>
			<title>Better management of amazon/google build flavors common code</title>
		</Manager>
		<Manager Number="99">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #256</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/256</url>
			<description>
		It should be required to choose a problem category in order to send a stop or trip problem. In the ReportStopProblemFragment and ReportTripProblemFragment users can currently send issues without selecting a problem category.
	</description>
			<title>StopProblem and TripProblem fragments can report issues without selecting a problem category</title>
		</Manager>
		<Manager Number="100">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #260</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/260</url>
			<description>
		We have implemented several enhancements (PR #249) in BaseMapFragment to be able to use the BaseMapFragment in other activities. However, when we are using Maps API v2 objects (e.g., adding a marker: mMapFragment.getMap().addMarker(...) ) outside of the maps package, Amazon build flavor is failing (#255 (comment)). One possible approach could be to implement a method in the BaseMapFragment which adds a marker from given lat/long.
	</description>
			<title>Add custom markers to BaseMapFragment</title>
		</Manager>
		<Manager Number="101">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #268</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/268</url>
			<description>
		Trying to run the latest dev build, commit 0e8ad83. Got this immediately on compiling. Error:A problem occurred configuring project ':onebusaway-android'.
&gt; Could not resolve all dependencies for configuration ':onebusaway-android:_amazonDebugCompile'.
   &gt; Could not find com.amazon.android:amazon-maps-api:2.0.
     Searched in the following locations:
         https://jcenter.bintray.com/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.pom
         https://jcenter.bintray.com/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.jar
         file:/C:/Users/Shreyas/.m2/repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.pom
         file:/C:/Users/Shreyas/.m2/repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.jar
         http://nexus.onebusaway.org/nexus/content/repositories/releases/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.pom
         http://nexus.onebusaway.org/nexus/content/repositories/releases/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.jar
         file:/C:/Android SDK/adt-bundle-windows-x86_64-20140321/sdk/extras/android/m2repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.pom
         file:/C:/Android SDK/adt-bundle-windows-x86_64-20140321/sdk/extras/android/m2repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.jar
         file:/C:/Android SDK/adt-bundle-windows-x86_64-20140321/sdk/extras/google/m2repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.pom
         file:/C:/Android SDK/adt-bundle-windows-x86_64-20140321/sdk/extras/google/m2repository/com/amazon/android/amazon-maps-api/2.0/amazon-maps-api-2.0.jar
     Required by:
         onebusaway-android:onebusaway-android:unspecified
 I honestly have no idea what's going on in the gradle scripts.
	</description>
			<title>Dev branch build error: Can't find Amazon Maps?</title>
		</Manager>
		<Manager Number="102">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #271</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/271</url>
			<description>
		Reported by a user: App Version: 1.7.9 Model: SM-N910V (Samsung Galaxy Note 4 (Verizon)) OS Version: 5.0.1 / 21 All of my home screen shortcuts lose their names every time you issue a new version of the software. This completely defeats the purpose of having home screen shortcuts. Me:   When you create the shortcut on your home screen, are you leaving the default stop name, or changing it to a new name?
 User: Leaving the default in most cases Me:   When the shortcuts lose their names, is the end result a blank name?  Or, if you’re changing the name (see 1), is the end result the original stop name?
 User: Every shortcut is renamed to OneBusAway I can't replicate this on a LG G4. My feeling is that its a device issue, and not an issue in OneBusAway - here's a report of something similar happening on a Galaxy S4 with Google Maps: http://forums.androidcentral.com/android-4-1-4-2-4-3-jelly-bean/317001-google-maps-update-keeps-renaming-navigation-shortcuts-generic-maps.html
	</description>
			<title>Shortcuts are renamed after installing an app update</title>
		</Manager>
		<Manager Number="103">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #272</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/272</url>
			<description>
		The current develop branch won't install from Android Studio on an HTC EVO Shift with Android 2.3.4. I get the following message in Android Studio: Installation failed since the device possibly has stale dexed jars that don't match the current version (dexopt error). In order to proceed, you have to uninstall the existing application. WARNING: Uninstalling will remove the application data! Do you want to uninstall the existing application? ...and when I hit Ok, I see in Run tab: DEVICE SHELL COMMAND: pm uninstall com.joulespersecond.seattlebusbot Unknown failure The app is definitely uninstalled when I get the above messages. If I package the debug version separately using gradlew assembleObaGoogleDebug and then try running adb install onebusaway-android-oba-google-debug.apk from the command line, I get the message: $ adb install onebusaway-android-oba-google-debug.apk 2014 KB/s (4745517 bytes in 2.300s) pkg: /data/local/tmp/onebusaway-android-oba-google-debug.apk Failure [INSTALL_FAILED_DEXOPT] rm failed for -f, Read-only file system Same error happens when packing a release build as well. This problem is also described on StackOverflow: http://stackoverflow.com/questions/25493310/cant-upload-android-app-to-device-stale-dexed-jars Apparently just running gradlew clean works for some people, but this didn't resolve the issue for me. I just tried enabling Proguard, which is normally the solution to support back to Gingerbread if the app has more than 64k methods (maybe we do, when including libraries?) and this did allow the app to run on the device. So, to support Gingerbread devices we may have to do a release with Proguard enabled. Fairly recently I've added both the CardView support library and the Android Design Support library (which contains both the AppCompat and Support libraries), so it's possible that these libraries pushed us over the 64k method marker.
	</description>
			<title>Installation fails on Android 2.3.4</title>
		</Manager>
		<Manager Number="104">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #274</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/274</url>
			<description>
		Now that we're using Proguard (see #272), Log statements are getting stripped out on release. So, we can clean up the code a bit by removing the wrapper code around logging statements. For example, this: if (BuildConfig.DEBUG) {
            Log.d(TAG, &quot;User manually set region to '&quot; + region.getName() + &quot;'.&quot;)
}
 ...can now be replaced with: Log.d(TAG, &quot;User manually set region to '&quot; + region.getName() + &quot;'.&quot;)
	</description>
			<title>Remove `if (BuildConfig.DEBUG)` wrapper around log statements</title>
		</Manager>
		<Manager Number="105">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #275</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/275</url>
			<description>
		When trying to view arrival times on an HTC EVO Shift with Android 2.3.4, the Agency Y demo app crashes and I get the following trace: 06-26 10:37:16.790    1355-1511/? D/lib_locapi﹕ loc_eng_report_position: valid mask = 0x6060, sess status = 0
06-26 10:37:16.820    4372-4372/? E/AndroidRuntime﹕ FATAL EXCEPTION: main
    java.lang.StackOverflowError
            at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:182)
            at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:261)
            at java.util.concurrent.CopyOnWriteArrayList.removeRange(CopyOnWriteArrayList.java:569)
            at java.util.concurrent.CopyOnWriteArrayList.remove(CopyOnWriteArrayList.java:366)
            at java.util.concurrent.CopyOnWriteArrayList.remove(CopyOnWriteArrayList.java:376)
            at android.view.ViewTreeObserver.removeOnPreDrawListener(ViewTreeObserver.java:377)
            at android.widget.TextView.onDraw(TextView.java:4132)
            at android.view.View.draw(View.java:6970)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.widget.FrameLayout.draw(FrameLayout.java:357)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.widget.AbsListView.dispatchDraw(AbsListView.java:1480)
            at android.widget.ListView.dispatchDraw(ListView.java:3186)
            at android.view.View.draw(View.java:7082)
            at android.widget.AbsListView.draw(AbsListView.java:2588)
            at android.view.View.buildDrawingCache(View.java:6695)
            at android.view.ViewGroup.onAnimationStart(ViewGroup.java:1345)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1591)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at com.sothree.slidinguppanel.SlidingUpPanelLayout.drawChild(SlidingUpPanelLayout.java:1024)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at com.sothree.slidinguppanel.SlidingUpPanelLayout.draw(SlidingUpPanelLayout.java:1067)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.support.v4.widget.DrawerLayout.drawChild(DrawerLayout.java:1089)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.widget.FrameLayout.draw(FrameLayout.java:357)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.View.draw(View.java:6973)
            at android.support.v7.internal.widget.ActionBarOverlayLayout.draw(ActionBarOverlayLayout.java:500)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
            at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
            at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
            at android.view.ViewGroup.dispatchDr
06-26 10:37:16.850    1355-1487/? W/ActivityManager﹕ Force finishing activity org.agencyy.android/org.onebusaway.android.ui.HomeActivity
06-26 10:37:16.870    1355-1504/? D/RPC﹕ read RPC packet
 Based on these two StackOverflow posts: http://stackoverflow.com/a/19854263/937715 http://stackoverflow.com/a/16920207/937715 ...it appears that the thread stack sizes for Android 2.3 are 12KB, while Android 4.0 and higher is 16KB. With the CardViews and nested arrival times in Style B, we're exceeding the stack size which leads to the StackOverflowError. Our options seem to be: Try to reduce the depth of the View hierarchy on Style B Only allow Style B on Android 4.0 and higher
	</description>
			<title>StackOverflowError when using Arrival Info Style B on Android 2.3 device</title>
		</Manager>
		<Manager Number="106">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #277</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/277</url>
			<description>
		In production/master branch - this seems to be happening far more often in v1.7.9 (33 times) than v1.7.8 (1 time). Stack trace from developer console: java.lang.RuntimeException: An error occured while executing doInBackground()
at android.support.v4.content.ModernAsyncTask$3.done(ModernAsyncTask.java:137)
at java.util.concurrent.FutureTask$Sync.innerSetException(FutureTask.java:273)
at java.util.concurrent.FutureTask.setException(FutureTask.java:124)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:307)
at java.util.concurrent.FutureTask.run(FutureTask.java:137)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1076)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:569)
at java.lang.Thread.run(Thread.java:856)
Caused by: java.lang.NullPointerException
at com.joulespersecond.oba.request.ObaStopsForLocationResponse$Data.access$100(ObaStopsForLocationResponse.java:30)
at com.joulespersecond.oba.request.ObaStopsForLocationResponse.getStops(ObaStopsForLocationResponse.java:60)
at com.joulespersecond.seattlebusbot.SearchResultsFragment$MyLoader.loadInBackground(SearchResultsFragment.java:347)
at com.joulespersecond.seattlebusbot.SearchResultsFragment$MyLoader.loadInBackground(SearchResultsFragment.java:280)
at android.support.v4.content.AsyncTaskLoader.onLoadInBackground(AsyncTaskLoader.java:242)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:51)
at android.support.v4.content.AsyncTaskLoader$LoadTask.doInBackground(AsyncTaskLoader.java:40)
at android.support.v4.content.ModernAsyncTask$2.call(ModernAsyncTask.java:123)
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:305)
 User comments indicate it either happens when searching or when opening the app. v1.7.9 was a fairly simple release with only two changes (add Finnish translation and hide softkeyboard when leaving search fragment), so I'm not sure what's causing this. Will need to investigate further...
	</description>
			<title>NPE caused by ObaStopsForLocationResponse$Data.access$100(ObaStopsForLocationResponse.java:30)</title>
		</Manager>
		<Manager Number="107">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #278</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/278</url>
			<description>
		Reported on the OBA Dev list: I am having issue with old alerts still showing up on Android phone. Looking at the '/api/where/arrivals-and-departures-for-stop' there is 'data.references/situations.activeWindows' element but I do not find any code that checks these values on Android. Is there update / patch available for this? If we can get a hold of a response that includes this info we can add support for it in OBA Android.
	</description>
			<title>Active time windows of Alerts (i.e., Situations) aren't respected</title>
		</Manager>
		<Manager Number="108">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #282</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/282</url>
			<description>
		The Amazon debug build of OBA just failed on Travis due to too many methods: :onebusaway-android:dexObaAmazonDebugtrouble writing output: Too many method references: 65540; max is 65536.
You may try using --multi-dex option.
 The error in Android Studio looks like: :onebusaway-android:dexObaAmazonDebug
AGPBI: {&quot;kind&quot;:&quot;SIMPLE&quot;,&quot;text&quot;:&quot;UNEXPECTED TOP-LEVEL EXCEPTION:&quot;,&quot;position&quot;:{},&quot;original&quot;:&quot;UNEXPECTED TOP-LEVEL EXCEPTION:&quot;}
 Interestingly, Amazon must have more methods in their Maps API library, because the Google build is still working. So, looks like we need to check out multi-dex.
	</description>
			<title>Exceeding dex method limit</title>
		</Manager>
		<Manager Number="109">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #284</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/284</url>
			<description>
		In the Google Analytics console every screen name should have only the activity or fragment name not the full package name.
	</description>
			<title>MyRoutesActivity has full package name in Google Analytics reports</title>
		</Manager>
		<Manager Number="110">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #289</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/289</url>
			<description>
		For develop branch I'm seeing markers jump around on the map on Android Maps API v2 even when nothing is happening in the app. Here's a video of the behavior: https://youtu.be/cOUGD0T5Ojs What I expect Markers should remain stationary at their originally added lat/long. What steps will reproduce the problem? 1a. Download the APK from: https://dl.dropboxusercontent.com/u/46443835/OneBusAway/UI_redesign/onebusaway-android-oba-google-debug.apk or 1b. Build, install, and run the develop branch of OneBusAway: a. git clone https://github.com/OneBusAway/onebusaway-android.git b. git checkout develop c. gradlew installObaGoogleDebug d. adb shell am start -n com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity Browse to any supported city (e.g., Seattle or Tampa), and watch the green bus stop markers jump around on the map I should add that I can't always reproduce this. It seems like everything works fine for a time, but then when the markers start jumping around they don't stop. Marker Implementation Details The code that loads the icons used for the 9 marker types (8 directions + no direction) is here: https://github.com/OneBusAway/onebusaway-android/blob/develop/onebusaway-android/src/google/java/org/onebusaway/android/map/googlemapsv2/StopOverlay.java#L169 I'm using this drawable: https://github.com/OneBusAway/onebusaway-android/blob/develop/onebusaway-android/src/main/res/drawable/map_stop_icon.xml ...which is a number of shapes - this creates the main green circle with the white outline and the drop shadoes. Then, I'm drawing the direction arrow on top of this drawable for each of the 8 directions - code for drawing directions is here: https://github.com/OneBusAway/onebusaway-android/blob/develop/onebusaway-android/src/google/java/org/onebusaway/android/map/googlemapsv2/StopOverlay.java#L202 In the code to load the icons, I'm caching the BitmapDescriptor returned from BitmapDescriptorFactory.fromBitmap() for each of the 9 icon types on first load, so this isn't done each time a marker is put on the map. I also saw the app crash to &quot;Unfortunately, OneBusAway has stopped.&quot; and saw this exception in Logcat after letting the app sit on the map screen for a few minutes: 08-10 16:40:02.422  15843-15929/com.joulespersecond.seattlebusbot E/AndroidRuntime﹕ FATAL EXCEPTION: GLThread 8614
    Process: com.joulespersecond.seattlebusbot, PID: 15843
    java.lang.IllegalArgumentException: Comparison method violates its general contract!
            at java.util.ComparableTimSort.mergeHi(ComparableTimSort.java:831)
            at java.util.ComparableTimSort.mergeAt(ComparableTimSort.java:449)
            at java.util.ComparableTimSort.mergeCollapse(ComparableTimSort.java:372)
            at java.util.ComparableTimSort.sort(ComparableTimSort.java:178)
            at java.util.ComparableTimSort.sort(ComparableTimSort.java:142)
            at java.util.Arrays.sort(Arrays.java:1957)
            at java.util.Collections.sort(Collections.java:1864)
            at com.google.maps.api.android.lib6.gmm6.n.bl.a(Unknown Source)
            at com.google.maps.api.android.lib6.gmm6.n.l.a(Unknown Source)
            at com.google.maps.api.android.lib6.gmm6.n.l.b(Unknown Source)
            at com.google.maps.api.android.lib6.gmm6.n.cv.f(Unknown Source)
            at com.google.maps.api.android.lib6.gmm6.n.cv.run(Unknown Source)
 I've seen this on an LG G4 and Nexus 6. More details on LG device is below. LG G4 LS991 with Android 5.1 (LS991ZV4) Google Play Services client library version = compile 'com.google.android.gms:play-services-maps:7.5.0' and compile 'com.google.android.gms:play-services-maps:7.8.0' Google Play Services version on the device - Google Play Services 7.8.99 (2134222-440) Android SDK Version: compileSdkVersion 21 buildToolsVersion &quot;21.1.2&quot; This issue hasn't always existed, which makes me believe it was introduced during an update to Android Google Play Services/Maps at some point. I've opened an issue for this on gmaps-api-issues as well, but no response as of this post: https://code.google.com/p/gmaps-api-issues/issues/detail?id=8455 I've created a smaller demo project here on Github that uses the same marker implementation: https://github.com/barbeau/maps-demo ...but so far I haven't been able to reproduce the problem there.
	</description>
			<title>Jumping markers on Maps v2</title>
		</Manager>
		<Manager Number="111">
			<labels>
				<label>bug</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #290</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/290</url>
			<description>
		master branch If we update compileSdkVersion to 23, it no longer builds: Error:(157, 21) error: cannot find symbol method setLatestEventInfo(Context,String,String,PendingIntent) Notification.setLatestEventInfo() has been deprecated for a while, and has caused problems in the past (see #104). We should finally remove it.
	</description>
			<title>Notification.setLatestEventInfo() is removed in API Level 23</title>
		</Manager>
		<Manager Number="112">
			<labels>
				<label>duplicate</label>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #291</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/291</url>
			<description>
		Several users have requested this, as it helps them report problems about a stop to the agency.
	</description>
			<title>Show stop number/code within the app</title>
		</Manager>
		<Manager Number="113">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #297</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/297</url>
			<description>
		For develop branch: On Samsung Galaxy S3 with Android 4.4.4 (CyanogenMod):     Process: com.joulespersecond.seattlebusbot, PID: 8561
    java.lang.NullPointerException
            at android.widget.TextView.checkForRelayout(TextView.java:6556)
            at android.widget.TextView.setText(TextView.java:3813)
            at android.widget.TextView.setText(TextView.java:3671)
            at android.widget.TextView.setText(TextView.java:3646)
            at org.onebusaway.android.ui.ArrivalsListHeader.setupPopup(ArrivalsListHeader.java:755)
            at org.onebusaway.android.ui.ArrivalsListHeader.access$600(ArrivalsListHeader.java:66)
            at org.onebusaway.android.ui.ArrivalsListHeader$10.onClick(ArrivalsListHeader.java:689)
            at android.view.View.performClick(View.java:4445)
            at android.view.View$PerformClick.run(View.java:18446)
            at android.os.Handler.handleCallback(Handler.java:733)
            at android.os.Handler.dispatchMessage(Handler.java:95)
            at android.os.Looper.loop(Looper.java:136)
            at android.app.ActivityThread.main(ActivityThread.java:5146)
            at java.lang.reflect.Method.invokeNative(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:515)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)
            at dalvik.system.NativeStart.main(Native Method)
	</description>
			<title>NPE when tapping on ETA in header</title>
		</Manager>
		<Manager Number="114">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #298</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/298</url>
			<description>
		In develop branch, there are now &quot;Sort By&quot; buttons in the Action Bar for the ArrivalsListFragment (which sorts arrivals by route or ETA), as well as MyStarredStopsFragment (which sorts stops by name or frequency of use in the app). We need to add Google Analytics to both of these. @cagryInside Would you be able to work on this tomorrow morning so I can get a new alpha release out tomorrow? Also, please note that the sort by arrivals is replacing the old analytics for the Style A / Style B preference. The preference to change this is now replaced by the Sort By button in ArrivalsListFragment, and we're referring to Style A as &quot;sort by ETA&quot;, and Style B as &quot;sort by route&quot;. So I think we should have two new analytics labels for these sort buttons, and forget about the Style A / Style B labels.
	</description>
			<title>Add analytics to the &quot;Sort By&quot; buttons, negative arrival setting</title>
		</Manager>
		<Manager Number="115">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #300</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/300</url>
			<description>
		For develop branch: On starting the release app, this happens: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.support.v7.widget.SearchView.setSearchableInfo(android.app.SearchableInfo)' on a null object reference
    at org.onebusaway.android.util.UIHelp.setupSearch(UIHelp.java:97)
    at org.onebusaway.android.ui.HomeActivity.onCreateOptionsMenu(HomeActivity.java:493)
    at android.app.Activity.onCreatePanelMenu(Activity.java:2926)
    at android.support.v4.app.FragmentActivity.onCreatePanelMenu(FragmentActivity.java:277)
    at android.support.v7.internal.view.WindowCallbackWrapper.onCreatePanelMenu(WindowCallbackWrapper.java:84)
    at android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase.onCreatePanelMenu(AppCompatDelegateImplBase.java:275)
    at android.support.v7.app.AppCompatDelegateImplV7.preparePanel(AppCompatDelegateImplV7.java:1117)
    at android.support.v7.app.AppCompatDelegateImplV7.doInvalidatePanelMenu(AppCompatDelegateImplV7.java:1399)
    at android.support.v7.app.AppCompatDelegateImplV7.access$100(AppCompatDelegateImplV7.java:89)
    at android.support.v7.app.AppCompatDelegateImplV7$1.run(AppCompatDelegateImplV7.java:123)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:135)
    at android.app.ActivityThread.main(ActivityThread.java:5431)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
	</description>
			<title>v2.0.4 alpha is crashing</title>
		</Manager>
		<Manager Number="116">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #304</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/304</url>
			<description>
		We should open this fragment in its own activity when opening from HomeActivity and the ArrivalListFragment.
	</description>
			<title>Service Alerts fragment requires two &quot;back&quot; button taps to remove it</title>
		</Manager>
		<Manager Number="117">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #305</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/305</url>
			<description>
		We should open these fragments in their own activity when opening from HomeActivity and the ArrivalListFragment.
	</description>
			<title>Report trip/stop fragments require two &quot;back&quot; button taps to remove it</title>
		</Manager>
		<Manager Number="118">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #306</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/306</url>
			<description>
		Frequency-based arrival times without real-time data should have a &quot;~&quot; in front of them (header of sliding panel).
	</description>
			<title>Frequency-based arrivals aren't shown correctly in header</title>
		</Manager>
		<Manager Number="119">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #310</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/310</url>
			<description>
		No description provided.
	</description>
			<title>&quot;No arrivals&quot; message in header isn't hidden when editing the stop name</title>
		</Manager>
		<Manager Number="120">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #311</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/311</url>
			<description>
		Within the sliding panel for arrival info, if there is a reminder icon showing, when you switch the arrivals sorting option it disappears. Only way to make it re-appear is to close the panel and re-open.
	</description>
			<title>Reminder doesn't appear if you switch between sorted route/eta adapters</title>
		</Manager>
		<Manager Number="121">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #312</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/312</url>
			<description>
		If you go to route view (e.g., tap on map icon in arrivals list, sorting by route), it opens the map with the stops for that route. If you tap on the stop to show times, but then click the &quot;X&quot; in the header to show all stops (instead of just stops for that route), it clears the currently selected stop as well (but leaves the sliding panel in the collapsed state). We should leave the currently selected stop as selected (i.e., leave the red marker on the map).
	</description>
			<title>Clearing the route info header clears the currently selected stop</title>
		</Manager>
		<Manager Number="122">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #313</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/313</url>
			<description>
		I've used this library in other apps: https://github.com/amlcurran/ShowcaseView ...but its now deprecated. @cagryInside or anyone else - know any good Android libraries to take the user on a tour of new features in your app? @cagryInside I know you did a version of showing screenshots for #187. If possible I'd like to have an interactive one for some of the core features in the app, just to introduce the user to the new look and feel.
	</description>
			<title>Add a brief tutorial for how to use features in the v2.0 app with new UI</title>
		</Manager>
		<Manager Number="123">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #315</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/315</url>
			<description>
		Initially mentioned in #295 (comment). For ArrivalsListFragment and TripDetailsListFragment, tapping the refresh button seems to spawn a new refresh thread. In other words, if the initial 60 sec refresh is scheduled at 4:00:01pm, and you hit the refresh button at 4:00:30pm, you'll get two refreshes, one at 4:01:01pm and one at 4:01:30pm. The desired behavior would be that if you hit refresh at 4:00:30pm, you'd reset the cycle for every 60 second updates at that point, so the next update would be at 4:01:30pm. We should be able to accomplish this by clearing any pending Runnables on the Handler before scheduling the next update in onLoadFinished().
	</description>
			<title>Tapping refresh button in ArrivalsListFragment and TripDetailsListFragment spawns new refresh thread</title>
		</Manager>
		<Manager Number="124">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #316</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/316</url>
			<description>
		When accessing the arrivals list via the ArrivalsListActivity (i.e., coming from a home screen shortcut or via the new TripDetailsListFragment), if you create a route filter it squishes the arrival time header - it's not being resized:
	</description>
			<title>ArrivalListActivity - header is squished if you add a filter</title>
		</Manager>
		<Manager Number="125">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #317</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/317</url>
			<description>
		When tapping on a scheduled arrival and choosing &quot;Show trip details&quot;, the app crashes with:  java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String org.onebusaway.android.io.elements.ObaTripStatus.getActiveTripId()' on a null object reference
            at org.onebusaway.android.ui.TripDetailsListFragment.setUpHeader(TripDetailsListFragment.java:230)
            at org.onebusaway.android.ui.TripDetailsListFragment.setTripDetails(TripDetailsListFragment.java:195)
            at org.onebusaway.android.ui.TripDetailsListFragment.access$500(TripDetailsListFragment.java:52)
            at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoaderCallback.onLoadFinished(TripDetailsListFragment.java:351)
            at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoaderCallback.onLoadFinished(TripDetailsListFragment.java:340)
            at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:427)
            at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:395)
            at android.support.v4.content.Loader.deliverResult(Loader.java:104)
            at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoader.deliverResult(TripDetailsListFragment.java:395)
            at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoader.deliverResult(TripDetailsListFragment.java:363)
            at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:223)
            at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61)
            at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461)
            at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47)
            at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474)
            at android.os.Handler.dispatchMessage(Handler.java:102)
            at android.os.Looper.loop(Looper.java:135)
            at android.app.ActivityThread.main(ActivityThread.java:5431)
            at java.lang.reflect.Method.invoke(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:372)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
	</description>
			<title>NPE when choosing &quot;Show trip details&quot; for scheduled time</title>
		</Manager>
		<Manager Number="126">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #322</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/322</url>
			<description>
		I thought I fixed this in e91ce7d, but apparently not. This is likely a result of this change to avoid hitting the API twice on Fragment load: 651328d
	</description>
			<title>Trip Details list - on initial load list doesn't always fill</title>
		</Manager>
		<Manager Number="127">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #323</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/323</url>
			<description>
		Currently, we're populating the trip headsign in the trip details list header by using the status.activeTripId field from the trip-details API. However, this causes issues when looking at an upcoming departing trip at transit centers, or anywhere where there is an incoming trip and an outgoing trip that are part of the same block. For example: status: {
activeTripId: &quot;Hillsborough Area Regional Transit_98909&quot;,
blockTripSequence: 5,
closestStop: &quot;Hillsborough Area Regional Transit_6497&quot;,
closestStopTimeOffset: -352,
distanceAlongTrip: 25447.215455832236,
frequency: null,
lastKnownDistanceAlongTrip: 0,
lastKnownLocation: {
lat: 28.066232681274414,
lon: -82.4296875
},
lastKnownOrientation: 0,
lastLocationUpdateTime: 0,
lastUpdateTime: 1443717827155,
nextStop: &quot;Hillsborough Area Regional Transit_6497&quot;,
nextStopTimeOffset: 368,
orientation: 180,
phase: &quot;in_progress&quot;,
position: {
lat: 28.065519,
lon: -82.42988269208382
},
predicted: true,
scheduleDeviation: 0,
scheduledDistanceAlongTrip: 25447.215455832236,
serviceDate: 1443672000000,
situationIds: [ ],
status: &quot;default&quot;,
totalDistanceAlongTrip: 25499.935940670617,
vehicleId: &quot;Hillsborough Area Regional Transit_1312&quot;
},
tripId: &quot;Hillsborough Area Regional Transit_102666&quot;
 I tapped on the trip 102666 in the app, which shows me the stops for that outgoing trip, and the real-time vehicle status for the vehicle that will serve this trip - all this is good. However, the activeTripId is 98909 (the incoming trip), which results in the headsign for that trip being show in the header (&quot;North to University Area TC&quot;). We should actually be showing the headsign for the outgoing trip tripId=102666 (&quot;South to Downtown/MTC&quot;), that matches the headsign for the arrival time that I originally tapped on. I'll push a commit to fix this shortly.
	</description>
			<title>Trip Details list - trip headsign isn't always displayed correctly</title>
		</Manager>
		<Manager Number="128">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #325</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/325</url>
			<description>
		Currently, all the buttons/overflow menu options on the arrival info cards for Style B (i.e., route-sorted) are connected to the first arrival shown in the card. For example, with: ...starring the route, or setting a reminder via the 3 dots, are all connected to the 4:38pm arrival of Route 107 at the top of the card. From this view, it's not currently possible to set these items on later arrivals of that same route (i.e., 5:08pm, 5:43pm, etc.). We should allow the user to tap on the later arrivals as well, and set these items individually for those later arrivals. This takes a little more work than normal because these layouts are constructed programmatically to allow for a dynamic number of arrivals in the card. A workaround is for the user to change to the ETA-sorted via of arrivals (i.e., Style A), and in that view they can tap on later individual arrivals to set reminders, etc.:
	</description>
			<title>Allow selecting options menu on Style B route-sorted cards beyond the next arrival time</title>
		</Manager>
		<Manager Number="129">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #326</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/326</url>
			<description>
		The current &quot;X&quot; shown to close the Route header is solid white: We should change it to partially transparent to match normal design conventions.
	</description>
			<title>Change route header solid white X to partially transparent</title>
		</Manager>
		<Manager Number="130">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #327</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/327</url>
			<description>
		If you follow the below steps: Go to a stop Star a route for this stop Unstar the route for this stop Star the route for all stops The route isn't starred for the current stop. It should be starred.
	</description>
			<title>Starring route for all stops after removing star for a single stop doesn't work</title>
		</Manager>
		<Manager Number="131">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #329</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/329</url>
			<description>
		Currently you only see the service alert if you slide up the sliding arrival info panel. For Warning and Severe alerts, we should definitely add an icon to the header so users are aware there is something going on. Perhaps an icon for info-level alerts too? Below is a WARNING level alert - SEVERE shows up in red, while INFO shows up in green:
	</description>
			<title>Add icon to header for WARNING and SEVERE service alerts</title>
		</Manager>
		<Manager Number="132">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #331</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/331</url>
			<description>
		All too often, I am left waiting at a stop due to either: a bus' scheduled run being cancelled without any indication other than it indicating late and then simply disappearing with me left waiting another 20-30 minutes for the next bus.... ...OR... a bus being re-routed due to an event, protest or weather without any indication in the app. Can this be addressed with Metro?
	</description>
			<title>Show Cancelled or Re-Routed Buses</title>
		</Manager>
		<Manager Number="133">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #332</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/332</url>
			<description>
		The OBA REST API provides &quot;situation&quot; elements in responses for Service Alerts, which are modeled after the PtSituation element from SIRI - more here. One way to publish these alerts is to use the onebusaway-webapp admin console - see these instructions. An API response that includes a situation looks like this: situations: [
{
id: &quot;Hillsborough Area Regional Transit_81ebb5d1-c0fc-49f1-afdd-7032b87fa750&quot;,
summary: {
value: &quot;Test&quot;,
lang: &quot;en&quot;
},
consequences: [ ],
activeWindows: [ ],
reason: &quot;UNKNOWN_CAUSE&quot;,
description: {
value: &quot;This is a test&quot;,
lang: &quot;en&quot;
},
allAffects: [
{
directionId: &quot;&quot;,
stopId: &quot;&quot;,
tripId: &quot;&quot;,
applicationId: &quot;&quot;,
routeId: &quot;&quot;,
agencyId: &quot;Hillsborough Area Regional Transit&quot;
}
],
creationTime: 0,
severity: &quot;severe&quot;,
publicationWindows: [ ],
url: null
}
],
 In OBA Android, we use the severity field to control how we present the alert to users in the ArrivalsListFragment. Currently, in OBA Android we support showing alerts for the following situation types, which map to the following severity strings from the OBA REST API: INFO - shows up as green/informational in arrivals list - severity: &quot;noImpact&quot; ERROR - shows up as red in arrivals list - severity: &quot;severe&quot; WARNING - shows up as yellow - any other value of severity: There are several additional severity values that can be configured via the OBA admin page and appear in the response that aren't currently included in OBA Android, including: severity: &quot;unknown&quot; severity: &quot;verySlight&quot; severity: &quot;slight&quot; severity: &quot;normal&quot; severity: &quot;verySevere&quot; The main problem is the verySevere value - that should be classified as an ERROR as well, as it exceeds the severity of the severe value that is currently considered an ERROR. All the rest could comfortably be labeled as &quot;WARNING&quot;, as is the practice today.
	</description>
			<title>Add support for other situation (alert) types/severities</title>
		</Manager>
		<Manager Number="134">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #334</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/334</url>
			<description>
		If you open the routes view (e.g., by tapping on map icon in Style B arrivals), and then use the navigation bar to open the Starred Stops view, the route header isn't hidden and overlaps the top of the list: We should hide the route header when switching to starred stops.
	</description>
			<title>Route header isn't hidden when changing to Starred Stops view</title>
		</Manager>
		<Manager Number="135">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #340</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/340</url>
			<description>
		We should add an &quot;About&quot; screen to provide users info about the following: Short description of app Link to onebusaway.org and OBA Android Github repo Credit icon contributors Map vehicle markers - Arrow icon by Zlatko Najdenovski, MK (https://thenounproject.com/icon/63549/), marker icon by Housin Aziz, SE (https://thenounproject.com/term/map-marker/37239/), bus icon from Google Material Design (https://github.com/google/material-design-icons/blob/master/maps/svg/production/ic_directions_bus_48px.svg) Google Play Services - Show result of GoogleApiAvailability.getOpenSourceSoftwareLicenseInfo() - https://developers.google.com/android/reference/com/google/android/gms/common/GoogleApiAvailability#getOpenSourceSoftwareLicenseInfo(android.content.Context) (this will be null on non-Google devices. As far as I can tell Amazon doesn't have an equivalent for us to use in the amazon build flavors). Code contributors
	</description>
			<title>Add &quot;About&quot; screen</title>
		</Manager>
		<Manager Number="136">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #342</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/342</url>
			<description>
		I was just trying to do another alpha release, and upon packaging the APK and installing it I get: 10-27 12:04:44.134 20284-20284/? E/AndroidRuntime: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2379)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2441)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.access$800(ActivityThread.java:162)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1349)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.os.Handler.dispatchMessage(Handler.java:102)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.os.Looper.loop(Looper.java:135)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.main(ActivityThread.java:5431)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Native Method)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Method.java:372)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:  Caused by: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.support.v7.app.AppCompatDelegateImplBase.onCreate(AppCompatDelegateImplBase.java:124)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.support.v7.app.AppCompatDelegateImplV7.onCreate(AppCompatDelegateImplV7.java:146)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:59)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at org.onebusaway.android.ui.HomeActivity.onCreate(HomeActivity.java:264)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.Activity.performCreate(Activity.java:6093)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1106)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2332)
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2441) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.access$800(ActivityThread.java:162) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1349) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.os.Handler.dispatchMessage(Handler.java:102) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.os.Looper.loop(Looper.java:135) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at android.app.ActivityThread.main(ActivityThread.java:5431) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Native Method) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Method.java:372) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913) 
10-27 12:04:44.134 20284-20284/? E/AndroidRuntime:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706) 
 This doesn't happen on debug builds, only releases, so I'm assuming its an issue with Proguard, likely related to the change from using deprecated ActionBarActivity to AppCompatActivity: b766fc6
	</description>
			<title>Release builds crash with java.lang.IllegalStateException</title>
		</Manager>
		<Manager Number="137">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #343</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/343</url>
			<description>
		In Tampa, lastLocationUpdateTime is always 0, so OBA Android is currently using the lastUpdateTime as the &quot;last updated X seconds ago&quot; data source for real-time vehicle positions. See OneBusAway/onebusaway-application-modules#151. However, based on a quick look at other regions, in Puget Sound lastLocationUpdateTime is populated for some agencies - see OneBusAway/onebusaway-application-modules#151 (comment). We should use lastLocationUpdateTime for the update time if its not equal to 0, and if it is equal to 0 then we should use lastUpdateTime instead.
	</description>
			<title>Use lastLocationUpdateTime when available for last vehicle location update time</title>
		</Manager>
		<Manager Number="138">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #344</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/344</url>
			<description>
		The alert icon should be hidden when editing the stop name, and re-appear when out of editing mode.
	</description>
			<title>Alert icon in arrivals header doesn't disappear when in stop name edit mode</title>
		</Manager>
		<Manager Number="139">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #345</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/345</url>
			<description>
		Currently when zooming the map to show the route in &quot;Route Mode&quot;, the route header isn't taken into account when calculating the bounds of what should be visible on the map. We should set the padding on the GoogleMap object to make sure the header is taken into account: https://developers.google.com/android/reference/com/google/android/gms/maps/GoogleMap.html#setPadding(int, int, int, int)
	</description>
			<title>Top of route hidden behind route header</title>
		</Manager>
		<Manager Number="140">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #348</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/348</url>
			<description>
		I saw a crash yesterday on startup when viewing the map when in an area with a poor quality data connection. I reproduced it several times, but unfortunately didn't have access to a machine to capture the log. I'll see if I can reproduce again and grab the log.
	</description>
			<title>Crash on startup viewing map with poor quality data connection</title>
		</Manager>
		<Manager Number="141">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #350</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/350</url>
			<description>
		For develop branch, on an HTC EVO Shift w/ Android 2.3.4. When tapping on a bus stop and viewing arrivals sorted by Route in Style B, the app crashes and I see: FATAL EXCEPTION: main
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime: java.lang.StackOverflowError
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.text.Styled.measureText(Styled.java:430)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.text.Layout.measureText(Layout.java:2065)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.text.Layout.getLineMax(Layout.java:1020)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.text.Layout.draw(Layout.java:612)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.TextView.onDraw(TextView.java:4328)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6970)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.FrameLayout.draw(FrameLayout.java:357)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.AbsListView.dispatchDraw(AbsListView.java:1480)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.ListView.dispatchDraw(ListView.java:3186)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:7082)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.AbsListView.draw(AbsListView.java:2588)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at com.sothree.slidinguppanel.SlidingUpPanelLayout.drawChild(SlidingUpPanelLayout.java:1200)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at com.sothree.slidinguppanel.SlidingUpPanelLayout.draw(SlidingUpPanelLayout.java:1243)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.support.v4.widget.DrawerLayout.drawChild(DrawerLayout.java:1089)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.FrameLayout.draw(FrameLayout.java:357)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.support.v7.internal.widget.ActionBarOverlayLayout.draw(ActionBarOverlayLayout.java:500)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1732)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.drawChild(ViewGroup.java:1730)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewGroup.dispatchDraw(ViewGroup.java:1459)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.View.draw(View.java:6973)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.widget.FrameLayout.draw(FrameLayout.java:357)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at com.android.internal.policy.impl.PhoneWindow$DecorView.draw(PhoneWindow.java:1949)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewRoot.draw(ViewRoot.java:1600)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:     at android.view.ViewRoot.performTraversals(ViewRoot.java:1321)
10-30 17:33:41.509 6527-6527/? E/AndroidRuntime:    at android.view.ViewRoot.handleMessage(ViewRoot.java:195
 Looks like this may be a repeat of #275.
	</description>
			<title>Crash on Android 2.3.4 - java.lang.StackOverflowError on Style B view init</title>
		</Manager>
		<Manager Number="142">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #356</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/356</url>
			<description>
		I've noticed that occasionally the Action Bar menu items for the chosen fragment (e.g., &quot;Starred stops&quot;) can be duplicated in the list (e.g., &quot;Remove all starred stops&quot; shows up multiple times). It seems to happen when returning to the app after its been in the background for a while. We're using the FragmentManager transaction .show() and .hide to switch between the &quot;Nearby&quot;, &quot;Starred Stops&quot; and &quot;My reminders&quot; fragments, instead of .replace(). We aren't using .replace() because that causes the loss of state of the &quot;Nearby&quot; map (in BaseMapFragment). To manage the menu for each fragment (because of the above), we're managing the visibility of the menu items in HomeActivity.onPrepareOptionsMenu() by setting a menu group visible or not visible depending on boolean flags, tracked when the user switches fragments. Something doesn't seem to be tracking right. One note - apparently fragment .onPause() events don't fire when using FragmentManager transaction .hide(), and fragment .onResume() does not fire when using FragmentManager transaction .show(). Instead, the fragment lifecycle is linked directly to the activity (HomeActivity), and a separate fragment method onHiddenChanged(boolean hidden) is called with .show() and .hide(). Not sure if this is related (I discovered this when working on #334).
	</description>
			<title>Action Bar menu items for main fragments are occasionally duplicated</title>
		</Manager>
		<Manager Number="143">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #357</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/357</url>
			<description>
		Originally discussed at #155 (comment). Currently, to hide the bottom sliding panel in the map view in HomeActivity you have to tap on on open area of the map (i.e., not on a stop marker). It's more intuitive to press the back button to close the panel, as this is the behavior in other apps such as Google Maps. Plus, finding an open area on the map to tap on can be difficult when at certain zoom levels in areas with dense stops. @bendu I appreciate your offer to implement this in #155 (comment), but it turns out I need to change some of the stop focus code to deal with #312, and as a result it overlaps this issue. So, I'll tackle this one.
	</description>
			<title>Hide sliding panel when back button is pressed in HomeActivity</title>
		</Manager>
		<Manager Number="144">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #363</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/363</url>
			<description>
		Running latest alpha build from play store I'm getting this sometimes:
	</description>
			<title>On time route incorrectly showing as delayed/early color</title>
		</Manager>
		<Manager Number="145">
			<labels>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #364</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/364</url>
			<description>
		I think it'd be good to make the real-time indicator a bit bigger.
	</description>
			<title>Increase size of real-time indicator on stop details header</title>
		</Manager>
		<Manager Number="146">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #365</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/365</url>
			<description>
		Open app Select nav drawer then starred stops Select back At this point the app exits when I'd actually prefer for it to just go back to nearby view Another area to consider is if back should undo your route filters. Currently if you set route filters and click back it does not undo the filters.
	</description>
			<title>SearchView requires extra back button press to close it</title>
		</Manager>
		<Manager Number="147">
			<labels>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #366</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/366</url>
			<description>
		Appears a few screens are continuing to use my location when not needed, so far that includes: starred stops my reminders
	</description>
			<title>Location used when not needed</title>
		</Manager>
		<Manager Number="148">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #368</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/368</url>
			<description>
		It appears that editing a stop name edits it everywhere in the app. I'd like to have a way to see both the stop nickname and realname. For example on iOS you can set the bookmark name but when you click it, it then takes you to the stop which shows the real name.
	</description>
			<title>Show stop nickname and official stop name in the &quot;Stop Details&quot; popup</title>
		</Manager>
		<Manager Number="149">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #369</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/369</url>
			<description>
		Appears that when you select edit name the keyboard is not automatically opened.
	</description>
			<title>Selecting edit name does not open keyboard</title>
		</Manager>
		<Manager Number="150">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #370</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/370</url>
			<description>
		Discused in #309 (comment). When showing a stop on the map (vs. showing arrivals for that stop), the stop isn't selected and the arrivals don't appear in the bottom sliding panel. To reproduce: search for stop 515 (or any stop) select stop select &quot;show on map&quot;
	</description>
			<title>Stop doesn't have focus when showing it on the map</title>
		</Manager>
		<Manager Number="151">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #371</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/371</url>
			<description>
		From an iPhone user (but relevant to Android too): There's one enhancement I thought you esteemed programmers might take a look at. A &quot;bus hailing&quot; light feature. The PDX Bus app, a pretty nifty one at that, has a hot button at bottom right of the main screen that when tapped flashes the screen in several colors so that you can hold it up at approaching busses in the dark (the majority of our service day now) and is more likely than a lit phone screen to halt a bus. Just a thought ... Check out PDX Bus (Portland Tri-Met) app for a demonstration. We actually created a flashing light app to make pedestrians more visible at night - https://github.com/CUTR-at-USF/walk-bright. We could easily repurpose that app for this feature.
	</description>
			<title>Add &quot;bus hailing&quot; flashing screen</title>
		</Manager>
		<Manager Number="152">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #373</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/373</url>
			<description>
		Currently the vehicle position markers show a &quot;Data updated X sec ago&quot; message in the popup balloon: We should update that time every second so it ticks up as the user views it. This is the same behavior that the new OBA website exhibits: http://tampa.onebusaway.org/enterprise/#1
	</description>
			<title>Update vehicle positions marker &quot;last updated&quot; time every second</title>
		</Manager>
		<Manager Number="153">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #374</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/374</url>
			<description>
		Currently when resuming in route view mode, the next update is always scheduled for 10 seconds out (after you initially see the vehicles load). We should change this so it's dynamic and the user sees a refresh at the normal interval - in other words, if returning to the route view and the last update of vehicle positions has been more than 10 seconds, then refresh the positions immediately.
	</description>
			<title>Schedule updates for vehicle positions properly</title>
		</Manager>
		<Manager Number="154">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #375</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/375</url>
			<description>
		Related to #363. Various places in the app are currently passing in schedule deviation in seconds to ArrivalInfo.computeColorFromDeviation(), which can result in a non-zero value that incorrectly shows an early or late color when the delay is less than 60 seconds, which we consider &quot;on time&quot;. Here's an example: We should change use of ArrivalInfo.computeColorFromDeviation() so all values passed in are in minutes, not seconds or milliseconds. This issue is highly visible in Puget Sound on the &quot;5 - Downtown Seattle Greenwood&quot;, which must have schedule or real-time arrivals that don't fall on the minute.
	</description>
			<title>On time color is shown incorrectly in vehicle status and position markers</title>
		</Manager>
		<Manager Number="155">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #376</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/376</url>
			<description>
		Originally discussed in #311 (comment). Within the sliding panel for arrival info, if the &quot;No arrivals in X&quot; message is displayed, when you switch the arrivals sorting option it disappears. Hitting refresh repopulates it.
	</description>
			<title>&quot;No arrivals in X&quot; footer doesn't fill if you switch between sorted route/eta adapters</title>
		</Manager>
		<Manager Number="156">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #377</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/377</url>
			<description>
		I'm seeing some odd things in relation to the backup feature: I'm given the option to backup to an SD card but my device does not have or support an SD card Clicking the disabled restore from SD card option results in a popup asking if I'm sure few days later and the restore from SD card option is now not appearing grayed out
	</description>
			<title>Backup option label improvements</title>
		</Manager>
		<Manager Number="157">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #381</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/381</url>
			<description>
		From OneBusAway/onebusaway-application-modules#154. As first reported on the mailing list, some parameters in the documentation for the trips-for-location and trips-for-route API methods are referred to in plural form, whereas the actual parameters (in TripsForLocationAction, TripsForRouteAction) are singular. We also have them as plural in OBA Android - we should change them to singular.
	</description>
			<title>trips-for-location and trips-for-route have plural parameter names</title>
		</Manager>
		<Manager Number="158">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #387</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/387</url>
			<description>
		We have a Finnish translation of the strings from v1.7.9 of OBA for strings.xml and arrays.xml in: https://github.com/OneBusAway/onebusaway-android/tree/master/onebusaway-android/src/main/res/values-fi v2.0.x (in the master branch) includes a significant overhaul of the UI, including adding/removing a number of strings and arrays. @arirusakko would you be able to update the Finnish translations for the newest strings.xml and arrays.xml? I'll probably add some additional strings for #313, but we can add translations for those at that time.
	</description>
			<title>Update Finnish translation</title>
		</Manager>
		<Manager Number="159">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #388</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/388</url>
			<description>
		Currently every word of ArrivalListFragment menu options are capitalized - all other menus have only the first letter capitalized. We should fix this.
	</description>
			<title>Fix case on ArrivalListFragment menu options</title>
		</Manager>
		<Manager Number="160">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #389</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/389</url>
			<description>
		If you tap on a bus stop icon on the map (or pull up a stop shortcut), and if you tap on the &quot;Sort by&quot; button in the action bar before the stops load, you'll get this stack trace: 11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime: Process: com.joulespersecond.seattlebusbot, PID: 9479
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'org.onebusaway.android.io.elements.ObaArrivalInfo[] org.onebusaway.android.io.request.ObaArrivalInfoResponse.getArrivalInfo()' on a null object reference
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at org.onebusaway.android.ui.ArrivalsListFragment.refreshLocal(ArrivalsListFragment.java:1318)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at org.onebusaway.android.ui.ArrivalsListFragment.doSortBy(ArrivalsListFragment.java:1049)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at org.onebusaway.android.ui.ArrivalsListFragment.onOptionsItemSelected(ArrivalsListFragment.java:551)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v4.app.Fragment.performOptionsItemSelected(Fragment.java:1897)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v4.app.FragmentManagerImpl.dispatchOptionsItemSelected(FragmentManager.java:2046)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v4.app.FragmentActivity.onMenuItemSelected(FragmentActivity.java:359)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.app.AppCompatActivity.onMenuItemSelected(AppCompatActivity.java:144)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.WindowCallbackWrapper.onMenuItemSelected(WindowCallbackWrapper.java:99)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.app.AppCompatDelegateImplV7.onMenuItemSelected(AppCompatDelegateImplV7.java:541)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:811)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:153)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:958)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:948)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.widget.ActionMenuView.invokeItem(ActionMenuView.java:598)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.support.v7.internal.view.menu.ActionMenuItemView.onClick(ActionMenuItemView.java:139)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.view.View.performClick(View.java:4803)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.view.View$PerformClick.run(View.java:19981)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.os.Handler.handleCallback(Handler.java:739)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.os.Handler.dispatchMessage(Handler.java:95)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.os.Looper.loop(Looper.java:135)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at android.app.ActivityThread.main(ActivityThread.java:5431)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Native Method)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at java.lang.reflect.Method.invoke(Method.java:372)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:913)
11-30 10:45:52.475 9479-9479/com.joulespersecond.seattlebusbot E/AndroidRuntime:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:706)
	</description>
			<title>Tapping &quot;Sort by&quot; before arrivals load crashes the app</title>
		</Manager>
		<Manager Number="161">
			<labels>
				<label>duplicate</label>
			</labels>
			<bugID>Issue #391</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/391</url>
			<description>
		Currently when you do a search you are taken to a new view for the results. If you made a typo or want to update your search query, you must select back and redo the search. Would be great if the search bar remained on the results view.
	</description>
			<title>Show search bar on search results screen</title>
		</Manager>
		<Manager Number="162">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #399</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/399</url>
			<description>
		Having Travis notify Slack when it completes a build is nice - however, when it notifies on every commit push it generates a lot of chatter in the Android channel. I'd like to change it to notify only when the status changes from success to failed. This should be configurable like the following. For unencrypted keys: notifications:
  slack:
    rooms:
      - onebusaway:DuVMFUTB2Y7YXRBIvLq7sqtR
    on_success: change
    on_failure: always
 For encrypted keys: notifications:
  slack:
    rooms:
      secure: GpZ8w7KRmzrZB4t2UqWCG98L23H9qbOdqYVM483XwdXbTwqzRrVjRvRzjqV9VN0XyqBW57a9nJSzmtmNZZxbjpKop74Khj+zhH0kbkfWJpTy7RrXeJZBSYqL20I5qwW4ZiZFlNUQgGE/LBYerUvsUxrAm+5MfiBWA9dctTaqlgM=
    on_success: change
    on_failure: always
 on_success: change should be the line that configures Travis to only push notifications when the build status changes from pass to fail, or fail to pass. However, for the life of me I can't get the Slack notifications to work with on_success and on_failure included - I've been testing in master, then in the PR #398. This configuration works for me: Unencrypted token, without on_success and on_failure These don't: Unencrypted token, with on_success and on_failure Encrypted token (with or without on_success and on_failure) Here are the different configurations I've tried that don't result in any notifications: notifications:
  slack:
    rooms:
      secure: GpZ8w7KRmzrZB4t2UqWCG98L23H9qbOdqYVM483XwdXbTwqzRrVjRvRzjqV9VN0XyqBW57a9nJSzmtmNZZxbjpKop74Khj+zhH0kbkfWJpTy7RrXeJZBSYqL20I5qwW4ZiZFlNUQgGE/LBYerUvsUxrAm+5MfiBWA9dctTaqlgM=
    on_success: change
    on_failure: always
 notifications:
  slack:
    rooms:
      - onebusaway:DuVMFUTB2Y7YXRBIvLq7sqtR
    on_success: change
    on_failure: always
 notifications:
  slack: onebusaway:DuVMFUTB2Y7YXRBIvLq7sqtR
    on_success: change
    on_failure: always
 notifications:
  slack:
    rooms:
      - onebusaway:DuVMFUTB2Y7YXRBIvLq7sqtR#android
    on_success: change
    on_failure: always
 I've posted a question to a recently closed bug on Travis about this to see if it's our config, or a Travis issue: travis-ci/travis-ci#2894 (comment)
	</description>
			<title>Can't filter Travis notifications for Slack</title>
		</Manager>
		<Manager Number="163">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #400</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/400</url>
			<description>
		Revealed after fixing #356 - the RouteMapController doesn't properly retain the ZOOM state that is set in onSaveInstanceState(). This is noticeable when showing the route on the map, and then changing the orientation of the device. After changing orientation, the zoom is set all the way out at world level. It should keep the same zoom level after orientation change.
	</description>
			<title>RouteMapController doesn't retain zoom state</title>
		</Manager>
		<Manager Number="164">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #401</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/401</url>
			<description>
		Noticeable after #356 - when changing orientation on the map, the padding isn't retained. That can result in the camera not zooming/moving properly, and vehicles and/or map marker with focus can be hidden under the route header or the sliding panel.
	</description>
			<title>Map padding isn't retained on orientation change</title>
		</Manager>
		<Manager Number="165">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #403</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/403</url>
			<description>
		If you open the app to the map mode, then switch to starred stops, then back to map, then change orientations, instead of showing the map in the new orientation, the starred stops fragment is shown. The maps fragment should be shown after the orientation change.
	</description>
			<title>Orientation change in HomeActivity results in wrong fragment showing</title>
		</Manager>
		<Manager Number="166">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #404</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/404</url>
			<description>
		I've been working with some folks from Microsoft Research in prototyping social networking/discussion features in OBA via a new platform called SocialPlus Embedded Social. The main benefit to SocialPlus is that its an SDK that allows social actions within the context of the app itself, as opposed to integration with other social platforms that kick you out into their own application. It does this by exposing most of the content via a REST API. We've currently discussed adding social features to OBA surrounding bus stops and routes. Here's a YouTube video showing a demo of the current integration that Microsoft has been working on - it's still a work in progress: https://youtu.be/XqEUD61ZIvs The Google Drawings document for our mockups is here: https://docs.google.com/drawings/d/1X7EB18ENI1EqgAP-Xqcf0LeL6ywb8SxbMdlPH0YfyIE/edit?usp=sharing There are Powerpoint slides in this oba-dev group post detailing the effort in greater detail as well: https://groups.google.com/d/msg/onebusaway-developers/Dl93acfEtsw/hP7lYsqKBwAJ
	</description>
			<title>Add social discussion capabilities via Microsoft Embedded Social</title>
		</Manager>
		<Manager Number="167">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #405</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/405</url>
			<description>
		We're currently missing onClickListeners for the reminders buttons in the ArrivalListHeader and in the arrival info Style B cards. We should add these so the user can go directly to editing the reminder when tapping on these buttons.
	</description>
			<title>Add click listeners to reminder buttons in header and Style B cards</title>
		</Manager>
		<Manager Number="168">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #407</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/407</url>
			<description>
		Fixed!
	</description>
			<title>Errors while importing Android Project</title>
		</Manager>
		<Manager Number="169">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #419</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/419</url>
			<description>
		Currently the tutorial is the same across all build variants, including Google and Amazon. The tutorial includes instructions for creating shortcuts (long-pressing on starred stop list item). However, shortcuts don't exist on Amazon Fire Phone (it's effectively a no-op). We should update the tutorial to prevent showing the &quot;shortcuts&quot; tutorial instruction on Amazon Fire Phone.
	</description>
			<title>Tutorial - shortcuts aren't available on Amazon Fire Phone</title>
		</Manager>
		<Manager Number="170">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #420</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/420</url>
			<description>
		For the Agency X and Y demo apps, the tutorial colors are currently shown as green instead of the theme colors for each of these apps - red and blue respectively. The color, and reference to color in the tutorial text (e.g., &quot;green dots&quot;) should be changed for these apps to be the theme colors. This affects the Agency X and Agency Y demo apps for build flavors, and not the OBA Google or Amazon builds, so it's not an emergency. It can be fixed and released whenever the next update happens to roll out.
	</description>
			<title>Agency X and Y tutorial colors are wrong</title>
		</Manager>
		<Manager Number="171">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #421</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/421</url>
			<description>
		Reported by Beta user on Fire Phone: I ran into a NullPointerException when I tap on the menu icon at the upper left corner. Unfortunately I don’t have a clear repro steps as I was just messing around with the app. I haven’t been able to reproduce it yet. See attached log. 02-16 10:46:20.963: E/AndroidRuntime(1525): FATAL EXCEPTION: main
02-16 10:46:20.963: E/AndroidRuntime(1525): Process: com.joulespersecond.seattlebusbot, PID: 1525
02-16 10:46:20.963: E/AndroidRuntime(1525): java.lang.RuntimeException: Unable to destroy activity {com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3615)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3633)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread.access$1400(ActivityThread.java:145)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1269)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.os.Handler.dispatchMessage(Handler.java:102)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.os.Looper.loop(Looper.java:145)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread.main(ActivityThread.java:5266)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at java.lang.reflect.Method.invokeNative(Native Method)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at java.lang.reflect.Method.invoke(Method.java:515)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:826)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:642)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at dalvik.system.NativeStart.main(Native Method)
02-16 10:46:20.963: E/AndroidRuntime(1525): Caused by: java.lang.NullPointerException
02-16 10:46:20.963: E/AndroidRuntime(1525):     at com.amazon.geo.client.renderer.MapControlPolaris.addFocalRegionOffset(MapControlPolaris.java:1913)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at com.amazon.geo.client.renderer.MapContext.setPadding(MapContext.java:900)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at com.amazon.geo.mapsv2.AmazonMap.setPadding(AmazonMap.java:723)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.setPadding(BaseMapFragment.java:457)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at org.onebusaway.android.map.RouteMapController$RoutePopup.hide(RouteMapController.java:309)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at org.onebusaway.android.map.RouteMapController.destroy(RouteMapController.java:151)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onDestroy(BaseMapFragment.java:276)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.Fragment.performDestroy(Fragment.java:2009)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1088)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1138)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1120)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:1966)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:316)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:158)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at org.onebusaway.android.ui.HomeActivity.onDestroy(HomeActivity.java)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.Activity.performDestroy(Activity.java:5479)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1117)
02-16 10:46:20.963: E/AndroidRuntime(1525):     at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3602)
02-16 10:46:20.963: E/AndroidRuntime(1525):     ... 11 more
02-16 10:46:20.963: I/AndroidRuntime(1525): To Report FATAL to activityManagerService
	</description>
			<title>NPE on Amazon Fire Phone</title>
		</Manager>
		<Manager Number="172">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #422</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/422</url>
			<description>
		See https://github.com/blog/2111-issue-and-pull-request-templates, also on OBA iOS OneBusAway/onebusaway-iphone#527.
	</description>
			<title>Create an issue template</title>
		</Manager>
		<Manager Number="173">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #423</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/423</url>
			<description>
		When selecting starred stop from the &quot;Starred Stops&quot; fragment, or tapping on a home screen shortcut for a stop, users are taken directly to the ArrivalsListActivity. This is the same ArrivalsListFragment that's shown in the sliding panel on the map screen, but locked to the top of the screen. The header containing the two starred routes is arguably less useful here - from a beta user: is there any way to hide/remove the top 2 arrivals (e.g. Route 24 and D Line in the screenshot above)? While the new UI looks much prettier, I found it a little bit overwhelming. Perhaps I’m just too used to the old interface :P ... It would be great if users can hide the top 2 arrivals to get more real estate, and to avoid duplicated info (especially when sorting by arrival). Maybe we can find a way to collapse the header in ArrivalsListActivity so it shows only the stop name and star - this would be close to the original presentation in this view in v1.x.
	</description>
			<title>Allow hiding header arrival info when using ArrivalsListActivity</title>
		</Manager>
		<Manager Number="174">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #428</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/428</url>
			<description>
		When on the show route view, when I try to click the bus to get real-time status information it normally ends up clicking the stop rather than the bus. To address this, I suggest hiding the stops at a certain zoom level where it no longer makes sense that you'd be trying to click an individual stop.
	</description>
			<title>Tapping on bus marker opens stop information</title>
		</Manager>
		<Manager Number="175">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #429</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/429</url>
			<description>
		I see on colors.xml#L53 the stop_info_ontime key is using the theme color. If for example I create a new &quot;brand&quot; and I want to change that value, for example to green (because the theme color is blue dark or red or another), the header show the theme color over stop_info_ontime key: And i see on ArrivalsListHeader.java#L644 there is a condition for the header always use the theme color for on time:                 if (c1 != R.color.stop_info_ontime) {
                    // Show early/late/scheduled color
                    d1.setColor(mResources.getColor(c1));
                } else {
                    // For on-time, use header default color
                    d1.setColor(mResources.getColor(R.color.theme_primary));
                } I think it makes no sense to have this condition if the color can be customized and by default that is already using the main theme. I don't know if this can be change and it is the only change to do. Best regards.
	</description>
			<title>Custom Colors on arrival header for &quot;on time&quot;</title>
		</Manager>
		<Manager Number="176">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #431</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/431</url>
			<description>
		We'll probably want to introduce these gradually (instead of all back-to-back at once), so maybe we do this after the user opens the arrivals list a few times: Route filter Show/hiding arrivals in header (from #423) Night light
	</description>
			<title>Add more tutorials for ArrivalsListFragment</title>
		</Manager>
		<Manager Number="177">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #432</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/432</url>
			<description>
		The current hint text in the Search box is &quot;Search stops or routes&quot;: However, IIRC, we really only currently support searching for stop_code or route_short_name via the stops-for-location and routes-for-location REST API methods. We should update the text to reflect this in a user-understandable way. Possibly: &quot;Search stop or route IDs&quot;
	</description>
			<title>Update search hint text to reflect true search capabilities</title>
		</Manager>
		<Manager Number="178">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #433</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/433</url>
			<description>
		@themonki Would you be able to do another quick translation? I believe all the new strings are contained in these commits, although you probably want to double-check: 0b0991e 5bf0728 c25879d
	</description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="179">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #434</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/434</url>
			<description>
		@arirusakko Would you be able to do another quick translation? I believe all the new strings are contained in these commits, although you probably want to double-check: 0b0991e 5bf0728 c25879d
	</description>
			<title>Update Finnish translation</title>
		</Manager>
		<Manager Number="180">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #440</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/440</url>
			<description>
		From Android developer console, for v2.0.8 beta: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.io.File.mkdir()' on a null object reference
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2520)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2594)
    at android.app.ActivityThread.access$800(ActivityThread.java:177)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1469)
    at android.os.Handler.dispatchMessage(Handler.java:111)
    at android.os.Looper.loop(Looper.java:194)
    at android.app.ActivityThread.main(ActivityThread.java:5616)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:959)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:754)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.io.File.mkdir()' on a null object reference
    at com.google.maps.api.android.lib6.gmm6.m.ad.a(Unknown Source)
    at com.google.maps.api.android.lib6.gmm6.c.h.a(Unknown Source)
    at com.google.maps.api.android.lib6.gmm6.c.y.a(Unknown Source)
    at com.google.maps.api.android.lib6.e.bd.a(Unknown Source)
    at com.google.maps.api.android.lib6.e.ev.a(Unknown Source)
    at com.google.maps.api.android.lib6.e.z.a(Unknown Source)
    at com.google.maps.api.android.lib6.e.y.a(Unknown Source)
    at com.google.android.gms.maps.internal.u.onTransact(SourceFile:107)
    at android.os.Binder.transact(Binder.java:385)
    at com.google.android.gms.maps.internal.IMapFragmentDelegate$zza$zza.onCreateView(Unknown Source)
    at com.google.android.gms.maps.SupportMapFragment$zza.onCreateView(Unknown Source)
    at com.google.android.gms.dynamic.zza$4.zzb(Unknown Source)
    at com.google.android.gms.dynamic.zza.zza(Unknown Source)
    at com.google.android.gms.dynamic.zza.onCreateView(Unknown Source)
    at com.google.android.gms.maps.SupportMapFragment.onCreateView(Unknown Source)
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onCreateView(BaseMapFragment.java:184)
    at android.support.v4.app.Fragment.performCreateView(Fragment.java:1965)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1078)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1259)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:738)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1624)
    at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:330)
    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:547)
    at org.onebusaway.android.ui.HomeActivity.onStart(HomeActivity.java:287)
    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1244)
    at android.app.Activity.performStart(Activity.java:6108)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2477)
    ... 10 more
 Device info: PURE XL (BLU_PURE_XL) 1
Manufacturer Symphony Teleca 
Android version Android 5.1 
RAM (MB) 3072 
Screen size 1440 × 2560 
Screen density (dpi) 640 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Mediatek 
CPU model MT6795
 This is a bug in Google Play Services - more info at https://code.google.com/p/gmaps-api-issues/issues/detail?id=9021. Google has fixed the issue internally (Jan 20, 2016) but hasn't rolled out the update to Google Play Services yet. This could actually halt our public rollout of v2.0, as according to the comments on the above gmaps-api-issue developers are seeing a large number of crashes on devices via the Android developer console. We don't want to roll out v2.0 to a large number of users just to see a ton of crashes due to this problem.
	</description>
			<title>NPE - Attempt to invoke 'boolean java.io.File.mkdir()' on a null object reference</title>
		</Manager>
		<Manager Number="181">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #441</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/441</url>
			<description>
		From Android developer console for v2.0.8 beta: java.lang.NullPointerException: Attempt to invoke interface method 'void org.onebusaway.android.map.googlemapsv2.BaseMapFragment$OnFocusChangedListener.onFocusChanged(org.onebusaway.android.io.elements.ObaStop, java.util.HashMap, android.location.Location)' on a null object reference
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment$1.run(BaseMapFragment.java:543)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 Device info: Nexus 5X (bullhead)

Manufacturer Google 
Android version Android 6.0 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 420 
OpenGL ES version 3.1 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8992
 User message: Repeat clicked back and app crash prior to close.
	</description>
			<title>NPE - BaseMapFragment.OnFocusChangedListener.onFocusChanged()</title>
		</Manager>
		<Manager Number="182">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #443</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/443</url>
			<description>
		I've gotten several questions from developers about initial setup of the app re: build flavors. The app currently defaults to the Amazon Agency X build flavor, which causes confusion. For example, see https://groups.google.com/d/msg/onebusaway-developers/KqAZu4XoNVo/GR2XbofCFgAJ. Most people will want to run the obaGoogleDebug version. We should add more documentation/screenshots in the Readme to help people troubleshoot this, so we have a readily available link to point to. Additionally, if we could make the obaGoogleDebug the default build flavor that would help things as well.
	</description>
			<title>Add more information to Readme for troubleshooting initial dev setup</title>
		</Manager>
		<Manager Number="183">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #450</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/450</url>
			<description>
		Summary: We should allow users to tap on phone numbers or URLs in Service Alerts, so they can easily access more information related to the alert. Example alert: [Low] For route schedule information visit our web site at PSTA.net or contact the PSTA InfoLine at (727) 540-1900 or TDD only (727) 540-0603.: For route schedule information visit our web site at PSTA.net or contact the PSTA InfoLine at (727) 540-1900 or TDD only (727) 540-0603. URLs to same stop/alert in webapp - http://tampa.onebusaway.org/where/standard/stop.action?id=PSTA_4473 and http://tampa.onebusaway.org/where/standard/service-alert.action?id=PSTA_13. Steps to reproduce: Open a service alert that has a URL or phone number included, try to tap on the phone number or URL. Expected behavior: If you tap on a phone number, it should open it in the dialer app. If you tap on a URL, it should open it in your browser. Observed behavior: Nothing happens. Device and Android version: LG G4 w/ Android 6.0, but should happen on all devices/Android versions. Screenshots:
	</description>
			<title>Allow tapping on phone numbers or URLs in Service Alerts</title>
		</Manager>
		<Manager Number="184">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #452</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/452</url>
			<description>
		Sorry to ping you once again @themonki, but I just added better description of arrivals/departures in #449. Would you be able to provide a Spanish translation for these new strings? Thanks!
	</description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="185">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #453</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/453</url>
			<description>
		Sorry to ping you once again @arirusakko, but I just added better description of arrivals/departures in #449. Would you be able to provide a Finnish translation for these new strings? Thanks!
	</description>
			<title>Update Finnish translation</title>
		</Manager>
		<Manager Number="186">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #460</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/460</url>
			<description>
		Summary: When tapping on the vehicle marker balloon on the map: ...you are taken to the TripDetailsListFragment. However, if you had a stop selected, we don't show the little landmark icon to indicate which stop you were viewing. This is contrary to if you tap on an arrival time, and select &quot;Show trip status&quot; - then we show the landmark marker. We should show this same landmark marker when opening TripDetailsListFragment from tapping on the vehicle marker balloon - we just need to pass the currently selected stopId via an Intent to TripDetailsActivity.
	</description>
			<title>Pass in stopId to TripDetailsActivity when tapping on vehicle marker balloon</title>
		</Manager>
		<Manager Number="187">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #461</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/461</url>
			<description>
		Via #187, we now have a &quot;Send feedback&quot; option in the navigation drawer that leads to a more structured feedback process: We should add a tutorial (ShowcaseView) message telling the user they can find the &quot;Send feedback&quot; option in the navigation drawer.
	</description>
			<title>Add tutorial for new &quot;Send feedback&quot; feature</title>
		</Manager>
		<Manager Number="188">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #465</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/465</url>
			<description>
		Summary: If a stop name is long, when it is selected in the &quot;Report a Problem&quot; page it makes the placemark icon smaller and can cascade off the screen. Steps to reproduce: Go to &quot;Send Feedback&quot;, &quot;Report Stop Problem&quot;, and tap on a stop with a long name. For example, stop_id MARTA_902375 in Atlanta region. Expected behavior: Placemark icon should remain the same size, and the text should reach the edge of the screen and then be truncated with a &quot;...&quot;. Observed behavior: Placemark icon shrinks and name can cascade off screen Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: @cagryInside This is a small issue, so I'm going to proceed with rolling the new beta out and then we can fix this in the next beta/production release.
	</description>
			<title>Long stop names should be truncated with &quot;...&quot; in issue report view</title>
		</Manager>
		<Manager Number="189">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #467</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/467</url>
			<description>
		Trying to execute a release build on master branch currently aborts with the below errors when running gradlew assembleRelease. Likely related to Proguard and issue reporting implementation, which includes a new library and dependencies there - I'm working on this. $ gradlew assembleRelease
WARNING: Dependency org.json:json:20141113 is ignored for agencyXAmazonDebug as
it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyXAmazonRelease a
s it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyXGoogleDebug as
it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyXGoogleRelease a
s it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyYAmazonDebug as
it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyYAmazonRelease a
s it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyYGoogleDebug as
it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for agencyYGoogleRelease as it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for obaAmazonDebug as it may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for obaAmazonRelease as it
 may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for obaGoogleDebug as it m
ay be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
WARNING: Dependency org.json:json:20141113 is ignored for obaGoogleRelease as it
 may be conflicting with the internal version provided by Android.
         In case of problem, please repackage with jarjar to change the class packages
:onebusaway-android:copyMapsApiV2Classes UP-TO-DATE
:onebusaway-android:preBuild UP-TO-DATE
:onebusaway-android:preAgencyXAmazonReleaseBuild UP-TO-DATE
:onebusaway-android:checkAgencyXAmazonReleaseManifest
:onebusaway-android:preAgencyXAmazonDebugBuild UP-TO-DATE
:onebusaway-android:preAgencyYAmazonDebugBuild UP-TO-DATE
:onebusaway-android:preAgencyYAmazonReleaseBuild UP-TO-DATE
:onebusaway-android:preObaAmazonDebugBuild UP-TO-DATE
:onebusaway-android:preObaAmazonReleaseBuild UP-TO-DATE
:onebusaway-android:prepareComAmazonAndroidAmazonMapsApi20Library
:onebusaway-android:preAgencyXGoogleDebugBuild UP-TO-DATE
:onebusaway-android:preAgencyXGoogleReleaseBuild UP-TO-DATE
:onebusaway-android:preAgencyYGoogleDebugBuild UP-TO-DATE
:onebusaway-android:preAgencyYGoogleReleaseBuild UP-TO-DATE
:onebusaway-android:preObaGoogleDebugBuild UP-TO-DATE
:onebusaway-android:preObaGoogleReleaseBuild UP-TO-DATE
:onebusaway-android:prepareComAndroidSupportAppcompatV72221Library UP-TO-DATE
:onebusaway-android:prepareComAndroidSupportCardviewV72221Library UP-TO-DATE
:onebusaway-android:prepareComAndroidSupportDesign2221Library UP-TO-DATE
:onebusaway-android:prepareComAndroidSupportSupportV42311Library UP-TO-DATE
:onebusaway-android:prepareComGithubAmlcurranShowcaseviewLibrary543Library UP-TO-DATE
:onebusaway-android:prepareComGoogleAndroidGmsPlayServicesAnalytics830Library UP-TO-DATE
:onebusaway-android:prepareComGoogleAndroidGmsPlayServicesBase830Library UP-TO-DATE
:onebusaway-android:prepareComGoogleAndroidGmsPlayServicesBasement830Library UP-TO-DATE
:onebusaway-android:prepareComGoogleAndroidGmsPlayServicesLocation830Library UP-TO-DATE
:onebusaway-android:prepareComGoogleAndroidGmsPlayServicesMaps830Library UP-TO-DATE
:onebusaway-android:prepareComSothreeSlidinguppanelLibrary311Library UP-TO-DATE
:onebusaway-android:prepareAgencyXAmazonReleaseDependencies
:onebusaway-android:compileAgencyXAmazonReleaseAidl
:onebusaway-android:compileAgencyXAmazonReleaseRenderscript
:onebusaway-android:generateAgencyXAmazonReleaseBuildConfig
:onebusaway-android:generateAgencyXAmazonReleaseAssets UP-TO-DATE
:onebusaway-android:mergeAgencyXAmazonReleaseAssets
:onebusaway-android:generateAgencyXAmazonReleaseResValues UP-TO-DATE
:onebusaway-android:generateAgencyXAmazonReleaseResources
:onebusaway-android:mergeAgencyXAmazonReleaseResources
AAPT err(56705202): F:\Android_Studio\onebusaway-android\onebusaway-android\src\main\res\drawable-mdpi\ic_light_bulb.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited
AAPT err(1470143038): F:\Android_Studio\onebusaway-android\onebusaway-android\src\main\res\drawable-hdpi\ic_light_bulb.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited
AAPT err(1215593490): F:\Android_Studio\onebusaway-android\onebusaway-android\src\main\res\drawable-hdpi\ic_customer_service_phone.png: libpng warning: iCCP: No
t recognizing known sRGB profile that has been edited
AAPT err(1610433570): F:\Android_Studio\onebusaway-android\onebusaway-android\src\main\res\drawable-xxhdpi\ic_light_bulb.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited
AAPT err(2047991957): F:\Android_Studio\onebusaway-android\onebusaway-android\src\main\res\drawable-xhdpi\ic_light_bulb.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited
:onebusaway-android:processAgencyXAmazonReleaseManifest
:onebusaway-android:processAgencyXAmazonReleaseResources
Unknown source file : warning: string 'report_problem_cancel' has no default translation.
Unknown source file : warning: string 'report_problem_code' has no default translation.
Unknown source file : warning: string 'report_problem_comment' has no default translation.
Unknown source file : warning: string 'report_problem_email' has no default translation.
Unknown source file : warning: string 'report_problem_email_hint' has no default
 translation.
Unknown source file : warning: string 'report_problem_vehiclenumber_bus' has no
default translation.
Unknown source file : warning: string 'stop_info_option_reportproblem' has no default translation.

:onebusaway-android:generateAgencyXAmazonReleaseSources
:onebusaway-android:processAgencyXAmazonReleaseJavaRes UP-TO-DATE
:onebusaway-android:compileAgencyXAmazonReleaseJavaWithJavac
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
:onebusaway-android:compileAgencyXAmazonReleaseNdk UP-TO-DATE
:onebusaway-android:compileAgencyXAmazonReleaseSources
&gt; Building 25% &gt; :onebusaway-android:askForPasswords
Keystore password:
Key password:
:onebusaway-android:askForPasswords
:onebusaway-android:proguardAgencyXAmazonRelease
Note: there were 12 duplicate class definitions.
      (http://proguard.sourceforge.net/manual/troubleshooting.html#duplicateclass)
Warning: library class android.test.AndroidTestCase extends or implements program class junit.framework.TestCase
Warning: library class android.test.AndroidTestRunner extends or implements prog
ram class junit.runner.BaseTestRunner
Warning: library class android.test.InstrumentationTestCase extends or implement
s program class junit.framework.TestCase
Warning: library class android.test.InstrumentationTestSuite extends or implements program class junit.framework.TestSuite
Warning: library class android.test.suitebuilder.TestSuiteBuilder$FailedToCreate
Tests extends or implements program class junit.framework.TestCase
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ManagementFactory
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ThreadMXBean
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ThreadMXBean
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ManagementFactory
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ThreadMXBean
Warning: org.junit.internal.runners.statements.FailOnTimeout: can't find referenced class java.lang.management.ThreadMXBean
Warning: org.junit.rules.DisableOnDebug: can't find referenced class java.lang.management.ManagementFactory
Warning: org.junit.rules.DisableOnDebug: can't find referenced class java.lang.management.RuntimeMXBean
Warning: org.junit.rules.DisableOnDebug: can't find referenced class java.lang.management.ManagementFactory
Warning: org.junit.rules.DisableOnDebug: can't find referenced class java.lang.management.RuntimeMXBean
Warning: there were 10 unresolved references to classes or interfaces.
         You may need to add missing library jars or update their versions.
         If your code works fine without the missing classes, you can suppress
         the warnings with '-dontwarn' options.
         (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolved
class)
Warning: there were 5 instances of library classes depending on program classes.

         You must avoid such dependencies, since the program classes will
         be processed, while the library classes will remain unchanged.
         (http://proguard.sourceforge.net/manual/troubleshooting.html#dependency
)
Exception while processing task
java.io.IOException: Please correct the above warnings first.
        at proguard.Initializer.execute(Initializer.java:473)
        at proguard.ProGuard.initialize(ProGuard.java:233)
        at proguard.ProGuard.execute(ProGuard.java:98)
        at proguard.gradle.ProGuardTask.proguard(ProGuardTask.java:1074)
        at com.android.build.gradle.tasks.AndroidProGuardTask.doMinification(And
roidProGuardTask.java:139)
        at com.android.build.gradle.tasks.AndroidProGuardTask$1.run(AndroidProGu
ardTask.java:115)
        at com.android.builder.tasks.Job.runTask(Job.java:48)
        at com.android.build.gradle.tasks.SimpleWorkQueue$EmptyThreadContext.run
Task(SimpleWorkQueue.java:41)
        at com.android.builder.tasks.WorkQueue.run(WorkQueue.java:227)
        at java.lang.Thread.run(Thread.java:745)
:onebusaway-android:dexAgencyXAmazonRelease
:onebusaway-android:shrinkAgencyXAmazonReleaseResources
Removed unused resources: Binary resource data reduced from 2185KB to 973KB: Rem
oved 55%
Note: If necessary, you can disable resource shrinking by adding
android {
    buildTypes {
        release {
            shrinkResources false
        }
    }
}
:onebusaway-android:validateReleaseSigning
:onebusaway-android:packageAgencyXAmazonRelease FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':onebusaway-android:packageAgencyXAmazonRelease'.
&gt; Unable to compute hash of F:\Android_Studio\onebusaway-android\onebusaway-andr
oid\build\intermediates\classes-proguard\agencyXamazon\release\classes.jar

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug
option to get more log output.

BUILD FAILED

Total time: 1 mins 4.5 secs
	</description>
			<title>Release build fails</title>
		</Manager>
		<Manager Number="190">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #473</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/473</url>
			<description>
		Summary: The app crashes when trying to restore a backup created with an older version of the app/database: Process: com.joulespersecond.seattlebusbot, PID: 24120
                                                   java.lang.RuntimeException: Unable to create application org.onebusaway.android.app.Application: android.database.sqlite.SQLiteException: Can't downgrade database from version 23 to 22
                                                       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4798)
                                                       at android.app.ActivityThread.access$1600(ActivityThread.java:157)
                                                       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1417)
                                                       at android.os.Handler.dispatchMessage(Handler.java:102)
                                                       at android.os.Looper.loop(Looper.java:148)
                                                       at android.app.ActivityThread.main(ActivityThread.java:5525)
                                                       at java.lang.reflect.Method.invoke(Native Method)
                                                       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
                                                       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
                                                    Caused by: android.database.sqlite.SQLiteException: Can't downgrade database from version 23 to 22
                                                       at android.database.sqlite.SQLiteOpenHelper.onDowngrade(SQLiteOpenHelper.java:360)
                                                       at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked(SQLiteOpenHelper.java:254)
                                                       at android.database.sqlite.SQLiteOpenHelper.getWritableDatabase(SQLiteOpenHelper.java:163)
                                                       at org.onebusaway.android.provider.ObaProvider.getDatabase(ObaProvider.java:942)
                                                       at org.onebusaway.android.provider.ObaProvider.query(ObaProvider.java:517)
                                                       at android.content.ContentProvider.query(ContentProvider.java:1017)
                                                       at android.content.ContentProvider$Transport.query(ContentProvider.java:238)
                                                       at android.content.ContentResolver.query(ContentResolver.java:498)
                                                       at android.content.ContentResolver.query(ContentResolver.java:441)
                                                       at org.onebusaway.android.provider.ObaContract$Regions.get(ObaContract.java:1054)
                                                       at org.onebusaway.android.provider.ObaContract$Regions.get(ObaContract.java:1035)
                                                       at org.onebusaway.android.app.Application.initObaRegion(Application.java:420)
                                                       at org.onebusaway.android.app.Application.onCreate(Application.java:96)
                                                       at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1013)
                                                       at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4795)
                                                       at android.app.ActivityThread.access$1600(ActivityThread.java:157) 
                                                       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1417) 
                                                       at android.os.Handler.dispatchMessage(Handler.java:102) 
                                                       at android.os.Looper.loop(Looper.java:148) 
                                                       at android.app.ActivityThread.main(ActivityThread.java:5525) 
                                                       at java.lang.reflect.Method.invoke(Native Method) 
                                                       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730) 
                                                       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620) 
 Steps to reproduce: Install an old version of the app with an old version of the database Star a stop Go to &quot;Settings-&gt;Save to storage&quot; Update to the app to a new version that includes a new version of the database Go to &quot;Settings-&gt;Restore from storage&quot; Expected behavior: Successfully restore the old data and operate as normal. Observed behavior: App crashes on startup and is no longer usable. Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>Crash when restoring old backup in new version of app database</title>
		</Manager>
		<Manager Number="191">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #474</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/474</url>
			<description>
		Summary: If an orientation change happens while a tutorial view is showing, no subsequent tutorial screens will show until the app is killed and restarted. Steps to reproduce: Install and start app Rotate screen while welcome screen shows Tap on stop Expected behavior: Should show tutorial for arrival times. Observed behavior: No tutorial is shown. Device and Android version: LG G4 with Android 6.0
	</description>
			<title>Tutorials are disabled after orientation change when showing</title>
		</Manager>
		<Manager Number="192">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #478</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/478</url>
			<description>
		Summary: If you get a backup of DB with the lower version of the application, and restore this DB after you upgrade the application, it will effectively delete the data in new created tables. Steps to reproduce: Download the lower version of the app. Go to settings and click Save to storage. Remove the app. Download the latest version of the app. Go to settings and click Restore from storage. The latest version of the app has Open311 url data in the tables. After you do the above operations, the Open311 servers table will be empty. _Shortcut steps to reproduce:_ Download the latest version of the app. Download db.backup.zip (taken from an older version of OBA) and unzip it. Put it under \Internal storage\OBABackups. Go to Settings and click Restore from storage. Expected behavior: It should update the data in the old tables. If there is new table, it repopulate it if possible. Observed behavior: When you restore an older version of DB, the Open311 servers table will be empty. Device and Android version: Stock Nexus 6 w/ Android 6.0.1 I don't believe this is device or version specific bug. It can occur with any device or version. Screenshots: Before DB dump It has open 311 enpoint: After DB dump, the open311 endpoints are no longer in the DB:
	</description>
			<title>Restoring an old database version results in empty Open311 tables</title>
		</Manager>
		<Manager Number="193">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #480</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/480</url>
			<description>
		Summary: Reported via Android Developer Console: java.lang.NullPointerException: Attempt to invoke interface method 'void org.onebusaway.android.ui.RouteFavoriteDialogFragment$Callback.onSelectionComplete(boolean)' on a null object reference
    at org.onebusaway.android.ui.RouteFavoriteDialogFragment$1.onClick(RouteFavoriteDialogFragment.java:207)
    at com.android.internal.app.AlertController$ButtonHandler.handleMessage(AlertController.java:162)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:135)
    at android.app.ActivityThread.main(ActivityThread.java:5438)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:903)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:698)
 Steps to reproduce: I was able to reproduce by doing the following: Open any stop Tap on any arrival Select &quot;Add star to route&quot; Rotate the screen Tap on &quot;Save&quot; Expected behavior: The app should complete the rotation and allow the user to save the favorite route. Observed behavior: The app crashes with the above stacktrace. Device and Android version: I reproduced this on a stock LG G4 with Android 6.0
	</description>
			<title>Route favorite dialog crashes upon orientation change</title>
		</Manager>
		<Manager Number="194">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #481</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/481</url>
			<description>
		Summary: The bus stop ID field in the Open311 issue report for stop and arrival time issues in Pinellas County should auto-populate. It currently doesn't. Steps to reproduce: Tap on a bus stop on the map in Pinellas County Tap on &quot;Send feedback&quot; in the navigation drawer Select &quot;Report a Stop Problem&quot; or &quot;Report an Arrival Time Problem&quot; Scroll down to view the &quot;Bus stop id (4 digit) (required)&quot; field Expected behavior: The &quot;Bus stop id (4 digit) (required)&quot; field should be automatically populated with the stop_code for this stop. Observed behavior: The &quot;Bus stop id (4 digit) (required)&quot; field is left blank and the hint text is shown. Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots:
	</description>
			<title>Bus stop ID isn't autopopulating in Open311 issue reports</title>
		</Manager>
		<Manager Number="195">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #482</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/482</url>
			<description>
		Summary: Issue reporting fragments (ReportStopProblemFragment, ReportTripProblemFragment, Open311ProblemFragment) don't get closed after orientation change. Steps to reproduce: Go to send feedback Fill an issue form Rotate screen Click submit button Expected behavior: What did you expect the app to do? Observed behavior: It should close the activity and fragments. Device and Android version: Nexus 6 w/ Android 6.0.1
	</description>
			<title>Issue reporting fragments don't finish upon orientation change</title>
		</Manager>
		<Manager Number="196">
			<labels>
				<label>None yet</label>
			</labels>
			<bugID>Issue #486</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/486</url>
			<description>
		Summary: In Problem reporting view, trip headsign text disappears when orientation change. Steps to reproduce: Open any stop Tap on any arrival Select &quot;Report arrival time problem&quot; Rotate the screen Expected behavior: It should keep the headsign text. Observed behavior: Headsign text disappears. Device and Android version: Motorola Nexus 6 w/ 6.0.1 Screenshots:
	</description>
			<title>Trip headsign disappears on orientation change</title>
		</Manager>
		<Manager Number="197">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #490</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/490</url>
			<description>
		Summary: When you refresh the arrival times, the loading animation doesn't appear. It does appear when initially loading the arrivals when ArrivalsListFragment is first instantiated. Reported by beta user: Animation for the 'Refresh' icon would be nice to have. Steps to reproduce: Go to any region/stop and view arrivals Tap on the refresh button, or wait for the arrivals to automatically refresh Expected behavior: A &quot;loading&quot; message should appear. Observed behavior: No &quot;loading&quot; message appears - instead, it looks like nothing happened if the arrivals don't change on refresh. Device and Android version: Stock LG G4 w/ Android 6.0, Nexus 5X w/ Android 6.0.1 Screenshots: Here's what shows on the initial load of arrivals (or at least what I could get in a screenshot):
	</description>
			<title>Loading animation doesn't appear when refreshing arrival times</title>
		</Manager>
		<Manager Number="198">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #491</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/491</url>
			<description>
		Summary: In the issue reporting process, when you first tap on &quot;Send feedback&quot; and you are prompted with the &quot;Are you in the Tampa Bay region?&quot;, if you tap the back button and then tap on &quot;Send feedback&quot; again, it is treated as though you answered &quot;Yes&quot; to the region confirmation prompt dialog. Steps to reproduce: Do a fresh install of OBA Android Tap on &quot;Send feedback&quot; Hit the back button when the dialog for &quot;Are you in the Tampa Bay region?&quot; is displayed Tap on &quot;Send feedback&quot; again Expected behavior: Prompt me again for the &quot;Are you in the Tampa Bay region?&quot; Observed behavior: The list of feedback general categories is displayed, which (I believe) assumes that I answered &quot;Yes&quot; to the region confirmation dialog: Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>Tapping back in region confirmation dialog is treated as a &quot;yes&quot;</title>
		</Manager>
		<Manager Number="199">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #496</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/496</url>
			<description>
		Summary: When viewing the reminder for a trip that has just arrived/departed, the reminder always says &quot;Route X has departed&quot;, even if the trip was incoming to a transit center. In that case, the reminder should say &quot;Route X has arrived&quot;. This doesn't affect trips that haven't yet arrived/departed - the text says &quot;Route X is 5 min away&quot;. This is related to issue #287 for better distinguishing between arrivals and departures in the main arrival list, which was fixed in PR #449. Steps to reproduce: Set an alarm for a trip that has a negative arrival time for an arrival trip (e.g., an inbound trip at a transit center). The arrival time in the ArrivalListFragment should say &quot;Arrived at 2:00 PM&quot;. Wait for the notification to trigger Expected behavior: Reminder should read &quot;Route X has arrived&quot;. Observed behavior: Reminder says &quot;Route X has departed&quot;. Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: Here's the reminder saying &quot;Route 5 has departed&quot; for an arrival (you can see the &quot;Arrived at&quot; text in the background) : Here's an upcoming route that hasn't yet arrived/departed - the text is more generic so it fits both cases - if it makes sense, we might want to change this to &quot;arrived/departed&quot; as well:
	</description>
			<title>Reminder text doesn't accurately reflect arrival/departure information</title>
		</Manager>
		<Manager Number="200">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #500</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/500</url>
			<description>
		Summary: We would like to report how many times a service alert button is clicked. Therefore, we need to add analytics when a service alert button is clicked. We should also include the agency id to this report.
	</description>
			<title>Add analytics to the &quot;service alerts button&quot;</title>
		</Manager>
		<Manager Number="201">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #503</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/503</url>
			<description>
		@themonki Would you be able to update the Spanish translation? There has been a good amount of text added since the last update, so I've pulled out the changes/additions below. I think this covers everything.     </description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="202">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #507</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/507</url>
			<description>
		@themonki Sorry! I completely missed the changes to arrays.xml in the last issue I opened. If you have a chance soon, here are the strings we'd need to translate: arrays.xml     </description>
			<title>Update Spanish translation - arrays.xml</title>
		</Manager>
		<Manager Number="203">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #508</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/508</url>
			<description>
		Summary: In ArrivalsListAdapterStyleA, if the route short name is more than 3 characters it overflows to new line. Steps to reproduce: Go to Tampa Bay region Search for route 100X Look at the arrivals Expected behavior: It should be in the same line. Device and Android version: Motorola Nexus 6 w/ Android 6.0.1 Screenshots:
	</description>
			<title>RouteShortName overflows if it is more than three character</title>
		</Manager>
		<Manager Number="204">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #515</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/515</url>
			<description>
		Summary: Crash from Android Developer Console: java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String org.onebusaway.android.io.elements.ObaTrip.getRouteId()' on a null object reference
    at org.onebusaway.android.ui.TripDetailsListFragment.onOptionsItemSelected(TripDetailsListFragment.java:193)
    at android.support.v4.app.Fragment.performOptionsItemSelected(Fragment.java:2070)
    at android.support.v4.app.FragmentManagerImpl.dispatchOptionsItemSelected(FragmentManager.java:2159)
    at android.support.v4.app.FragmentController.dispatchOptionsItemSelected(FragmentController.java:295)
    at android.support.v4.app.FragmentActivity.onMenuItemSelected(FragmentActivity.java:367)
    at android.support.v7.app.AppCompatActivity.onMenuItemSelected(AppCompatActivity.java:144)
    at android.support.v7.internal.view.WindowCallbackWrapper.onMenuItemSelected(WindowCallbackWrapper.java:99)
    at android.support.v7.app.AppCompatDelegateImplV7.onMenuItemSelected(AppCompatDelegateImplV7.java:541)
    at android.support.v7.internal.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:811)
    at android.support.v7.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:153)
    at android.support.v7.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:958)
    at android.support.v7.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:948)
    at android.support.v7.widget.ActionMenuView.invokeItem(ActionMenuView.java:598)
    at android.support.v7.internal.view.menu.ActionMenuItemView.onClick(ActionMenuItemView.java:139)
    at android.view.View.performClick(View.java:5697)
    at android.widget.TextView.performClick(TextView.java:10826)
    at android.view.View$PerformClick.run(View.java:22526)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:158)
    at android.app.ActivityThread.main(ActivityThread.java:7224)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 Steps to reproduce: Unknown Looks like this happened when the user tapped on the &quot;Show on Map&quot; option - the ObaTrip in the following line was null: ObaTrip trip = refs.getTrip(tripId); Expected behavior: Not crash Observed behavior: Crash Device and Android version: Samsung Galaxy S5 w/ Android 6.0
	</description>
			<title>NPE in TripDetailsListFragment</title>
		</Manager>
		<Manager Number="205">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #517</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/517</url>
			<description>
		Summary: If you rotate your device when showing a route on the map and the sliding panel is closed, the map will center on lat/long (0,0) and will not zoom to show the route. Note that if the sliding panel is showing, it does zoom correctly. Steps to reproduce: Tap on a stop on the map in portrait orientation Tap on an arrival time, and choose &quot;Show route on map&quot; Close the sliding panel by hitting the Back button Rotate the device to landscape orientation Expected behavior: Zoom to show me the route on the map: Observed behavior: A blue screen in the map area, which is the view of the ocean at lat/long (0,0): Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>Map doesn't zoom to route on orientation change if sliding panel closed</title>
		</Manager>
		<Manager Number="206">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #518</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/518</url>
			<description>
		Summary: NPE when changing screen orientations in HomeActivity, showing the route, after I received an incoming phone call and returned to the app: AndroidRuntime: FATAL EXCEPTION: main
    Process: com.joulespersecond.seattlebusbot, PID: 28657
    java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object android.content.Context.getSystemService(java.lang.String)' on a null object reference
        at org.onebusaway.android.util.UIUtils.isConnected(UIUtils.java:543)
        at org.onebusaway.android.util.UIUtils.getMapErrorString(UIUtils.java:518)
        at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.showMapError(BaseMapFragment.java:604)
        at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadFinished(RouteMapController.java:398)
        at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadComplete(RouteMapController.java:435)
        at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadComplete(RouteMapController.java:382)
        at android.support.v4.content.Loader.deliverResult(Loader.java:126)
        at org.onebusaway.android.map.RouteMapController$RoutesLoader.deliverResult(RouteMapController.java:373)
        at org.onebusaway.android.map.RouteMapController$RoutesLoader.deliverResult(RouteMapController.java:345)
        at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:249)
        at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:77)
        at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:466)
        at android.support.v4.content.ModernAsyncTask.access$400(ModernAsyncTask.java:48)
        at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:483)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:148)
        at android.app.ActivityThread.main(ActivityThread.java:5525)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
 Steps to reproduce: I saw this while trying to grab screenshots for #517. Steps were something along the lines of: Tap on a stop on the map in portrait orientation Tap on an arrival time, and choose &quot;Show route on map&quot; Close the sliding panel by hitting the Back button Rotate the device to landscape orientation I then got an incoming phone call and answered it, and then returned to OBA. At this point it crashed and I grabbed the above stack trace via Android Studio. Expected behavior: Show me the route on the map. Observed behavior: It crashed. Device and Android version: Stock LG G4 w/ Android 6.0 and Google Play Services v9.0.83 on the device. Screenshots: N/A
	</description>
			<title>NPE when changing screen orientations in HomeActivity in route mode w/ interruption</title>
		</Manager>
		<Manager Number="207">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #519</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/519</url>
			<description>
		Summary: When reporting an issue via &quot;Send feedback&quot; form, and stop or arrival time problem, it seems like it may be a more natural flow to pick the issue category and then enter a description. It also helps the user focus on the types of issues they should be reporting here. I took a look at the Pinellas County (i.e., SeeClickFix white label) app and then put category above issue description. Steps to reproduce: In main navigation drawer, tap on &quot;Send feedback&quot; Pick &quot;Report a Stop Problem&quot; Tap on a stop in Pinellas County (where there is Open311 coverage). Expected behavior: Issue category should appear above the text box to enter an issue description. Observed behavior: Issue description is above issue category: Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above.
	</description>
			<title>Send feedback Open311 form - move issue category above issue description?</title>
		</Manager>
		<Manager Number="208">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #520</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/520</url>
			<description>
		Summary: When I change my device on horizontal view the menu look cut and I can't scroll down to see all options on the menu. Steps to reproduce: Open onebusaway Change the position of my device to horizontal Open the principal menu Expected behavior: Scroll down and see all options on the menu Observed behavior: The menu look cut and can not scroll down to see all options Device and Android version: Xperia Z3 Compact (D5803) Manufacturer Sony Android version Android 6.0.1 RAM (MB) 2048 Screen size 720 × 1280 Screen density (dpi) 320 OpenGL ES version 3.0 Native platform armeabi-v7a CPU make Qualcomm CPU model MSM8974AC Google Play Services 9.0.83 EDIT Onebusaway Android version 2.0.11 Screenshots:
	</description>
			<title>Main navigation panel can not scroll in landscape orientation</title>
		</Manager>
		<Manager Number="209">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #523</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/523</url>
			<description>
		Summary: Reported on oba-dev list - https://groups.google.com/forum/#!topic/onebusaway-developers/bq8y7m6dykE If the user is viewing arrivals in ArrivalsListActivity and taps on &quot;View on Map&quot; option in the Action Bar, the stop name is not populated immediately, showing &quot;University Area Transit Center&quot; layout placeholder name instead of the actual stop name. Steps to reproduce: From above post: I displayed next departures from a favourite stop (text only view) I clicked on map icon My steps: Go to Starred Stops Tap on a starred stop Tap on map icon in Action Bar You can also reproduce this by: Rotating the orientation of the device in the map view when the arrivals header is open Minimizing the app when the sliding panel header is visible, browsing other apps until OBA gets suspended in the background, and then returning to OBA so Android re-loads it Expected behavior: Stop location for the selected stop should be focused on, and the stop name for this stop should be shown in the sliding panel header in HomeActivity. Observed behavior: I correct location on map showed up, but instead of correct name of stop and list of next departures, &quot;University Area Transit Center&quot; showed up with no departures This is more noticeable in slower internet connections when the stop name doesn't populate quickly from the server response. Device and Android version: Unknown Screenshots:
	</description>
			<title>Stop name in arrivals header sliding panel is incorrect on initial load</title>
		</Manager>
		<Manager Number="210">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #529</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/529</url>
			<description>
		Summary: From Android Developer Console for staged rollout v2.0.12: java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
    at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1489)
    at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1507)
    at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:634)
    at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:613)
    at org.onebusaway.android.report.ui.SimpleArrivalListFragment.show(SimpleArrivalListFragment.java:87)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity.showArrivalListFragment(InfrastructureIssueActivity.java:1055)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity.showTripProblemFragment(InfrastructureIssueActivity.java:1040)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity.showTransitService(InfrastructureIssueActivity.java:982)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity.onSpinnerItemSelected(InfrastructureIssueActivity.java:522)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity.access$300(InfrastructureIssueActivity.java:78)
    at org.onebusaway.android.report.ui.InfrastructureIssueActivity$2.onItemSelected(InfrastructureIssueActivity.java:457)
    at android.widget.AdapterView.fireOnSelected(AdapterView.java:931)
    at android.widget.AdapterView.dispatchOnItemSelected(AdapterView.java:920)
    at android.widget.AdapterView.-wrap1(AdapterView.java)
    at android.widget.AdapterView$SelectionNotifier.run(AdapterView.java:890)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5422)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 There is also a similar stacktrace from a crash in April for the production v1.7.9 - not sure if this is related to the same problem, but both stack traces including the flow for trip problem reporting: java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState
    at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1360)
    at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1378)
    at android.support.v4.app.BackStackRecord.commitInternal(BackStackRecord.java:595)
    at android.support.v4.app.BackStackRecord.commit(BackStackRecord.java:574)
    at com.joulespersecond.seattlebusbot.ReportTripProblemFragment.show(ReportTripProblemFragment.java:77)
    at com.joulespersecond.seattlebusbot.ArrivalsListFragment$3.onClick(ArrivalsListFragment.java:436)
    at com.android.internal.app.AlertController$AlertParams$3.onItemClick(AlertController.java:954)
    at android.widget.AdapterView.performItemClick(AdapterView.java:308)
    at android.widget.AbsListView.performItemClick(AbsListView.java:1524)
    at android.widget.AbsListView$PerformClick.run(AbsListView.java:3531)
    at android.widget.AbsListView$3.run(AbsListView.java:4898)
    at android.os.Handler.handleCallback(Handler.java:733)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:136)
    at android.app.ActivityThread.main(ActivityThread.java:5586)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:515)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1268)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1084)
    at dalvik.system.NativeStart.main(Native Method)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: For v2.0.12 crash: * Nexus 6P (angler)
* Manufacturer Google 
* Android version Android 6.0 
* RAM (MB) 3072 
* Screen size 1440 × 2560 
* Screen density (dpi) 560 
* OpenGL ES version 3.1 
* Native platform armeabi-v7a 
* CPU make Qualcomm 
* CPU model MSM8994
 for v1.7.9 crash: * Galaxy S5 (k3g)
* Manufacturer Samsung 
* Android version Android 4.4 
* RAM (MB) 2048 
* Screen size 1080 × 1920 
* Screen density (dpi) 480 
* OpenGL ES version 3.0 
* Native platform armeabi-v7a 
* CPU make Samsung 
* CPU model Exynos 5422
 @cagryInside Could you please take a look at this? Thanks!
	</description>
			<title>IllegalStateException: Can not perform this action after onSaveInstanceState</title>
		</Manager>
		<Manager Number="211">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #530</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/530</url>
			<description>
		Summary: From Android Developer Console for staged rollout v2.0.12: java.lang.NullPointerException: Attempt to invoke virtual method 'double android.location.Location.getLatitude()' on a null object reference
    at org.onebusaway.android.ui.HomeActivity.goToSendFeedBack(HomeActivity.java:1054)
    at org.onebusaway.android.ui.HomeActivity.goToNavDrawerItem(HomeActivity.java:411)
    at org.onebusaway.android.ui.HomeActivity.onNavigationDrawerItemSelected(HomeActivity.java:355)
    at org.onebusaway.android.ui.NavigationDrawerFragment.selectItem(NavigationDrawerFragment.java:263)
    at org.onebusaway.android.ui.NavigationDrawerFragment$3.onClick(NavigationDrawerFragment.java:430)
    at android.view.View.performClick(View.java:5197)
    at android.view.View$PerformClick.run(View.java:20926)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:5942)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
 User comment: Upgrade is terrible. No improvements, more confusing, can't turn off hints/help, crashes. Appears there was no testing by actual users. Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Galaxy S4 (jfltevzw)
Manufacturer Samsung 
Android version Android 4.2 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 2.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model APQ8064
 @cagryInside Could you please take a look? Thanks!
	</description>
			<title>NPE when getting Location in Send Feedback flow</title>
		</Manager>
		<Manager Number="212">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #536</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/536</url>
			<description>
		Summary: When save data and restore them, the Custom OBA Server API is removed. Steps to reproduce: Set a Custom Server API Click on Save to storage Click on Restore from storage Close and Open the App Expected behavior: Reload backed up data, and the Custom OBA Server API should still be selected Observed behavior: The Custom OBA Server API is deleted and it shows &quot;the manual region prompt&quot; Device and Android version: Xperia Z3 Compact (D5803) Manufacturer Sony Android version Android 6.0.1 RAM (MB) 2048 Screen size 720 × 1280 Screen density (dpi) 320 OpenGL ES version 3.0 Native platform armeabi-v7a CPU make Qualcomm CPU model MSM8974AC Google Play Services 9.0.83 EDIT Onebusaway Android version 2.0.13 Screenshots: none Edit: in black
	</description>
			<title>On restore from storage Custom Server API is deleted</title>
		</Manager>
		<Manager Number="213">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #538</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/538</url>
			<description>
		Summary: I happened to see this crash today on my device: E/AndroidRuntime: FATAL EXCEPTION: main
   Process: com.joulespersecond.seattlebusbot, PID: 32155
   java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.report.ui.InfrastructureIssueActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String edu.usf.cutr.open311client.Open311.getJurisdiction()' on a null object reference
       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2434)
       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2494)
       at android.app.ActivityThread.access$900(ActivityThread.java:157)
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1356)
       at android.os.Handler.dispatchMessage(Handler.java:102)
       at android.os.Looper.loop(Looper.java:148)
       at android.app.ActivityThread.main(ActivityThread.java:5525)
       at java.lang.reflect.Method.invoke(Native Method)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
    Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String edu.usf.cutr.open311client.Open311.getJurisdiction()' on a null object reference
       at org.onebusaway.android.report.ui.Open311ProblemFragment.callServiceDescription(Open311ProblemFragment.java:369)
       at org.onebusaway.android.report.ui.Open311ProblemFragment.onViewCreated(Open311ProblemFragment.java:216)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1086)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1234)
       at android.support.v4.app.FragmentManagerImpl.dispatchActivityCreated(FragmentManager.java:2046)
       at android.support.v4.app.FragmentController.dispatchActivityCreated(FragmentController.java:174)
       at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:597)
       at org.onebusaway.android.report.ui.InfrastructureIssueActivity.onStart(InfrastructureIssueActivity.java:282)
       at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1237)
       at android.app.Activity.performStart(Activity.java:6288)
       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2397)
       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2494) 
       at android.app.ActivityThread.access$900(ActivityThread.java:157) 
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1356) 
       at android.os.Handler.dispatchMessage(Handler.java:102) 
       at android.os.Looper.loop(Looper.java:148) 
       at android.app.ActivityThread.main(ActivityThread.java:5525) 
       at java.lang.reflect.Method.invoke(Native Method
 Steps to reproduce: I think the steps were the following: Tap &quot;Send Feedback&quot; Tap on &quot;Stop Problem Report&quot; Scroll map to PSTA stop and tap on stop Switch to &quot;PSTA - Arrival info/schedule&quot; category Put app in the background and browse other apps Return to OBA Expected behavior: Not crash Observed behavior: Crash with above stack trace. Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: This is the last screen I saw before putting app in the background - I hadn't selected any category yet:
	</description>
			<title>NPE - Invoke virtual method 'java.lang.String edu.usf.cutr.open311client.Open311.getJurisdiction()'</title>
		</Manager>
		<Manager Number="214">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #542</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/542</url>
			<description>
		Summary: Apparently GooglePlayServicesUtil.isGooglePlayServicesAvailable() is deprecated, and we should be using GoogleApiAvailability.isGooglePlayServicesAvailable() instead: https://developers.google.com/android/reference/com/google/android/gms/common/GoogleApiAvailability.html#public-methods See also http://stackoverflow.com/questions/31016722/googleplayservicesutil-vs-googleapiavailability.
	</description>
			<title>Change from GooglePlayServicesUtil.isGooglePlayServicesAvailable() to GoogleApiAvailability</title>
		</Manager>
		<Manager Number="215">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #544</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/544</url>
			<description>
		Summary: Currently, if a user taps on an arrival time at a particular stop, the stop and vehicle icons both appear in TripDetailsListFragment and the stop is focused as the top visible record in the list - this is the desired behavior: Prior to #463, we weren't showing the bus stop icon in TripDetailsListFragment if the user tapped on the vehicle marker popup balloon to enter TripDetailsListFragment. In that case, the vehicle icon would take focus and appear as the first visible row in TripDetailsListFragment: This is the desired behavior in terms of focusing on the vehicle as the first record, but the stop icon for the user's currently focused stop on the map was absent. #463 fixes this to include the stop icon as well as the vehicle icon - however, a side effect of this is that if the stop icon is included, we always focus on the stop icon, and not the vehicle icon. This isn't a problem with #463, but just an unintended consequence of the current code that sets the top visible list item, which always defaults to focusing on the stop if it's included. IMO the behavior should be that if the user tapped on the vehicle marker popup balloon, we should focus on that vehicle as the first record (i.e., the same behavior prior to #463). A fix for this is to allow the calling Activity to specify via Intent parameters whether the stop or vehicle should have focus as the first record. If coming from ArrivalsListFragment and the user tapped on an arrival time, then use the Intent to set focus to the stop n TripDetailsListFragment. If coming from the VehicleOverlay when a user tapped on the vehicle marker popup, then use the Intent to set focus to the vehicle in TripDetailsListFragment. Steps to reproduce: Show a route Tap on a vehicle marker Tap on the vehicle marker balloon popup Expected behavior: The vehicle icon should be the record at the top of the visible portion of the list: Observed behavior: The stop icon is the record at the top of the visible portion of the list: Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>Tapping on vehicle marker popup should focus on vehicle icon in TripDetailsListFragment</title>
		</Manager>
		<Manager Number="216">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #549</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/549</url>
			<description>
		Summary: If you do menu &quot;Send feedback-&gt;Send App Feedback&quot;, and email gets sent to android-app@onebusaway.org,which includes various troubleshooting info: We should add region name to this info - previously this wasn't needed because we were sending this to the regional contact email address, so the set region is implied. Now, however, with the email coming straight to android-app@onebusaway.org, we don't know this. We should also add whether the region is automatically selected or not.
	</description>
			<title>Add region name and auto region select to feedback email body</title>
		</Manager>
		<Manager Number="217">
			<labels>
				<label>accessibility</label>
				<label>bug</label>
			</labels>
			<bugID>Issue #550</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/550</url>
			<description>
		Summary: When increasing the Android system font size to &quot;Very large&quot; or more, the text for the starred stops view is clipped. Steps to reproduce: Go to Android system menu Go to &quot;General-&gt;Accessibility&quot; Go to &quot;Vision&quot; Set the &quot;Font size&quot; to &quot;Very large&quot; or bigger Open the &quot;Starred stops&quot; screen Expected behavior: Show starred stops names that are readable Observed behavior: The majority of the stop name is clipped so it is unreadable. Device and Android version: Reported by a user with a Samsung Galaxy S6 w/ Android 6.0.1, and I repro'd it on an LG G4 w/ Android 6.0. Screenshots:
	</description>
			<title>Starred stops text is clipped with &quot;Very large&quot; system font setting</title>
		</Manager>
		<Manager Number="218">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #554</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/554</url>
			<description>
		Summary: Some users have questioned why certain permissions are needed, especially the way that Google categorizes them (for example, &quot;Storage/Photos&quot; shows up for access to SD card to write/read database backups). For example, from a Google Play review: Unnecessary permissions I can understand location but there is no reason for anything other then that. Last update required that so I uninstalled. There is a good explanation here by Paul of why the permissions are needed. For now while we are still doing install-time permissions, we should translate that into a Markdown page in the repo that we can point curious users to. Converting to the new runtime permissions model for Android 6.0 (#330) should help explain these in-app via dialogs presented to the user when a certain permission is needed at runtime.
	</description>
			<title>Add permissions explanation in Markdown file</title>
		</Manager>
		<Manager Number="219">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #555</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/555</url>
			<description>
		Summary: iOS is requiring web servers to use secure connections over HTTPS starting Jan 1, 2017. HTTP is no longer an option. For more details see: https://groups.google.com/forum/#!topic/onebusaway-developers/cMMOzLDdQDk This means that all URLs in the Regions API will change to be HTTPS instead of HTTPS - see OneBusAway/onebusaway-multiregion-support#14 for details. We need to add unit tests to make sure that HTTPS URLs don't break anything in OBA Android
	</description>
			<title>Add tests for HTTPS URLs</title>
		</Manager>
		<Manager Number="220">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #561</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/561</url>
			<description>
		Summary: Trip headsigns are treated inconsistently in term of case within the app. For example, in the below screenshot, in the sliding panel header the headsign is shown as &quot;UTC&quot;, but in the arrivals list below it's shown as &quot;Utc&quot;. There is a history of data issues in OBA, including ALL CAPS HEADSIGNS IN PUGET SOUND which is why title casing is currently applied. Similar issue in OBA iOS - OneBusAway/onebusaway-iphone#635. Solution proposed there and in in Google Group discussion at https://groups.google.com/forum/#!topic/onebusaway-developers/ji4tXePwB10 is to only apply title case if all headsign characters are uppercase. Ideally the transit agencies just fix their data, so we don't have to do this kind of post-processing (also discussed in above Google Group post). Steps to reproduce: Look at arrivals at the above stop in San Diego, or Tampa stop 6497. Expected behavior: Be consistent with case in headsigns, and all headsigns should be title case, but with acronyms like &quot;UTC&quot; remaining upper case. Observed behavior: Trip headsigns have different case. Device and Android version: N/A Screenshots: See above
	</description>
			<title>Some headsigns have inconsistent upper/lower case</title>
		</Manager>
		<Manager Number="221">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #563</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/563</url>
			<description>
		Summary: I was searching for a route (&quot;link&quot; in Puget Sound region), and when I tapped on the search result and selected &quot;Show on map&quot; the app crashed and I got this stack trace: E/AndroidRuntime: FATAL EXCEPTION: main
       Process: com.joulespersecond.seattlebusbot, PID: 16284
       java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.os.Bundle.getString(java.lang.String)' on a null object reference
           at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2434)
           at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2494)
           at android.app.ActivityThread.access$900(ActivityThread.java:157)
           at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1356)
           at android.os.Handler.dispatchMessage(Handler.java:102)
           at android.os.Looper.loop(Looper.java:148)
           at android.app.ActivityThread.main(ActivityThread.java:5525)
           at java.lang.reflect.Method.invoke(Native Method)
           at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
           at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
        Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String android.os.Bundle.getString(java.lang.String)' on a null object reference
           at org.onebusaway.android.map.RouteMapController.onViewStateRestored(RouteMapController.java:224)
           at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onViewStateRestored(BaseMapFragment.java:327)
           at android.support.v4.app.Fragment.restoreViewState(Fragment.java:469)
           at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1094)
           at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
           at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
           at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
           at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)
           at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:601)
           at org.onebusaway.android.ui.HomeActivity.onStart(HomeActivity.java:332)
           at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1237)
           at android.app.Activity.performStart(Activity.java:6288)
           at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2397)
           at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2494) 
           at android.app.ActivityThread.access$900(ActivityThread.java:157) 
           at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1356) 
           at android.os.Handler.dispatchMessage(Handler.java:102) 
           at android.os.Looper.loop(Looper.java:148) 
           at android.app.ActivityThread.main(ActivityThread.java:5525) 
           at java.lang.reflect.Method.invoke(Native Method) 
           at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730) 
           at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620) 
 I believe this is an unintended side effect of https://github.com/OneBusAway/onebusaway-android/pull/543/files, which restores the zoom level and map location on orientation changes for route mode. Steps to reproduce: Search for route number Tap on route search result Select &quot;Show on map&quot; Expected behavior: Show the route on the map Observed behavior: App crashed. Device and Android version: LG G4 w/ Android 6.0
	</description>
			<title>NPE when showing route search results on map</title>
		</Manager>
		<Manager Number="222">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #565</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/565</url>
			<description>
		Summary: From Android Developer console - stack trace: android.view.WindowManager$BadTokenException: Unable to add window -- token android.os.BinderProxy@b1d71da is not valid; is your activity running?
    at android.view.ViewRootImpl.setView(ViewRootImpl.java:571)
    at android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:310)
    at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:85)
    at android.app.Dialog.show(Dialog.java:319)
    at org.onebusaway.android.util.ShowcaseViewUtils.showOptOutDialog(ShowcaseViewUtils.java:318)
    at org.onebusaway.android.ui.HomeActivity$3.onDismiss(HomeActivity.java:688)
    at android.app.Dialog$ListenersHandler.handleMessage(Dialog.java:1323)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5422)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 User message: back button from started widget Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Nexus 5X (bullhead) Manufacturer Google Android version Android 6.0 RAM (MB) 2048 Screen size 1080 × 1920 Screen density (dpi) 420 OpenGL ES version 3.1 Native platform armeabi-v7a CPU make Qualcomm CPU model MSM8992
	</description>
			<title>BadTokenException - Unable to add window - when leaving tutorial opt out</title>
		</Manager>
		<Manager Number="223">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #568</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/568</url>
			<description>
		Summary: We should change the scheduled/real-time text colors for Style B cards to match the rest of OBA. The current colors are a hold-over from the original York design. We use gray to indicate schedule arrivals in the classic Style A OBA arrival cards, and vehicle markers on the map: In the Style B cards, we are showing schedule times in black and real-time arrival info in gray: We should change the schedule times to the gray we use elsewhere in the app, and the real-time arrival times to either black or colored to match the status labels.
	</description>
			<title>Change color of schedule/real-time arrival times in Style B cards</title>
		</Manager>
		<Manager Number="224">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #570</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/570</url>
			<description>
		Summary: From Android Developer Console for v2.0.13: java.lang.IllegalStateException: Fragment BaseMapFragment{221a95f8} not attached to Activity
    at android.support.v4.app.Fragment.getResources(Fragment.java:639)
    at android.support.v4.app.Fragment.getString(Fragment.java:661)
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onRegionTaskFinished(BaseMapFragment.java:499)
    at org.onebusaway.android.region.ObaRegionsTask$2.run(ObaRegionsTask.java:266)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:5951)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Manufacturer Samsung 
Android version Android 4.2 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 2.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model APQ8064
	</description>
			<title>IllegalStateException: Fragment BaseMapFragment not attached to Activity</title>
		</Manager>
		<Manager Number="225">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #571</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/571</url>
			<description>
		Summary: From Android Developer Console for v2.0.13: java.lang.NullPointerException: Attempt to invoke interface method 'org.onebusaway.android.io.elements.ObaRoute org.onebusaway.android.io.elements.ObaReferences.getRoute(java.lang.String)' on a null object reference
    at org.onebusaway.android.ui.ArrivalsListFragment$1.onClick(ArrivalsListFragment.java:737)
    at com.android.internal.app.AlertController$AlertParams$3.onItemClick(AlertController.java:1019)
    at android.widget.AdapterView.performItemClick(AdapterView.java:334)
    at android.widget.AbsListView.performItemClick(AbsListView.java:1531)
    at android.widget.AbsListView$PerformClick.run(AbsListView.java:3667)
    at android.widget.AbsListView$3.run(AbsListView.java:5590)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:5951)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
 Looks like this happens when trying to report an arrival time problems after tapping on an arrival time. Steps to reproduce: Unknown (involves tapping on arrival time, and then tapping &quot;Report arrival time problem&quot;) Expected behavior: Not crash Observed behavior: Crash Device and Android version: Galaxy S4 (jflterefreshspr)
Manufacturer Samsung 
Android version Android 4.2 
RAM (MB) 2048 
Screen size 1080 × 1920
Screen density (dpi) 480 
OpenGL ES version 2.0 
Native platform armeabi-v7a
CPU make Qualcomm
CPU model APQ8064
	</description>
			<title>NPE tapping on arrival time - ObaReferences.getRoute(java.lang.String)</title>
		</Manager>
		<Manager Number="226">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #572</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/572</url>
			<description>
		Summary: From Android Developer Console for v2.0.13: java.lang.NullPointerException: Attempt to invoke virtual method 'void org.onebusaway.android.ui.ArrivalsListHeader.closeStatusPopups()' on a null object reference
    at org.onebusaway.android.ui.HomeActivity$7.onPanelSlide(HomeActivity.java:1278)
    at com.sothree.slidinguppanel.SlidingUpPanelLayout.dispatchOnPanelSlide(SlidingUpPanelLayout.java:631)
    at com.sothree.slidinguppanel.SlidingUpPanelLayout.onPanelDragged(SlidingUpPanelLayout.java:1154)
    at com.sothree.slidinguppanel.SlidingUpPanelLayout.access$900(SlidingUpPanelLayout.java:29)
    at com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback.onViewPositionChanged(SlidingUpPanelLayout.java:1384)
    at com.sothree.slidinguppanel.ViewDragHelper.continueSettling(ViewDragHelper.java:735)
    at com.sothree.slidinguppanel.SlidingUpPanelLayout.computeScroll(SlidingUpPanelLayout.java:1231)
    at android.view.View.updateDisplayListIfDirty(View.java:16451)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:3905)
    at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:3885)
    at android.view.View.updateDisplayListIfDirty(View.java:16424)
    at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:325)
    at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:331)
    at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:366)
    at android.view.ViewRootImpl.draw(ViewRootImpl.java:3140)
    at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2939)
    at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2522)
    at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1437)
    at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:7403)
    at android.view.Choreographer$CallbackRecord.run(Choreographer.java:920)
    at android.view.Choreographer.doCallbacks(Choreographer.java:695)
    at android.view.Choreographer.doFrame(Choreographer.java:631)
    at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:906)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:158)
    at android.app.ActivityThread.main(ActivityThread.java:7224)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 User message: had it open for a few min then stop working Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Galaxy S7 (heroqltevzw)
Manufacturer Samsung 
Android version Android 6.0 
RAM (MB) 4096 
Screen size 1440 × 2560 
Screen density (dpi) 640 
OpenGL ES version 3.1 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8996
	</description>
			<title>NPE - invoke virtual method 'void org.onebusaway.android.ui.ArrivalsListHeader.closeStatusPopups()'</title>
		</Manager>
		<Manager Number="227">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #573</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/573</url>
			<description>
		Summary: From Android Developer Console for v2.0.13: java.lang.NullPointerException: Attempt to invoke virtual method 'org.onebusaway.android.io.elements.ObaTripSchedule$StopTime[] org.onebusaway.android.io.elements.ObaTripSchedule.getStopTimes()' on a null object reference
    at org.onebusaway.android.ui.TripDetailsListFragment$3.onItemClick(TripDetailsListFragment.java:394)
    at android.widget.AdapterView.performItemClick(AdapterView.java:345)
    at android.widget.AbsListView.performItemClick(AbsListView.java:1547)
    at android.widget.AbsListView$PerformClick.run(AbsListView.java:3821)
    at android.widget.AbsListView$3.run(AbsListView.java:5841)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:158)
    at android.app.ActivityThread.main(ActivityThread.java:7224)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 User message: App stopped while viewing progress of bus Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Galaxy S5 (klteMetroPCS)
Manufacturer Samsung 
Android version Android 4.4 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974
	</description>
			<title>NPE tapping on trip details list item</title>
		</Manager>
		<Manager Number="228">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #574</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/574</url>
			<description>
		Summary: From Google Play Developer Console for v2.0.14: java.lang.RuntimeException: Unable to pause activity {com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'double android.location.Location.getLatitude()' on a null object reference
    at android.app.ActivityThread.performPauseActivity(ActivityThread.java:4429)
    at android.app.ActivityThread.performPauseActivity(ActivityThread.java:4388)
    at android.app.ActivityThread.handlePauseActivity(ActivityThread.java:4363)
    at android.app.ActivityThread.access$1200(ActivityThread.java:210)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1722)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:6938)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1404)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1199)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'double android.location.Location.getLatitude()' on a null object reference
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onPause(BaseMapFragment.java:283)
    at android.support.v4.app.Fragment.performPause(Fragment.java:2123)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1118)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1248)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1230)
    at android.support.v4.app.FragmentManagerImpl.dispatchPause(FragmentManager.java:2056)
    at android.support.v4.app.FragmentController.dispatchPause(FragmentController.java:198)
    at android.support.v4.app.FragmentActivity.onPause(FragmentActivity.java:401)
    at org.onebusaway.android.ui.HomeActivity.onPause(HomeActivity.java:338)
    at android.app.Activity.performPause(Activity.java:6731)
    at android.app.Instrumentation.callActivityOnPause(Instrumentation.java:1338)
    at android.app.ActivityThread.performPauseActivity(ActivityThread.java:4415)
    ... 11 more
 We should do a null check on the map center location before saving it. Steps to reproduce: Unknown Expected behavior: Not crash. Observed behavior: Crash. Device and Android version: Galaxy S6, Galaxy Grand Prime, Galaxy S5 (all Android 5.1)
	</description>
			<title>NPE in BaseMapFragment getting map center location in onPause()</title>
		</Manager>
		<Manager Number="229">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #578</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/578</url>
			<description>
		Summary: When loading stops and routes on very slow data connections (or data connections that are otherwise problematic), it seems like the app isn't doing anything. Steps to reproduce: First, be on a very slow (3G) data connection. Seems to also occur on 4G connections that appear to have good signal quality (see screenshot below), but for some reason data connection is hung (maybe switching between 3G/4G?). For loading stops: Open map view to area with stops For loading routes: While viewing upcoming buses for a stop, tap on an arrival row Select &quot;view route on map&quot; Tap white X icon to close route view Expected behavior: Load stops on map, or at least give indication that something is loading Load route, or at least give indication that something is loading Allow user to tap on X to close route view. Observed behavior: No stops load, or at least take a very long time to load without any visual indication that something is happening Rout doesn't load, or at least take a very long time to load without any visual indication that something is happening Tapping on X doesn't do anything - it highlights, but doesn't close route view. Here's what the screen looks like when route loading is taking a long time, and tapping on X doesn't do anything: Device and Android version: I repro'd stops issue on stock LG G4 w/ Android 6.0, with little to no 4G signal, and switching to 3G signal. Routes issue and closing view X reported by user with Model: HTCD100LVW, OS Version: 5.1 / 22 Screenshots: See above
	</description>
			<title>No indication that map is loading stops/routes on slow data connections</title>
		</Manager>
		<Manager Number="230">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #579</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/579</url>
			<description>
		Summary: When I select the nearby view I expect it to show stops near my current location but instead it just shows the last location I viewed Steps to reproduce: Open app Select nearby Pan to random location Close app by removing from recent apps view Open app Expected behavior: When nearby view is opened, show nearby stops to current user location Observed behavior: Observe map in random location when nearby view opened Device and Android version: Nexus 5X, OBA 2.0.14 (64) Screenshots: N/A
	</description>
			<title>Nearby view does not auto center on location</title>
		</Manager>
		<Manager Number="231">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #580</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/580</url>
			<description>
		Summary: From Android Developer Console for v2.0.14: java.lang.NullPointerException
    at com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState.writeToParcel(SlidingUpPanelLayout.java:1491)
    at android.os.Parcel.writeParcelable(Parcel.java:1254)
    at android.os.Parcel.writeValue(Parcel.java:1173)
    at android.os.Parcel.writeSparseArray(Parcel.java:662)
    at android.os.Parcel.writeValue(Parcel.java:1198)
    at android.os.Parcel.writeMapInternal(Parcel.java:591)
    at android.os.Bundle.writeToParcel(Bundle.java:1619)
    at android.os.Parcel.writeBundle(Parcel.java:605)
    at android.os.Parcel.writeValue(Parcel.java:1170)
    at android.os.Parcel.writeMapInternal(Parcel.java:591)
    at android.os.Bundle.writeToParcel(Bundle.java:1619)
    at android.os.Parcel.writeBundle(Parcel.java:605)
    at android.app.ActivityManagerProxy.activityStopped(ActivityManagerNative.java:2213)
    at android.app.ActivityThread$StopInfo.run(ActivityThread.java:2877)
    at android.os.Handler.handleCallback(Handler.java:615)
    at android.os.Handler.dispatchMessage(Handler.java:92)
    at android.os.Looper.loop(Looper.java:137)
    at android.app.ActivityThread.main(ActivityThread.java:4777)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:511)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:998)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:765)
    at dalvik.system.NativeStart.main(Native Method)
 Looks like this is an issue in the SlidingUpPanel library. Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Device
Galaxy Prevail2 (raybst)
Manufacturer Samsung 
Android version Android 4.1 
RAM (MB) 1024 
Screen size 480 × 800 
Screen density (dpi) 240 
OpenGL ES version 2.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8655
	</description>
			<title>NPE in SlidingUpPanelLayout$SavedState.writeToParcel()</title>
		</Manager>
		<Manager Number="232">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #583</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/583</url>
			<description>
		Summary: We're using Google Play Services for maps, location and analytics (when available). When users report problems that could be caused by Google Play Services (e.g., #440, #582), a follow up question we always ask is the version number for Google Play Services app on their device. If it's possible to add the Google Play Services version to the app feedback email without requiring another permission, we should do this. We should also make sure this doesn't crash on devices without Google Play Services such as the Amazon Fire Phone. According to this StackOverflow post, you can check version with: int v = getPackageManager().getPackageInfo(&quot;com.google.android.gms&quot;, 0 ).versionCode; Instead of the above string, we can use the constant GoogleApiAvailability.GOOGLE_PLAY_SERVICES_PACKAGE. It looks like we can also add the version number of the Google Play servers library version (i.e., what version was used to compile OBA) using GoogleApiAvailability.GOOGLE_PLAY_SERVICES_VERSION_CODE.
	</description>
			<title>Add Google Play Services app and library version to app feedback email</title>
		</Manager>
		<Manager Number="233">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #585</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/585</url>
			<description>
		Summary: When viewing recent stops/routes screen, on the first visit it defaults to stops. After that, it always defaults to routes, even if &quot;Stops&quot; was the previously selected tab. Steps to reproduce: Tap on overflow menu in action bar and select &quot;Recent stops/routes&quot; Select &quot;Stops&quot; Hit back button Re-open &quot;Recent stops/routes&quot; Expected behavior: Default to the previously selected view/tab - in this case, &quot;Stops&quot; Observed behavior: It always defaults to &quot;Routes&quot; Device and Android version: I repro'd on stock LG G4 w/ Android 6.0.
	</description>
			<title>Recent stops/routes activity always defaults to routes tab</title>
		</Manager>
		<Manager Number="234">
			<labels>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #586</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/586</url>
			<description>
		Summary: Reported by user: The app says that I am not connected to a network when the phone shows good service signal. I reset the app and the phone but still unable to use it. Steps to reproduce: Unknown Expected behavior: Allow use of the app when there is an active data connection Observed behavior: OBA gives the &quot;no network&quot; message Device and Android version: App Version: 2.0.14 Model: ONE A2005 OS Version: 6.0.1 / 23 Region/API: Puget Sound (selected automatically) Loc: gps y, x, z 1 second(s) ago
	</description>
			<title>Erroneous &quot;no network&quot; message</title>
		</Manager>
		<Manager Number="235">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #588</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/588</url>
			<description>
		Summary: From Android Developer Console for v2.0.14: java.lang.NullPointerException: Attempt to invoke virtual method 'int org.onebusaway.android.io.request.ObaStopsForRouteResponse.getCode()' on a null object reference
    at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadFinished(RouteMapController.java:397)
    at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadComplete(RouteMapController.java:435)
    at org.onebusaway.android.map.RouteMapController$RouteLoaderListener.onLoadComplete(RouteMapController.java:382)
    at android.support.v4.content.Loader.deliverResult(Loader.java:126)
    at org.onebusaway.android.map.RouteMapController$RoutesLoader.deliverResult(RouteMapController.java:373)
    at org.onebusaway.android.map.RouteMapController$RoutesLoader.deliverResult(RouteMapController.java:345)
    at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:249)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:77)
    at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:466)
    at android.support.v4.content.ModernAsyncTask.access$400(ModernAsyncTask.java:48)
    at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:483)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:168)
    at android.app.ActivityThread.main(ActivityThread.java:5885)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:819)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:709)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: HTC 10 (htc_pmewl) Manufacturer HTC Android version Android 6.0 RAM (MB) 4096 Screen size 1440 × 2560 Screen density (dpi) 640 OpenGL ES version 3.1 Native platform armeabi-v7a CPU make Qualcomm CPU model MSM8996
	</description>
			<title>NPE when loading routes</title>
		</Manager>
		<Manager Number="236">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #590</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/590</url>
			<description>
		Summary: Auto select region preference should always be set to true by default. In UIUtils.sendEmail(), the default value provided is Boolean.FALSE, which, if accessed before any other calls to get this preference, could set the auto select region to false.
	</description>
			<title>Auto select region preference can be mistakenly set to false</title>
		</Manager>
		<Manager Number="237">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #591</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/591</url>
			<description>
		Summary: The region auto-select setting in feedback email can be wrong. Could be related to #590. Steps to reproduce: Do fresh install from master branch Tap on menu, then &quot;Send feedback -&gt; Send App Feedback&quot; Expected behavior: The email body should always mirror the actual setting. For example, if it's automatic, it should say: Region/API: Tampa Bay (selected automatically) Observed behavior: Upon initial installation it says: Region/API: Tampa Bay (selected manually) Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>Region auto-select setting in feedback email can be wrong</title>
		</Manager>
		<Manager Number="238">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #593</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/593</url>
			<description>
		@themonki Would you be able to do a quick translation update? Shouldn't be many changes this time. For strings.xml, updated:     </description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="239">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #594</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/594</url>
			<description>
		Summary: On newer versions of Android, users can choose to disable certain permissions via the system settings. Because we're still using install-time permissions, this results in a crash, like: java.lang.SecurityException: Client must have ACCESS_FINE_LOCATION permission to request PRIORITY_HIGH_ACCURACY locations.
    at android.os.Parcel.readException(Parcel.java:1620)
    at android.os.Parcel.readException(Parcel.java:1573)
    at com.google.android.gms.location.internal.zzi$zza$zza.zza(Unknown Source)
    at com.google.android.gms.location.internal.zzk.zza(Unknown Source)
    at com.google.android.gms.location.internal.zzl.zza(Unknown Source)
    at com.google.android.gms.location.internal.zzd$1.zza(Unknown Source)
    at com.google.android.gms.location.internal.zzd$1.zza(Unknown Source)
    at com.google.android.gms.internal.zzlx$zza.zzb(Unknown Source)
    at com.google.android.gms.internal.zzmd.zza(Unknown Source)
    at com.google.android.gms.internal.zzmd.zzb(Unknown Source)
    at com.google.android.gms.internal.zzmi.zzb(Unknown Source)
    at com.google.android.gms.internal.zzmg.zzb(Unknown Source)
    at com.google.android.gms.location.internal.zzd.requestLocationUpdates(Unknown Source)
    at org.onebusaway.android.util.LocationHelper.onConnected(LocationHelper.java:204)
    at com.google.android.gms.common.internal.zzk.zzk(Unknown Source)
    at com.google.android.gms.internal.zzmg.zzi(Unknown Source)
    at com.google.android.gms.internal.zzme.zzpi(Unknown Source)
    at com.google.android.gms.internal.zzme.onConnected(Unknown Source)
    at com.google.android.gms.internal.zzmi.onConnected(Unknown Source)
    at com.google.android.gms.internal.zzlz.onConnected(Unknown Source)
    at com.google.android.gms.common.internal.zzj$zzg.zzqv(Unknown Source)
    at com.google.android.gms.common.internal.zzj$zza.zzc(Unknown Source)
    at com.google.android.gms.common.internal.zzj$zza.zzv(Unknown Source)
    at com.google.android.gms.common.internal.zzj$zzc.zzqx(Unknown Source)
    at com.google.android.gms.common.internal.zzj$zzb.handleMessage(Unknown Source)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 and: java.lang.SecurityException: Client must have ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION permission to perform any location operations.
    at android.os.Parcel.readException(Parcel.java:1620)
    at android.os.Parcel.readException(Parcel.java:1573)
    at com.google.android.gms.internal.lx$a$a.bW(Unknown Source)
    at com.google.android.gms.internal.ly.getLastLocation(Unknown Source)
    at com.google.android.gms.internal.lz.getLastLocation(Unknown Source)
    at com.google.android.gms.location.LocationClient.getLastLocation(Unknown Source)
    at com.joulespersecond.seattlebusbot.util.LocationHelp.getLocation2(LocationHelp.java:103)
    at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadFinished(StopMapController.java:274)
    at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadComplete(StopMapController.java:309)
    at com.joulespersecond.seattlebusbot.map.StopMapController.onLoadComplete(StopMapController.java:135)
    at android.support.v4.content.Loader.deliverResult(Loader.java:104)
    at com.joulespersecond.seattlebusbot.map.StopMapController$StopsLoader.deliverResult(StopMapController.java:378)
    at com.joulespersecond.seattlebusbot.map.StopMapController$StopsLoader.deliverResult(StopMapController.java:340)
    at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:223)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:61)
    at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:461)
    at android.support.v4.content.ModernAsyncTask.access$500(ModernAsyncTask.java:47)
    at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:474)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:158)
    at android.app.ActivityThread.main(ActivityThread.java:7224)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 The permanent fix is to move to the Android 6.0 runtime permissions, which is ticketed in #330. In the mean time, though, we can try to just catch and ignore these security exception. Steps to reproduce: Install the app, and then revoke the location permissions via system settings. Expected behavior: Not crash Observed behavior: Crash. Device and Android version: Any Android device 6.0 and higher
	</description>
			<title>SecurityException when trying to access location when user has denied permission</title>
		</Manager>
		<Manager Number="240">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #599</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/599</url>
			<description>
		Summary: From Android Developer console for v2.0.15: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2073)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2098)
    at android.app.ActivityThread.access$600(ActivityThread.java:138)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1204)
    at android.os.Handler.dispatchMessage(Handler.java:99)
    at android.os.Looper.loop(Looper.java:137)
    at android.app.ActivityThread.main(ActivityThread.java:4945)
    at java.lang.reflect.Method.invokeNative(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:511)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:794)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:561)
    at dalvik.system.NativeStart.main(Native Method)
Caused by: java.lang.NullPointerException
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onViewStateRestored(BaseMapFragment.java:345)
    at android.support.v4.app.Fragment.restoreViewState(Fragment.java:469)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1094)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
    at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)
    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:601)
    at org.onebusaway.android.ui.HomeActivity.onStart(HomeActivity.java:330)
    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1166)
    at android.app.Activity.performStart(Activity.java:5212)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2046)
    ... 11 more
 and: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: java.lang.NullPointerException: Attempt to invoke interface method 'void org.onebusaway.android.map.MapModeController.onViewStateRestored(android.os.Bundle)' on a null object reference
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2661)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)
    at android.app.ActivityThread.access$900(ActivityThread.java:172)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1421)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:5835)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'void org.onebusaway.android.map.MapModeController.onViewStateRestored(android.os.Bundle)' on a null object reference
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onViewStateRestored(BaseMapFragment.java:345)
    at android.support.v4.app.Fragment.restoreViewState(Fragment.java:469)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1094)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
    at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)
    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:601)
    at org.onebusaway.android.ui.HomeActivity.onStart(HomeActivity.java:330)
    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1234)
    at android.app.Activity.performStart(Activity.java:6258)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2624)
    ... 10 more
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: For first stacktrace: Optimus F3 (fx3)
Manufacturer LGE 
Android version Android 4.1 
RAM (MB) 1000 
Screen size 480 × 800 
Screen density (dpi) 240
OpenGL ES version 2.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8930
 2nd stacktrace: Galaxy S5 (kltevzw)
Manufacturer Samsung 
Android version Android 4.4 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974
	</description>
			<title>NPE in BaseMapFragment.onViewStateRestored()</title>
		</Manager>
		<Manager Number="241">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #600</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/600</url>
			<description>
		Summary: Google must have added a lot of text to the mandatory license display information, as now when we start up the AboutActivity it freezes for a few seconds while this text is loaded into the TextView. For a workaround we can show a progress dialog while the text is being loaded. Steps to reproduce: Tap main navigation menu Tap Settings Tap About (near bottom) Expected behavior: Load the About text, and either be immediately scrollable or show me a progress indicator that something is being loaded Observed behavior: UI freezes for a few seconds while the Google OSS license information is loaded Device and Android version: I repro'd on stock LG G4 w/ Android 6.0, but this likely happens on any device with Google Play Services installed.
	</description>
			<title>UI freezes for a few seconds when loading About screen</title>
		</Manager>
		<Manager Number="242">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #604</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/604</url>
			<description>
		Summary: Right now, both normal Android and OTP feedback have the same subject line. To make it easier to differentiate the type of feedback, we should change the subject line. Steps to reproduce: Plan a trip that fails, and choose &quot;Report&quot; Expected behavior: Subject line should be something like &quot;OneBusAway Android: Trip Planning Feedback&quot; Observed behavior: Subject line is &quot;OneBusAway Android: Feedback&quot;. Device and Android version: N/A
	</description>
			<title>Improve trip planning feedback emails</title>
		</Manager>
		<Manager Number="243">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #608</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/608</url>
			<description>
		Summary: The preference under &quot;Notifications&quot; related to trip planning is visible for all regions. It should be hidden and shown based on the presence of a regional OTP base URL, just like the main &quot;Plan a trip&quot; option in the navigation drawer. There is already some code in PreferencesActivity.onCreate() (~line 124) for hiding preferences, although these changes aren't driven by region changes (they are based on build variants). This visibility change would be based on region changes, so we'd likely need to implement in onResume(). Steps to reproduce: Set the region to one without an OTP server (e.g., Puget Sound) Open the navigation drawer and tap on Settings Expected behavior: Notifications setting entry &quot;Trip plan notifications&quot; should be hidden. If &quot;Trip plan notifications&quot; is the only preference under the &quot;Notifications&quot; category, then the &quot;Notifications&quot; category should be hidden as well. Observed behavior: Notifications setting entry &quot;Trip plan notifications&quot; is visible. Device and Android version: Reprod on stock LG G4 w/ Android 6.0 Screenshots: @sdjacobs Could you please take a shot at this?
	</description>
			<title>Trip planning notification preference is visible in regions without OTP URL</title>
		</Manager>
		<Manager Number="244">
			<labels>
				<label>enhancement</label>
				<label>your first PR</label>
			</labels>
			<bugID>Issue #609</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/609</url>
			<description>
		Summary: Feedback from a user: Ideally, I would like to set a custom alert sound and volume. I would expect these options to be either in Settings (best) or at top right menu on set notification page. I believe we currently just use the default system setting for generic notifications. We should also allow activation/disabling of vibration - IIRC we have a permission for vibration in the manifest, but the code is currently commented out (not sure why?). Steps to reproduce: Tap on &quot;My reminders&quot; option in navigation panel Tap on a reminder Expected behavior: Allow me to change the reminder notification settings Observed behavior: You can't change the reminder notification settings Device and Android version: N/A
	</description>
			<title>Allow changes to &quot;My reminders&quot; notification sound, volume, and vibration</title>
		</Manager>
		<Manager Number="245">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #611</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/611</url>
			<description>
		Summary: On the trip planning screen, the formatting and text size of the &quot;Leaving&quot; view (which is a Spinner) is different from the date and times, which are EditTexts. For example, the text size of &quot;Leaving&quot; appears to be a bit bigger, and the triangle next to the text is a different size and color and has larger spacing. We should make all 3 views look the same. Steps to reproduce: Tap on navigation drawer and select &quot;Plan a trip&quot; Expected behavior: Have consistent formatting between &quot;Leaving&quot;, date and time text/views. Observed behavior: &quot;Leaving&quot; view text is slightly larger, and has different color/shape triangle next to it, with a larger margin between the text and triangle. Device and Android version: Stock LG G4 w/ Android 6.0. Screenshots: See above
	</description>
			<title>Trip planning - formatting of &quot;Leaving&quot; text is different</title>
		</Manager>
		<Manager Number="246">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #612</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/612</url>
			<description>
		Summary: From Android Developer Console for v2.0.16: java.lang.NullPointerException: Attempt to invoke virtual method 'double android.location.Location.getLatitude()' on a null object reference
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onRegionTaskFinished(BaseMapFragment.java:527)
    at org.onebusaway.android.region.ObaRegionsTask$2.run(ObaRegionsTask.java:267)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5422)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 Steps to reproduce: Unknown Expected behavior: No crash Observed behavior: Crash Device and Android version: Nexus 6P (angler)
Manufacturer Google 
Android version Android 6.0 
RAM (MB) 3072 
Screen size 1440 × 2560 
Screen density (dpi) 560 
OpenGL ES version 3.1 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8994
	</description>
			<title>NPE in BaseMapFragment.onRegionTaskFinished() getting map center as location</title>
		</Manager>
		<Manager Number="247">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #613</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/613</url>
			<description>
		Summary: When planning a trip on release builds, I always get the &quot;Planning not possible&quot; dialog, and I see the below output via Logcat: E/TripRequest: Error fetching JSON or XML: com.fasterxml.jackson.databind.JsonMappingException: No suitable constructor found for type [simple type, class org.opentripplanner.api.model.TripPlan]: can not instantiate from JSON object (missing default constructor or creator, or perhaps need to add/enable type information?)
        at [Source: buffer(com.android.okhttp.okio.GzipSource@1f25e5b).inputStream(); line: 1, column: 219] (through reference chain: org.opentripplanner.api.ws.Response[&quot;plan&quot;])
E/TripRequest: Error fetching JSON or XML: com.fasterxml.jackson.databind.JsonMappingException: No suitable constructor found for type [simple type, class org.opentripplanner.api.model.TripPlan]: can not instantiate from JSON object (missing default constructor or creator, or perhaps need to add/enable type information?)
        at [Source: buffer(com.android.okhttp.okio.GzipSource@e7f081c).inputStream(); line: 1, column: 219] (through reference chain: org.opentripplanner.api.ws.Response[&quot;plan&quot;])
 When opening the exact same URL in a browser I get valid trip results. I assume this is related to Proguard stripping out classes needed for trip planning. I'll work on fixing this. Steps to reproduce: Create a release build via gradlew assembleObaGoogleRelease Run app, in navigation drawer tap &quot;Plan a trip&quot; Plan a trip Expected behavior: Show me a trip plan for a valid trip Observed behavior: &quot;Planning not possible&quot; dialog is always shown Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>Trip plans fail on release builds</title>
		</Manager>
		<Manager Number="248">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #614</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/614</url>
			<description>
		Summary: When installing master branch as an update to the old version, the &quot;Plan a trip&quot; functionality doesn't immediately show up in the navigation drawer, and the &quot;What's New&quot; message that is shown is the one without trip planning. This is likely due to the Regions API contents not being immediately refreshed on update, and therefore either memory or the database does not contain the OTP base URL. Workaround - close the app and re-open it, and then trip planning is available, and if you go to &quot;Help=&gt;What's New&quot; you get the trip planning message. Steps to reproduce: Be in Tampa, or fake the location in the emulator Install the v2.0.16 tag - https://github.com/OneBusAway/onebusaway-android/tree/v2.0.16 Checkout master branch, bump versionCode in build.gradle and install Expected behavior: Give me the &quot;What's New&quot; message that contains the message about trip planning, and show the &quot;Plan a trip&quot; option in the navigation drawer. Observed behavior: There is no sign of trip planning - the &quot;What's New&quot; message is the one for regions without OTP base URLs, and &quot;Plan a trip&quot; isn't shown in the navigation drawer. Device and Android version: Stock LG G4 w/ Android 6.0 @sdjacobs I'm going to start working on this, but if you have a chance to look into it I'd welcome another pair of eyes.
	</description>
			<title>Trip planning isn't immediately available after update</title>
		</Manager>
		<Manager Number="249">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #615</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/615</url>
			<description>
		Summary: When installing the app, I see the &quot;Oops something went wrong&quot; Toast flash before the &quot;Found Tampa region&quot; Toast pops up. Seems to be a false positive, as everything seems to work fine. Likely a side-effect of 7ae796d. Steps to reproduce: Install master branch Start the app Expected behavior: If everything goes right, don't show Toast &quot;Oops something went wrong&quot; Observed behavior: Toast message flashes &quot;Oops something went wrong&quot;. Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>&quot;Oops something went wrong&quot; message appears on installation</title>
		</Manager>
		<Manager Number="250">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #617</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/617</url>
			<description>
		Summary: When planning a trip and just letting my phone sit on the trip planning screen, it ended up notifying me continuously that my trip was no longer recommended, even after I tapped on the notification. Steps to reproduce: Using master branch: Plan a trip Leave the screen on and wait until you get a notification that this trip is no longer recommended Tap on the notification Expected behavior: I would expect the trip plans to refresh and give me the newly recommended trip as my highlighted choice in the tabs. Observed behavior: It doesn't seem to do anything, and triggers the the notification again. This results in an infinite loop, as every time I'd tap on the notification it would generate another one. The only way to stop the notification is to swipe it away to ignore. As a user it's not clear to me what exactly is happening when I either tap on the notification or swipe it away. Device and Android version: Stock LG G4 w/ Android 6.0 @sdjacobs Could you please take a look at this?
	</description>
			<title>Trip planner notification loop</title>
		</Manager>
		<Manager Number="251">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #618</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/618</url>
			<description>
		Summary: We should support a mechanism for reporting a trip that succeeds (i.e., an itinerary is shown to the user via list and map), but there is something wrong with the trip. For example, if no transit leg is returned (e.g., if the GTFS expires), or it uses a pedestrian path that doesn't exist. Currently, we only allow reporting for trip plans that fail completely and no itinerary is returned. One possible implementation is to add a &quot;Report trip problem&quot; menu option in the overflow menu, accessible via the 3 dots in the upper-right corner on the Trip Planning view, under the &quot;Reverse&quot; option: Another possible implementation is to add another entry to the general &quot;Send feedback&quot; menu, under &quot;Report App Problem&quot;, labeled something like &quot;Report a trip plan&quot;. I think we should start with the overflow menu implementation, as it's the simplest to capture the most recently planned trip, and avoids cluttering the general &quot;Send feedback&quot; menu. We can tweak this as we get a feeling for how much trip plan feedback we get. Steps to reproduce: Plan a trip Expected behavior: Provide a way to send feedback about a planned trip, including the request URL that generated the trip Observed behavior: There is no way to report a problem with a successfully planned trip Device and Android version: N/A Screenshot: See above
	</description>
			<title>Allow reporting of a trip plan that succeeds, but has problems</title>
		</Manager>
		<Manager Number="252">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #623</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/623</url>
			<description>
		Summary: When open trip planning and try to &quot;Invert&quot; say null pointer object, I think because I don't chosen a destination. 07-21 08:52:04.895 20894-20894/org.agencyy.android D/HomeActivity: onOptionsItemSelected
07-21 08:52:05.741 20894-20894/org.agencyy.android I/Timeline: Timeline: Activity_launch_request id:org.agencyy.android time:7858806
07-21 08:52:05.761 20894-20943/org.agencyy.android I/GAv4: Dry run enabled. Would have sent hit: ht=1469109125759, _v=ma9.0.80, a=1185166847, aid=org.agencyy.android, an=Agency Y, av=2.1.0, cd=HomeActivity, cd1=MIO (CALI-CO), cid=2d256152-1bef-4517-b749-56dffb40d456, ea=button_press, ec=ui_action, el=Clicked Trip Plan Link, sr=720x1184, t=event, tid=UA-XXXXXXX-XX, ul=es-co, v=1
07-21 08:52:05.761 20894-20943/org.agencyy.android I/GAv4: Dry run enabled. Would have sent hit: ht=1469109125759, _v=ma9.0.80, a=1547401621, aid=org.agencyy.android, an=Agency Y, av=2.1.0, cd=HomeActivity, cd1=MIO (CALI-CO), cid=2d256152-1bef-4517-b749-56dffb40d456, ea=button_press, ec=ui_action, el=Clicked Trip Plan Link, sr=720x1184, t=event, tid=UA-YYYYYYY-YY, ul=es-co, v=1
07-21 08:52:06.082 20894-20894/org.agencyy.android D/LocationServicesCallbck: GoogleApiClient.onConnected
07-21 08:52:06.164 20894-20894/org.agencyy.android I/Timeline: Timeline: Activity_idle id: android.os.BinderProxy@71eb450 time:7859229
07-21 08:52:06.266 20894-20894/org.agencyy.android D/NavDrawerFragment: Saving position = 0
07-21 08:52:12.892 20894-20894/org.agencyy.android W/art: Before Android 4.1, method int android.support.v7.widget.ListViewCompat.lookForSelectablePosition(int, boolean) would have incorrectly overridden the package-private method in android.widget.ListView
07-21 08:52:14.805 20894-20894/org.agencyy.android D/AndroidRuntime: Shutting down VM
07-21 08:52:14.806 20894-20894/org.agencyy.android E/AndroidRuntime: FATAL EXCEPTION: main
     Process: org.agencyy.android, PID: 20894
     java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String org.onebusaway.android.directions.util.CustomAddress.toString()' on a null object reference
         at org.onebusaway.android.ui.TripPlanFragment.reverseTrip(TripPlanFragment.java:416)
         at org.onebusaway.android.ui.TripPlanFragment.onOptionsItemSelected(TripPlanFragment.java:308)
         at android.support.v4.app.Fragment.performOptionsItemSelected(Fragment.java:2085)
         at android.support.v4.app.FragmentManagerImpl.dispatchOptionsItemSelected(FragmentManager.java:2163)
         at android.support.v4.app.FragmentController.dispatchOptionsItemSelected(FragmentController.java:304)
         at android.support.v4.app.FragmentActivity.onMenuItemSelected(FragmentActivity.java:409)
         at android.support.v7.app.AppCompatActivity.onMenuItemSelected(AppCompatActivity.java:189)
         at android.support.v7.view.WindowCallbackWrapper.onMenuItemSelected(WindowCallbackWrapper.java:100)
         at android.support.v7.app.AppCompatDelegateImplV7.onMenuItemSelected(AppCompatDelegateImplV7.java:663)
         at android.support.v7.view.menu.MenuBuilder.dispatchMenuItemSelected(MenuBuilder.java:811)
         at android.support.v7.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:152)
         at android.support.v7.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:958)
         at android.support.v7.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:948)
         at android.support.v7.view.menu.MenuPopupHelper.onItemClick(MenuPopupHelper.java:191)
         at android.widget.AdapterView.performItemClick(AdapterView.java:310)
         at android.widget.AbsListView.performItemClick(AbsListView.java:1145)
         at android.widget.AbsListView$PerformClick.run(AbsListView.java:3066)
         at android.widget.AbsListView$3.run(AbsListView.java:3903)
         at android.os.Handler.handleCallback(Handler.java:739)
         at android.os.Handler.dispatchMessage(Handler.java:95)
         at android.os.Looper.loop(Looper.java:224)
         at android.app.ActivityThread.main(ActivityThread.java:5526)
         at java.lang.reflect.Method.invoke(Native Method)
         at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 Steps to reproduce: Open the app and go to &quot;Plan a Trip (beta)&quot;. Go to options, and select &quot;Invert&quot; Expected behavior: My origin(from) what say &quot;Current Location&quot; change to destiny (to). Observed behavior: Crash Device and Android version: Xperia Z3 Compact (D5803) Manufacturer Sony Android version Android 6.0.1 RAM (MB) 2048 Screen size 720 × 1280 Screen density (dpi) 320 OpenGL ES version 3.0 Native platform armeabi-v7a CPU make Qualcomm CPU model MSM8974AC Google Play Services 9.0.83 Screenshots:
	</description>
			<title>NPE when tapping on Invert option Trip Plan</title>
		</Manager>
		<Manager Number="253">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #626</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/626</url>
			<description>
		Summary: Under certain conditions, the home screen stop shortcut icons don't always go directly to showing arrivals for that stop (i.e., ArrivalsListActivity). It seems that if there are other activities in the stack above a previous instance of ArrivalsListActivity, the shortcut will go to that activity. Steps to reproduce: Clear all screens of the app by pressing the Back button or the multitasking button and clearing the existing app Tap on a home screen stops shortcut Tap on the back arrow in the action bar of ArrivalsListActivity to return to the HomeActivity (e.g., &quot;Nearby&quot; view) Tap the home button to return to the home screen Tap on the same home screen stop shortcut Expected behavior: Go to the ArrivalsListActivity and show arrivals for the stop Observed behavior: Shows the HomeActivity (e.g., &quot;Nearby&quot;) Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>Stop shortcuts don't always go directly to ArrivalsListActivity</title>
		</Manager>
		<Manager Number="254">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #627</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/627</url>
			<description>
		Summary: I've gotten a few requests from users to add the stop direction back with the stop name. There are apparently some areas in Puget Sound where stops on either side of the street have the exact same names, and stop direction is important to tell them apart. Arrows on the map apparently aren't sufficient for some users. v1.x included the direction for the stop in the header: Here's how it currently looks:
	</description>
			<title>Re-add stop direction with stop name</title>
		</Manager>
		<Manager Number="255">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #628</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/628</url>
			<description>
		Summary: From Android Developer Console for v2.0.16 and v2.1.0: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference
    at org.onebusaway.android.ui.TripDetailsListFragment.findIndexForStop(TripDetailsListFragment.java:361)
    at org.onebusaway.android.ui.TripDetailsListFragment.setScroller(TripDetailsListFragment.java:713)
    at org.onebusaway.android.ui.TripDetailsListFragment.setTripDetails(TripDetailsListFragment.java:239)
    at org.onebusaway.android.ui.TripDetailsListFragment.access$500(TripDetailsListFragment.java:58)
    at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoaderCallback.onLoadFinished(TripDetailsListFragment.java:427)
    at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoaderCallback.onLoadFinished(TripDetailsListFragment.java:416)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.onLoadComplete(LoaderManager.java:444)
    at android.support.v4.content.Loader.deliverResult(Loader.java:126)
    at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoader.deliverResult(TripDetailsListFragment.java:476)
    at org.onebusaway.android.ui.TripDetailsListFragment$TripDetailsLoader.deliverResult(TripDetailsListFragment.java:449)
    at android.support.v4.content.AsyncTaskLoader.dispatchOnLoadComplete(AsyncTaskLoader.java:249)
    at android.support.v4.content.AsyncTaskLoader$LoadTask.onPostExecute(AsyncTaskLoader.java:77)
    at android.support.v4.content.ModernAsyncTask.finish(ModernAsyncTask.java:466)
    at android.support.v4.content.ModernAsyncTask.access$400(ModernAsyncTask.java:48)
    at android.support.v4.content.ModernAsyncTask$InternalHandler.handleMessage(ModernAsyncTask.java:483)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:145)
    at android.app.ActivityThread.main(ActivityThread.java:5942)
    at java.lang.reflect.Method.invoke(Native Method)
    at java.lang.reflect.Method.invoke(Method.java:372)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Droid Turbo (quark) 1   33.3%
LG G4 (p1)  1   33.3%
Galaxy S4 (jfltevzw)    1   33.3%
	</description>
			<title>NPE in TripDetailsListFragment.findIndexForStop()</title>
		</Manager>
		<Manager Number="256">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #632</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/632</url>
			<description>
		Summary: From Android Developer Console for v2.1.1: java.lang.RuntimeException: Unable to resume activity {com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.PreferencesActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.preference.PreferenceCategory.removePreference(android.preference.Preference)' on a null object reference
    at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3103)
    at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3134)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1388)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5417)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.preference.PreferenceCategory.removePreference(android.preference.Preference)' on a null object reference
    at org.onebusaway.android.ui.PreferencesActivity.onResume(PreferencesActivity.java:172)
    at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1258)
    at android.app.Activity.performResume(Activity.java:6327)
    at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3092)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: First device: Nexus 6 (shamu)
Manufacturer Google 
Android version Android 4.2 
RAM (MB) 3072 
Screen size 1440 × 2560 
Screen density (dpi) 560 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model APQ8084AB
 Second device: Nexus 5X (bullhead)
Manufacturer Google 
Android version Android 6.0 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 420 
OpenGL ES version 3.1 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8992
	</description>
			<title>NPE when hiding trip planning notification preference</title>
		</Manager>
		<Manager Number="257">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #634</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/634</url>
			<description>
		Summary: Currently, the data posted to the Open311 server includes metadata for the arrival and stop info, such as: Description Bus didn't come, app claims it has passed. service_date=07-25-2016; agency_name=Hillsborough Area Regional Transit; gtfs_stop_id=Hillsborough Area Regional Transit_6938; route_id=Hillsborough Area Regional Transit_200; route_display_name=200; trip_id=Hillsborough Area Regional Transit_190210; trip_headsign=East to Downtown/MTC; predicted=true; vehicle_id=Hillsborough Area Regional Transit_2306; vehicle_location=27.960426330566406 -82.72793579101563; schedule_deviation=9.000 min late; stop_arrival_time=05:36 PM; stop_departure_time=05:36 PM; also asked... Q. Issue Category A. Bus never came Q. Bus Stop ID (4 digit) A. 6938 PSTA has requested that we add GTFS stop_name for both arrival time and stop problem reports. Steps to reproduce: Report a stop or arrival time problem to an Open311 area Expected behavior: Include stop_name in the metadata Observed behavior: stop_name isn't included Device and Android version: N/A
	</description>
			<title>Add stop name to metadata posted to Open311 server</title>
		</Manager>
		<Manager Number="258">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #635</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/635</url>
			<description>
		Summary: We are getting NPE when using a custom api url. 
java.lang.RuntimeException: Unable to resume activity {com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.PreferencesActivity}: java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String org.onebusaway.android.io.elements.ObaRegion.getOtpBaseUrl()' on a null object reference
   at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3103)
   at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3134)
   at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2481)
   at android.app.ActivityThread.-wrap11(ActivityThread.java)
   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1344)
   at android.os.Handler.dispatchMessage(Handler.java:102)
   at android.os.Looper.loop(Looper.java:148)
   at android.app.ActivityThread.main(ActivityThread.java:5417)
   at java.lang.reflect.Method.invoke(Native Method)
   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
Caused by: java.lang.NullPointerException: Attempt to invoke interface method 'java.lang.String org.onebusaway.android.io.elements.ObaRegion.getOtpBaseUrl()' on a null object reference
   at org.onebusaway.android.ui.PreferencesActivity.onResume(PreferencesActivity.java:165)
   at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1258)
   at android.app.Activity.performResume(Activity.java:6327)
   at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3092)
   at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3134) 
   at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2481) 
   at android.app.ActivityThread.-wrap11(ActivityThread.java) 
   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1344) 
   at android.os.Handler.dispatchMessage(Handler.java:102) 
   at android.os.Looper.loop(Looper.java:148) 
   at android.app.ActivityThread.main(ActivityThread.java:5417) 
   at java.lang.reflect.Method.invoke(Native Method) 
   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726) 
   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616) 

 Steps to reproduce: Go to Settings Set custom api url Go to main screen Tap on Settings again Expected behavior: No NPE Observed behavior: NPE Device and Android version: Motorola Nexus 6 w/ Android 6.0.1 Screenshots: N/A
	</description>
			<title>Trip planning - NPE while using custom api urls</title>
		</Manager>
		<Manager Number="259">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #638</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/638</url>
			<description>
		@themonki We added some strings regarding trip planning problem reporting in 484c8ce. Would you be able to do a Spanish translation of these?
	</description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="260">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #640</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/640</url>
			<description>
		Summary: From Android Developer Console for v2.1.1: java.lang.NullPointerException: Attempt to invoke virtual method 'android.view.LayoutInflater android.support.v4.app.FragmentActivity.getLayoutInflater()' on a null object reference
    at org.onebusaway.android.ui.NavigationDrawerFragment.makeNavDrawerItem(NavigationDrawerFragment.java:396)
    at org.onebusaway.android.ui.NavigationDrawerFragment.createNavDrawerItems(NavigationDrawerFragment.java:380)
    at org.onebusaway.android.ui.NavigationDrawerFragment.populateNavDrawer(NavigationDrawerFragment.java:363)
    at org.onebusaway.android.ui.HomeActivity.redrawNavigationDrawerFragment(HomeActivity.java:1036)
    at org.onebusaway.android.ui.HomeActivity.onRegionTaskFinished(HomeActivity.java:1179)
    at org.onebusaway.android.region.ObaRegionsTask$2.run(ObaRegionsTask.java:268)
    at android.os.Handler.handleCallback(Handler.java:746)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5443)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:728)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:618)
 Steps to reproduce: Unknown. It looks like the Regions Task is finishing and then trying to render the Navigation Drawer, and that is failing. So I'm guessing the task is finishing earlier or later than the normal lifecycle (e.g., maybe the user is closing the app fast). Expected behavior: Not crash Observed behavior: Crash Device and Android version: Two devices: Moto X (2nd Gen) (victara)
Manufacturer Motorola 
Android version Android 4.4 
RAM (MB) 2000 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974
 DROID Turbo 2 (kinzie)
Manufacturer Motorola 
Android version Android 5.1 
RAM (MB) 3000 
Screen size 1440 × 2560 
Screen density (dpi) 640 
OpenGL ES version 3.1 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8994
	</description>
			<title>NPE when rendering Navigation Drawer</title>
		</Manager>
		<Manager Number="261">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #652</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/652</url>
			<description>
		Summary: When planning a trip using the current master branch, I saw this crash on my device: E/AndroidRuntime: FATAL EXCEPTION: main
   Process: com.joulespersecond.seattlebusbot, PID: 28269
   java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Class java.lang.Object.getClass()' on a null object reference
       at org.onebusaway.android.directions.realtime.RealtimeServiceImpl.showNotification(RealtimeServiceImpl.java:196)
       at org.onebusaway.android.directions.realtime.RealtimeServiceImpl.access$000(RealtimeServiceImpl.java:48)
       at org.onebusaway.android.directions.realtime.RealtimeServiceImpl$1.onTripRequestComplete(RealtimeServiceImpl.java:154)
       at org.onebusaway.android.directions.tasks.TripRequest.onPostExecute(TripRequest.java:108)
       at org.onebusaway.android.directions.tasks.TripRequest.onPostExecute(TripRequest.java:46)
       at android.os.AsyncTask.finish(AsyncTask.java:651)
       at android.os.AsyncTask.access$500(AsyncTask.java:180)
       at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:668)
       at android.os.Handler.dispatchMessage(Handler.java:102)
       at android.os.Looper.loop(Looper.java:148)
       at android.app.ActivityThread.main(ActivityThread.java:5525)
       at java.lang.reflect.Method.invoke(Native Method)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
 It looks like I introduced this when refactoring via 4a4331c. Steps to reproduce: Plan a trip Have the service try to issue a notification if the trip plan was no longer recommended Expected behavior: Not crash Observed behavior: Crash Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>NPE on trip plan notifications</title>
		</Manager>
		<Manager Number="262">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #653</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/653</url>
			<description>
		Summary: I found this when fixing #652. When a user plans a trip, we poll the server for a period to check if there are any real-time changes that might impact the trip (see #617 (comment) for details). If there are changes, we notify the user. In RealtimeServiceImpl.showNotification(), mActivity is referenced to get the Class to register with the notification, so when the user taps on the notification they are brought to the trip planning activity. The issue here is that showNotification() is called from the BroadcastReceiver.onReceive() within RealtimeServiceImpl, which continues to poll the server after a trip is planned. So, the activity may have been killed by the time the BroadcastReceiver attempts to notify the user. This would then result in an NPE when trying to access mActivity. There is no other use of mActivity in RealtimeServiceImpl, so I believe an easy fix for this is to pass in the Class instead of the Activity in the RealtimeServiceImpl constructor. I'll put together a PR for this. cc @sdjacobs Steps to reproduce: I haven't actually produced an NPE, but looking at the code this should do it: Plan a trip Kill the TripPlanActivity Have the BroadcastReceiver generate a notification for a trip that's no longer recommended Expected behavior: Not crash Observed behavior: It would crash. Device and Android version: N/A.
	</description>
			<title>Trip plan activity is potentially referenced outside its lifecycle</title>
		</Manager>
		<Manager Number="263">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #655</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/655</url>
			<description>
		Summary: Originally discussed in #653 (comment). When a user plans a trip, we poll the server for a period to check if there are any real-time changes that might impact the trip (see #617 (comment) for details). If there are changes, we notify the user. However, currently these notifications only occur if TripResultsFragment is in the foreground. From #653 (comment): It looks like all background updates are currently killed when the user leaves the TripResultsFragment, in TripResultsFragment.onDestroy() via mRealtimeService.disableListenForTripUpdates();. HART wanted this reminder to be available after the user planned the trip and changed to a different screen, so they could be notified if a delay or other issue caused problems at any point after planning a trip (e.g., en-route). We will need to be sure that the new implementation properly stops notifications to the user after a certain threshold of time or when the user dismisses the notification. @sdjacobs Could you please take a look at this? Most of this code may already be in place - I haven't looked closely. The currently implementation may work but leak the TripResultsFragment after its lifecycle ends, similar to the issue I discussed with TripPlanActivity in #653 (comment). I think a good approach that probably wouldn't require much modification is to register an IntentService to receive the alarm from the AlarmManager, instead of using the locally declared BroadcastReceiver. This would allow the code that executes the request to the OTP server and creates the notification to run in it's own service just for the duration that's required, and then it shuts down. Here's an example of registering an IntentService with the AlarmManager: http://stackoverflow.com/questions/22394615/intentservice-wont-start-using-alarmmanager Steps to reproduce: Change the code so that a notification is produced every time OTP is requeried Put debugging breakpoints in TripResultsFragment.onDestroy() and TripPlanActivity.onDestroy(), and RealtimeServiceImpl.mBroadcastReceiver.onReceive(). Planning a trip Kill TripPlanActivity by pressing back Expected behavior: Notifications should continue to occur (e.g., RealtimeServiceImpl.mBroadcastReceiver.onReceive() should still be called) following TripResultsFragment.onDestroy() and TripPlanActivity.onDestroy(). Observed behavior: No notifications occur after TripResultsFragment.onDestroy() and TripPlanActivity.onDestroy() (e.g., RealtimeServiceImpl.mBroadcastReceiver.onReceive() is never called). This is because all background updates are currently killed when the user leaves the TripResultsFragment, in TripResultsFragment.onDestroy() via mRealtimeService.disableListenForTripUpdates(); Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>User isn't notified of trip plan changes when app is backgrounded</title>
		</Manager>
		<Manager Number="264">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #656</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/656</url>
			<description>
		Summary: We should add a Google Analytics event that fires when a trip plan request is sent to an OTP server. The &quot;Clicked Trip Plan link&quot; event currently fires when a user taps on the &quot;Plan a trip&quot; icon in the main navigation drawer, but we'd also like to capture how many times a trip is planned once they are looking at the TripPlanActivity. Steps to reproduce: Plan a trip Expected behavior: For each trip request sent to the server, a GA event should be recorded Observed behavior: No GA event is recorded for trip requests sent to the server. Device and Android version: N/A
	</description>
			<title>Add GA event for trip plan requests sent to a server</title>
		</Manager>
		<Manager Number="265">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #663</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/663</url>
			<description>
		Summary: Reported by user for v2.1.1: Meta-feedback (feedback about your feedback system). I just tried to submit a report through the app. When I sent it, I got two pop-up messages on my screen. One of them indicated that the report was successfully sent. The other one indicated that the report was not sent. I'm not sure what actually happened. Maybe the app gave it to the phone (success msg), but the phone was unable to carry out the task (failure msg) for some reason? (Does that even make sense?) 2) This is the report I tried to send earlier when I received the conflicting pop-up msgs, as described above. There seems to be a fundamental problem with the bus-tracking system for Metro route 41 Downtown. The arrival times change erratically, often changing from displaying 15-35 min late, only to change in one refresh to being 5 min late, or on-time. The change doesn't happen slowly, as if the bus gradually caught up; it happens in an instant, as if the bus' experience of time itself was temporarily altered. Sounds like the user may be seeing an erroneous failure message when submitting an arrival time problem report in Puget Sound. Steps to reproduce: Unknown (Submit an arrival time report in Puget Sound?) Expected behavior: Successfully submit a report, and notify the user that the report was successfully submitted. Observed behavior: User saw a success and failure message Device and Android version: App Version: 2.1.1 Model: XT1254 OS Version: 5.1 / 22 Google Play Services App: 9.4.52 (230-127739847) Google Play Services Library: 9080000 Region/API: Puget Sound (selected automatically) Loc: gps
	</description>
			<title>Erroneous arrival time problem submission error message</title>
		</Manager>
		<Manager Number="266">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #664</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/664</url>
			<description>
		Summary: If you set a custom OBA server API, you can't plan a trip. When you tap on the &quot;To&quot; or &quot;From&quot; field, nothing happens - no keyboard appears, and no autocomplete widget appears. Here's the error in Logcat: E/ProprietaryMapHelpV2: Error getting autocomplete: java.lang.IllegalArgumentException: Region is null Looks like we're trying to bias results based on regions bounds, but region is null when there is a custom OBA server API set. Steps to reproduce: Go to &quot;Settings-&gt;Advanced&quot; and enter a custom OBA server API - app.staging.obahart.org Return to the main screen by pressing back twice Tap on &quot;Plan a trip&quot; in nav drawer Tap on &quot;To&quot; or &quot;From&quot; field Expected behavior: Keyboard and autocomplete widget should appear. Observed behavior: Nothing happens - keyboard and autocomplete widget do not appear. Device and Android version: Stock LG G4 w/ Android 6.0
	</description>
			<title>Can't enter trip plan origin/destination with custom OBA server API</title>
		</Manager>
		<Manager Number="267">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #668</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/668</url>
			<description>
		Summary: I'd like to be more transparent with users as to what bugs are fixed in each release. However, it's difficult to give them a reasonable description in the small dialog box. On a related note, I've been leaving the v2.x UI refresh &quot;What's New&quot; items in the dialog, as there are still a good number of users updating to the new UI. As a result, we have very little room for bug fix descriptions. I'd like to start linking to the OBA Release page here on Github, and maintaining a better list of bug fixes with those releases. For example: However, links aren't clickable by default in dialog boxes. So, we need to make them clickable. Steps to reproduce: Tap on &quot;Help-&gt;What's New&quot; Tap on bug fixes URL Expected behavior: Launch the browser to that URL Observed behavior: Nothing happens (URL isn't clickable) Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>Links in &quot;What's New&quot; aren't clickable</title>
		</Manager>
		<Manager Number="268">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #669</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/669</url>
			<description>
		Summary: This is a long-standing but infrequently occurring bug that I've seen since v1.x, and has occurred most recently in v2.1.2 (staged rollout): java.lang.NullPointerException: Attempt to invoke virtual method 'android.content.ContentResolver android.content.Context.getContentResolver()' on a null object reference
    at org.onebusaway.android.provider.ObaContract$Stops.insertOrUpdate(ObaContract.java:533)
    at org.onebusaway.android.ui.ArrivalsListFragment.addToDB(ArrivalsListFragment.java:1507)
    at org.onebusaway.android.ui.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:435)
    at org.onebusaway.android.ui.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:89)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.reportStart(LoaderManager.java:315)
    at android.support.v4.app.LoaderManagerImpl.doReportStart(LoaderManager.java:819)
    at android.support.v4.app.Fragment.performStart(Fragment.java:2009)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1102)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
    at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:517)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:158)
    at android.app.ActivityThread.main(ActivityThread.java:7230)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 Steps to reproduce: Unknown - user comments: adding star to route from list of routes at a stop crashes it it radumbly stopped working app crashed when trying to filter route info at a stop Expected behavior: Not crash Observed behavior: Crash Device and Android version: A variety of devices, including: Galaxy S5 (kltetmo) Galaxy J1 (j1xlteaio) Galaxy S7 (heroqltetfnvzw) HTC One (m7) Moto X Pure Edition (clark) ...and a variety of Android versions, including 5.0, 5.1, and 6.0.
	</description>
			<title>NPE when adding/updating stop in database</title>
		</Manager>
		<Manager Number="269">
			<labels>
				<label>enhancement</label>
				<label>your first PR</label>
			</labels>
			<bugID>Issue #671</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/671</url>
			<description>
		Summary: Currently trip plans are just lines on the map: IMHO, this makes it difficult to tell which end is the origin or destination, and also makes it difficult to tell where there is a transition between two routes, or between transit and walking. I'd like to add markers to make the origin/destination easier to distinguish, and markers to indicate mode transitions. Here's how the markers look in OpenTripPlanner Android: Here's how the markers look in Google Maps (left is using real-time location as origin, right is using a static location for origin): I like the Google Maps approach for the origin/destination, with the origin as a circle (gray if static, blue if real-time), and the classic red marker for destination. For mode transitions, something like OTP Android may work. We should use material design icons, though.
	</description>
			<title>Add markers (start and end) to trip plans on map</title>
		</Manager>
		<Manager Number="270">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #674</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/674</url>
			<description>
		Summary: From Android Developer Console for v2.1.0: java.lang.NullPointerException: Attempt to invoke virtual method 'void org.onebusaway.android.ui.ArrivalsListHeader.setTripsForStop(android.content.ContentQueryMap)' on a null object reference
    at org.onebusaway.android.ui.ArrivalsListFragment$TripsForStopCallback.onLoadFinished(ArrivalsListFragment.java:1536)
    at org.onebusaway.android.ui.ArrivalsListFragment$TripsForStopCallback.onLoadFinished(ArrivalsListFragment.java:1517)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
    at android.support.v4.app.LoaderManagerImpl$LoaderInfo.reportStart(LoaderManager.java:315)
    at android.support.v4.app.LoaderManagerImpl.doReportStart(LoaderManager.java:819)
    at android.support.v4.app.Fragment.performStart(Fragment.java:2009)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1102)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
    at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:517)
    at android.os.Handler.handleCallback(Handler.java:739)
    at android.os.Handler.dispatchMessage(Handler.java:95)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5422)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
 Steps to reproduce: Unknown Expected behavior: Not crash Observed behavior: Crash Device and Android version: Variety of devices, including: Nexus 5X (bullhead) Galaxy S6 (zerofltespr) Galaxy S5 (kltetmo) Galaxy Note4 (trlteatt) Variety of Android versions, including: Android 6.0 Android 5.1
	</description>
			<title>NPE updating ArrivalsListHeader with trip info</title>
		</Manager>
		<Manager Number="271">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #675</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/675</url>
			<description>
		Summary: By default, builds of OBA Android generate APKs with names like: onebusaway-android-oba-google-release.apk I've always manually appended the version name to the end for releases, so the final APK looks like: onebusaway-android-oba-google-release-v2.1.3.apk I'd like to automate this process, as it reduces the chance for human error, and also gives us a marker for debug builds as to when (roughly) they were generated. Steps to reproduce: Run gradlew assembleDebug or gradlew assembleRelease, or just run the build in Android Studio Look in the folder onebusaway-android/build/outputs/apk Expected behavior: Automatically add the version name to the end of the file name Observed behavior: No version number is currently added Device and Android version: N/A
	</description>
			<title>Automatically append version name to APKs</title>
		</Manager>
		<Manager Number="272">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #676</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/676</url>
			<description>
		Summary: Starting with v2.1.3 (beta) (via #622) we now support custom OpenTripPlanner server APIs. This allows a region to test an OTP server without adding it to the Regions API and exposing it to all users. Custom OTP and OBA servers are also both supported - this allows a new region to test both before launching and being added to the Regions API. There are a few format caveats, etc. We should document what URL formats we support. I'll push a fix for this shortly.
	</description>
			<title>Add documentation on custom API servers</title>
		</Manager>
		<Manager Number="273">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #677</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/677</url>
			<description>
		Summary: After planning a trip, if the sliding panel is fully expanded, tapping on the arrow in the Action Bar imitates the back button behavior, instead of up navigation to the HomeActivity. For details on best practices with back vs. up navigation, see https://developer.android.com/design/patterns/navigation.html and https://material.google.com/patterns/navigation.html#navigation-up-back-buttons. Steps to reproduce: Plan a trip With the sliding panel all the way up (default state after planning a trip), tap on the arrow in the Action Bar Expected behavior: Go back to HomeActivity Observed behavior: It imitates the back button, and collapses the sliding panel: Device and Android version: Stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>TripPlanActivity Action Bar arrow does &quot;back&quot; instead of &quot;up&quot; behavior</title>
		</Manager>
		<Manager Number="274">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #681</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/681</url>
			<description>
		Summary: Users have occasionally reported that they see a bus running 1,440 minutes early or late, which happens to be roughly the number of minutes in one day (24 * 60). Same issue on OBA iOS - OneBusAway/onebusaway-iphone#661. From OneBusAway/onebusaway-iphone#661 (comment), which includes some sample JSON from a response: Alright, after looking at 1_11190.json in the zip file that aaronbrethorst attached to this issue in the initial post (captured at 1472055140749 - Wednesday August 24, 2016 09:12:21 am - PDT), it looks like it's a real-time prediction error in Puget Sound... Just wanted to document this so we have a record in OBA Android as well. Steps to reproduce: Unknown (seems to be server-side problem) Expected behavior: Show a predicted time today Observed behavior: A predicted time for yesterday or tomorrow Device and Android version: N/A
	</description>
			<title>Bus departing ~1,440 minutes early</title>
		</Manager>
		<Manager Number="275">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #687</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/687</url>
			<description>
		Summary: #647 adds markers for multiple vehicle types. Currently, in VehicleOverlay.loadIcons(), the black template icons for all five modes are loaded when constructing VehicleOverlay: vehicle_type_icons.put(ObaRoute.TYPE_BUS, createBusIcons());
vehicle_type_icons.put(ObaRoute.TYPE_FERRY, createFerryIcons());
vehicle_type_icons.put(ObaRoute.TYPE_TRAM, createTramIcons());
vehicle_type_icons.put(ObaRoute.TYPE_SUBWAY, createSubwayIcons());
vehicle_type_icons.put(ObaRoute.TYPE_RAIL, createRailIcons());
 Each vehicle type has 9 bitmaps that are loaded (8 directions + no direction). So by default we're loading 45 bitmaps into memory the first time VehicleOverlay is initialized. It's highly doubtful that on any one execution all five vehicle types will be displayed on the map, so we could reduce memory usage by loading these on-demand when the vehicle markers for that type are shown. We currently do something similar for colored versions of the icons (for early, late, on-time, and scheduled) that are actually shown on the map - these colored bitmaps are generated on-demand and stored in an LRU cache. Steps to reproduce: Tap on an arrival time and choose &quot;Show route on map&quot; Expected behavior: Only load the black bitmap template arrays for the vehicle type(s) shown into memory Observed behavior: The black bitmap template arrays for all vehicle types are loaded into memory Device and Android version: N/A cc @bendu
	</description>
			<title>Load vehicle marker type bitmap arrays on-demand</title>
		</Manager>
		<Manager Number="276">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #688</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/688</url>
			<description>
		Summary: If you tap on a service alert from the ArrivalsListActivity, and then tap the back arrow in the action bar, it takes you to the HomeActivity. It should take you back to the ArrivalsListActivity. Reported by a user: When viewing a service alert, on the app, while polling arrival information, when exiting out of the alert message the app takes u back to the landing page..this is not good, it should take u back to the stop ID u are querying that was attached to the alert Workaround - use the back button instead. Caveat - the app should still go back to the HomeActivity when entering the Service Alert activity via the HomeActivity (i.e., by tapping on the service alert in the sliding panel. Steps to reproduce: Star a stop that has a service alert active (e.g., in Pinellas County, which still has perpetual service alerts) Go to the starred stop screen and tap on the starred stop to view arrivals via ArrivalsListActivity Tap on the service alert Tap on the back button in the Action Bar Expected behavior: Take me back to the ArrivalsListActivity Observed behavior: Takes me back to HomeActivity Device and Android version: Repro'd on stock LG G4 w/ Android 6.0 Screenshots: See above
	</description>
			<title>Back arrow on Service Alert screen always goes to HomeActivity</title>
		</Manager>
		<Manager Number="277">
			<labels>
				<label>enhancement</label>
				<label>your first PR</label>
			</labels>
			<bugID>Issue #697</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/697</url>
			<description>
		Summary: Requested by user: Everytime I open the app or I navigate to the map screen while the app is running, I need to cancel the pop-up notice telling me that location services are turned off. I generally have no need for location services. In past versions, the app did not pester me about location services. Can we turn this notification feature off? I agree that this is annoying and we should provide an option to hide it (although to my knowledge we haven't changed this behavior at all - it's the same as it was in v1.0 - EDIT - Confirmed, a duplicate issue for this was #8 for v1.x - I've closed that issue as a duplicate of this). We can show a custom dialog that has a checkbox option for &quot;Always prompt me if location services are off&quot;, and if the user unchecks it they will no longer get the prompt. Steps to reproduce: Turn off location services in your Android system settings (e.g., using pull down shade) Open the app and go to the &quot;Nearby&quot; map screen Expected behavior: Give me an option to opt-out of being notified that location services are turned off Observed behavior: Every time I go to the map I get the prompt &quot;Location Not enabled - OneBusAway would like your location, do you want to enable it now?&quot; Device and Android version: Reported by user with: App Version: 2.1.3 Model: SM-G920V OS Version: 6.0.1 / 23
	</description>
			<title>Provide option to always hide location services prompt</title>
		</Manager>
		<Manager Number="278">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #699</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/699</url>
			<description>
		Summary: After bumping the Android Gradle plugin as recommended by Android Studio 2.2, Travis builds are now failing with the following error: java.lang.UnsupportedClassVersionError: com/android/build/gradle/AppPlugin : Unsupported major.minor version 52.0
 Failing build - https://travis-ci.org/OneBusAway/onebusaway-android/builds/161328678. 👍 1
	</description>
			<title>Travis builds failing - java.lang.UnsupportedClassVersionError</title>
		</Manager>
		<Manager Number="279">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #703</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/703</url>
			<description>
		Summary: Using current master branch (27979de), I had the app open on my phone on my desk to the &quot;Nearby&quot; screen with a stop selected (Tampa, stop_id 6497). I starred the stop, and then tapped on the menu and tapped on &quot;Starred Stops&quot;, and the app crashed with this stack trace: E/AndroidRuntime: FATAL EXCEPTION: main
   Process: com.joulespersecond.seattlebusbot, PID: 22701
   java.lang.NullPointerException: Attempt to invoke virtual method 'int org.onebusaway.android.ui.ArrivalsListLoader.getMinutesAfter()' on a null object reference
       at org.onebusaway.android.ui.ArrivalsListFragment.setResponseData(ArrivalsListFragment.java:545)
       at org.onebusaway.android.ui.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:459)
       at org.onebusaway.android.ui.ArrivalsListFragment.onLoadFinished(ArrivalsListFragment.java:89)
       at android.support.v4.app.LoaderManagerImpl$LoaderInfo.callOnLoadFinished(LoaderManager.java:476)
       at android.support.v4.app.LoaderManagerImpl$LoaderInfo.reportStart(LoaderManager.java:315)
       at android.support.v4.app.LoaderManagerImpl.doReportStart(LoaderManager.java:819)
       at android.support.v4.app.Fragment.performStart(Fragment.java:2009)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1102)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
       at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
       at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
       at android.support.v4.app.FragmentManagerImpl$1.run(FragmentManager.java:517)
       at android.os.Handler.handleCallback(Handler.java:739)
       at android.os.Handler.dispatchMessage(Handler.java:95)
       at android.os.Looper.loop(Looper.java:148)
       at android.app.ActivityThread.main(ActivityThread.java:5551)
       at java.lang.reflect.Method.invoke(Native Method)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:730)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:620)
 Steps to reproduce: Appears to be related to switching fragments in HomeActivity right when the arrival time is refreshed in ArrivalsListFragment (steps under which it occurred are above) Expected behavior: Not crash Observed behavior: Crash Device and Android version: LG G5 w/ Android 6.0.1 w/ Google Play Services 9.6.83
	</description>
			<title>NPE when refreshing arrival data during fragment transition</title>
		</Manager>
		<Manager Number="280">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #711</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/711</url>
			<description>
		Summary: We've seen a spike in crashes (87 over last week, 126 total over 2 weeks) mostly for OnePlus One devices (111 crashes on OnePlusOne, 3 on Droid Turbo, and 1 on Galaxy S5) with this stack trace: java.lang.RuntimeException: Unable to start activity ComponentInfo{com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.HomeActivity}: android.content.res.Resources$NotFoundException: File /data/system/theme/icons/com.joulespersecond.seattlebusbot_7f030000_0.png from drawable resource ID #0x7f030000
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2450)
    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2510)
    at android.app.ActivityThread.-wrap11(ActivityThread.java)
    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1363)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loop(Looper.java:148)
    at android.app.ActivityThread.main(ActivityThread.java:5461)
    at java.lang.reflect.Method.invoke(Native Method)
    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
Caused by: android.content.res.Resources$NotFoundException: File /data/system/theme/icons/com.joulespersecond.seattlebusbot_7f030000_0.png from drawable resource ID #0x7f030000
    at android.content.res.Resources.openRawResource(Resources.java:1336)
    at android.content.res.Resources.openRawResource(Resources.java:1306)
    at maps.V.N.a(Unknown Source)
    at maps.D.e.a(Unknown Source)
    at maps.D.p.a(Unknown Source)
    at maps.ad.ae.a(Unknown Source)
    at maps.ad.t.a(Unknown Source)
    at maps.ad.M.a(Unknown Source)
    at wd.onTransact(:com.google.android.gms.DynamiteModulesB:107)
    at android.os.Binder.transact(Binder.java:387)
    at com.google.android.gms.maps.internal.IMapFragmentDelegate$zza$zza.onCreateView(Unknown Source)
    at com.google.android.gms.maps.SupportMapFragment$zza.onCreateView(Unknown Source)
    at com.google.android.gms.dynamic.zza$4.zzb(Unknown Source)
    at com.google.android.gms.dynamic.zza.zza(Unknown Source)
    at com.google.android.gms.dynamic.zza.onCreateView(Unknown Source)
    at com.google.android.gms.maps.SupportMapFragment.onCreateView(Unknown Source)
    at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.onCreateView(BaseMapFragment.java:181)
    at android.support.v4.app.Fragment.performCreateView(Fragment.java:1974)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1067)
    at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1252)
    at android.support.v4.app.BackStackRecord.run(BackStackRecord.java:742)
    at android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1617)
    at android.support.v4.app.FragmentController.execPendingActions(FragmentController.java:339)
    at android.support.v4.app.FragmentActivity.onStart(FragmentActivity.java:601)
    at org.onebusaway.android.ui.HomeActivity.onStart(HomeActivity.java:334)
    at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1238)
    at android.app.Activity.performStart(Activity.java:6268)
    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2413)
    ... 9 more
Caused by: java.io.FileNotFoundException: /data/system/theme/icons/com.joulespersecond.seattlebusbot_7f030000_0.png
    at android.content.res.AssetManager.openNonAssetNative(Native Method)
    at android.content.res.AssetManager.openNonAsset(AssetManager.java:423)
    at android.content.res.Resources.openRawResource(Resources.java:1333)
    ... 36 more
 This doesn't seem to be related to any change by us, as it happened 2 times on app version 70 and 126 times on version 71. This StackOverflow issue points to this CyanogenMod issue. From that issue: Changing from the Hexo theme to any other CyanogenMod theme fixes the issue. I'm going to mark this as &quot;Won't fix&quot;, as it seems to be an issue with CyanogenMod. Steps to reproduce: Start app on OnePlus One with Hexo theme active Expected behavior: Not crash Observed behavior: Crash with above stacktrace Device and Android version: 111 crashes on: OnePlus One (A0001)
Manufacturer Symphony Teleca
Android version Android 4.3 
RAM (MB) 3072 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974AC
 3 crashes on: 
Droid Turbo (quark)
Manufacturer Motorola
Android version Android 4.4 
RAM (MB) 3000 
Screen size 1440 × 2560 
Screen density (dpi) 640 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model APQ8084
 1 crash on: 
Galaxy S5 (kltetmo)
Manufacturer Samsung 
Android version Android 4.4 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974
 Screenshots: N/A
	</description>
			<title>java.io.FileNotFoundException for resource icon on OnePlus One devices</title>
		</Manager>
		<Manager Number="281">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #713</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/713</url>
			<description>
		Summary: We're beginning to see regions take more advantage of the ability to distribute service alerts via OneBusAway, which is great. In the past, alerts were usually temporary/transient events such as a real-time service outage or maintenance alert. Now, agencies are starting to publish more long running alerts about stops or routes with detours that are weeks long, or to advertise new services. When these alerts aren't carefully targeted to specific routes or stops, they can quickly add up and take up a large portion of the screen. For example, here's what the alerts look like for Tampa for every stop as of today: Users are starting to complain: I do not want alerts signified by the yellow triangle with an exclamation mark. These alerts are not pertinent for what I need. WMATA accidentally published around 6 empty service alerts (no text) last week and I also got several complaints about that. Same with San Diego, which has 2-3 alerts for a decent number of stops: We need a mechanic that allows users to selectively acknowledge that they've read an alert, and dismiss it so it doesn't appear again. I think a simple &quot;DISMISS&quot; button in the bottom right would do it, similar to how the calendar app looks: We should probably add a button somewhere (in Settings?) that would allow a user to restore (i.e., undismiss) all active alerts, so they would appear again. We already have a service alerts table in the local database, although it appears to currently be unused. There is a markAsRead boolean variable when inserting/updating records, which records the read time (current time) to the database. We should be able to use this table for this feature. Related to #447, although #447 is technically considered a bug in how we display a large number of alerts in that they can starve arrivals for space - this issue is for a new mechanic to allow selectively dismissing alerts so they don't take up space. Steps to reproduce: Go to Tampa region and tap on stop, and slide up panel, or go to starred stop Expected behavior: Allow me to get rid of service alerts blocking my view of arrivals Observed behavior: I'm stuck looking at alerts from the agency for however long the agency decides to put them there. Device and Android version: N/A
	</description>
			<title>Allow users to dismiss service alerts</title>
		</Manager>
		<Manager Number="282">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #717</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/717</url>
			<description>
		Summary: In Tampa Bay, we originally tested the new Open311-based issue reporting integration with PSTA in Pinellas County. In that setup, there are two transit-related categories (stops and arrival times) - all other categories aren't transit-related, because PSTA is only one of many government agencies using the Pinellas SeeClickFix account: Here's the breakdown of categories for the two transit-related categories in Pinellas County: PSTA - Bus Stops: • Trash at Bus Stop • Vandalism/Graffiti • Benches • Shelters • Safety concern • Incorrect/Missing Stop ID • Location is wrong • Route/trip is missing • other-call 727 540-1800 PSTA - Arrival times/schedules: • Bus never came • Bus came earlier than predicted • Bus came later than predicted • Wrong destination shown • Bus doesn’t stop here • Other- call (727) 540-1800 These categories intentionally closely resemble the original stop/trip problem reporting categories used in the original OBA issue reporting API. HART recently purchased a SeeClickFix account for their own use. This differs from the PSTA setup, because HART is the account owner, and therefore all issue categories are transit related. Right now HART wanted to flatten out the issue categories, so root categories look like this: • Trash at Bus Stop • Vandalism/Graffiti • Benches • Shelters • Safety concern • Incorrect/Missing Stop ID • Location is wrong • Route/trip is missing • Bus never came • Bus came earlier than predicted • Bus came later than predicted • Wrong destination shown • Bus doesn’t stop here The reason behind this is that in SeeClickFix, notifications to agency staff when a user reports a problem can only be controlled at the root category level - in other words, PSTA can control who gets notified for bus stop issues and arrival time issues, but can't notify a separate group for trash at a bus stop vs. a safety concern at a bus stop. HART wants better control over the notifications based on stop sub-categories, which was the catalyst behind flattening out the results (an aside - HART may be ok with grouping the arrival time/schedule issues under one category). We could easily support sorting these into proper groups if SeeClickFix supported the group and keyword elements of the Open311 response - however, they do not, and it's not on their immediate roadmap. OBA Android doesn't currently know how to handle all transit-related categories, and it tries to match the two &quot;transit-related&quot; categories based on the category names, which ends up looking like this: So, two of the transit categories fall under the &quot;Transit&quot; header, and the rest of the transit categories incorrectly fall under the &quot;Other&quot; category. I think the best solution to fix this is the following: If there are more than 2 matches to transit-related text in the root categories, then we should remove the &quot;Transit&quot; and &quot;Others&quot; headers and just show all categories with no header. And, we would assume/require that all categories have the &quot;Bus stop id&quot; as a field to automaticaly fill. HART should move all the &quot;arrival time/schedule&quot; categories under a single root category, the same way PSTA does - This allows us to detect this category as &quot;arrival time&quot; related using text matching and make the user pick an arrival time in the issue reporting flow the same way we do with PSTA. One question is which stop-related category do we default to if the user picks &quot;Report Stop problem&quot; in the UI flow - we no longer have a single &quot;Bus Stop&quot; category to direct the user too. I suppose we could just default to no category being selected. @cagryInside Do you have any thoughts on this? Any pointers as for where I should get started working on this (as you can tell, I haven't started digging into code yet ;) ) Steps to reproduce: Change string regions_api_url in the file donottranslate.xml tohttps://raw.githubusercontent.com/OneBusAway/onebusaway-multiregion-support/testSeeClickFix/staging/regions-v3.json` to make OBA Android use the staging Regions API file that includes the demo SeeClickFix server that has the HART root categories Tap on &quot;Send feedback-&gt;Report Stop Problem&quot; Choose a stop in Hillsborough County (e.g., near USF) Tap on the category list to see list of categories Expected behavior: See all transit-related categories in a single list, without any category headers. And, &quot;Bus stop id&quot; should be automatically populated. Observed behavior: &quot;Transit&quot; category includings &quot;Trash at Bus Stop&quot; and &quot;Route/trip is missing&quot;, and all other transit-related categories incorrectly appear under &quot;Others&quot; category. The &quot;Bus stop id&quot; field is not automatically populated: Device and Android version: LG G5 w/ Android 6.0.1 Screenshots: See above
	</description>
			<title>Support transit-only Open311 deployments</title>
		</Manager>
		<Manager Number="283">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #719</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/719</url>
			<description>
		Summary: Reported by user: Widgets all disappear whenever the phone is booted. This is 100% reproducible. The problem occurs with both ways of creating the widgets. I mostly use the Stop widget, but I've also tried Route, Recent Routes, Recent Stops, and Starred Stops and all disappear on a reboot. Only the OneBus widgets disappear, other apps widgets are OK. There are no problems with adding them. This is a known issue with some apps on Samsung devices - for example, see http://forums.androidcentral.com/samsung-galaxy-s5/388398-widgets-disappear-my-galaxy-s5.html. I can't reproduce on LG G5 w/ Android 6.0.1. Steps to reproduce: Create a shortcut on Samsung Galaxy S6 Reboot device Expected behavior: Previously created shortcut should still exist Observed behavior: Shortcuts disappear Device and Android version: App Version: 2.1.4 Model: SM-G920V OS Version: 6.0.1 / 23 Google Play Services App: 10.0.84 (440-137749526) Google Play Services Library: 9452000 Region/API: Puget Sound (selected automatically) Loc: network
	</description>
			<title>Home screen shortcuts disappear on reboot</title>
		</Manager>
		<Manager Number="284">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #722</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/722</url>
			<description>
		Summary: If you tap on an arrival time and select &quot;Show trip status&quot; for a trip that includes stops with all caps name, we don't fix the case (we do fix the case in the ArrivalsListFragment). For example, HART provides title casing in it's GTFS data (Marion Transit Center), while PSTA does not (other stops) - you can see this difference in the trip status view: Steps to reproduce: In Tampa, go to PSTA in Pinellas County, tap on an arrival time and choose &quot;Show trip status&quot; Expected behavior: Show stop names in title case (similar to ArrivalsListFragment) Observed behavior: Stop names are still in all caps Device and Android version: N/A
	</description>
			<title>Title casing for stop name isn't applied in Trip Details view</title>
		</Manager>
		<Manager Number="285">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #730</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/730</url>
			<description>
		Summary: Reported by HART, and via Android Developer Console: java.lang.OutOfMemoryError: Failed to allocate a 63489036 byte allocation with 16777216 free bytes and 33MB until OOM
	at dalvik.system.VMRuntime.newNonMovableArray(Native Method)
	at android.graphics.BitmapFactory.nativeDecodeStream(Native Method)
	at android.graphics.BitmapFactory.decodeStreamInternal(BitmapFactory.java:882)
	at android.graphics.BitmapFactory.decodeStream(BitmapFactory.java:858)
	at android.graphics.BitmapFactory.decodeFile(BitmapFactory.java:478)
	at android.graphics.BitmapFactory.decodeFile(BitmapFactory.java:516)
	at org.onebusaway.android.report.ui.Open311ProblemFragment.onActivityResult(Open311ProblemFragment.java:447)
	at android.support.v4.app.FragmentActivity.onActivityResult(FragmentActivity.java:175)
	at org.onebusaway.android.report.ui.BaseReportActivity.onActivityResult(BaseReportActivity.java:52)
	at android.app.Activity.dispatchActivityResult(Activity.java:7137)
	at android.app.ActivityThread.deliverResults(ActivityThread.java:4916)
	at android.app.ActivityThread.handleSendResult(ActivityThread.java:4963)
	at android.app.ActivityThread.access$1600(ActivityThread.java:221)
	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1848)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:158)
	at android.app.ActivityThread.main(ActivityThread.java:7224)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)
 When I report trash at a stop from OBA and try to submit a photo via the gallery, the app crashes. However it responds will by taking a picture. Device was a Samsung Galaxy S5. I can't reproduce this on a LG G5 w/ Android 7.0, LG G3 w/ Android 5.0.1, an Amazon Fire Phone (I believe Android 4.4.4), or a Nexus S 4G w/ Android 4.1.2. Steps to reproduce: On an affected device: Tap on &quot;Send feedback-&gt;Report stop problem&quot; Tap on stop Choose any issue category Scroll down and tap on &quot;Add Image&quot; button, and then &quot;Gallery&quot; Choose photo Expected behavior: Add the photo to the issue report Observed behavior: App crashes with OutOfMemoryError Device and Android version: Galaxy S5 (kltevzw)
Manufacturer Samsung 
Android version Android 4.4 
RAM (MB) 2048 
Screen size 1080 × 1920 
Screen density (dpi) 480 
OpenGL ES version 3.0 
Native platform armeabi-v7a 
CPU make Qualcomm 
CPU model MSM8974
 Screenshots: N/A
	</description>
			<title>OutOfMemoryError when choosing gallery photo in issue report</title>
		</Manager>
		<Manager Number="286">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #731</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/731</url>
			<description>
		Summary: When reporting an arrival time problem, the headsign is not shown in title case (how we display all other headsigns in app). It's instead in sentence case: Steps to reproduce: Tap on &quot;Send feedback&quot; Tap on &quot;Report an Arrival Time Problem&quot; Tap on a stop on map (if not already selected) Choose problem type of &quot;Arrival times/schedules&quot; (if not already selected) Tap on an arrival time Expected behavior: Show the headsign in title case - &quot;North to University Area TC&quot; Observed behavior: Headsign is in sentence case - &quot;North to university area tc&quot; Device and Android version: LG G5 w/ Android 7.0 Screenshots: See above
	</description>
			<title>Headsign in arrival time issue report flow is not title case</title>
		</Manager>
		<Manager Number="287">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #740</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/740</url>
			<description>
		Summary: Apparently Google has updated the license for the material design icons from CC BY 4.0 to Apache v2.0: google/material-design-icons@68e015d https://github.com/google/material-design-icons/blob/master/LICENSE We should change our &quot;About&quot; text to reflect this.
	</description>
			<title>Update material design icon license from Google</title>
		</Manager>
		<Manager Number="288">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #742</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/742</url>
			<description>
		Based on San Diego data. The following single-word headsign is incorrectly turned into title case: SDSU (no screenshot) to &quot;Sdsu&quot; In addition stop names are not correctly capitalized. For example, &quot;SDSU Transit Center&quot; is recapitalized to &quot;Sdsu Transit Center&quot;. Also, in the search results for a route, the route name is incorrectly capitalized: &quot;Downtown San Diego - UTC via Old Town&quot; turns into &quot;Downtown San Diego - Utc via Old Town&quot; See annotated screenshots for more information.
	</description>
			<title>Capitalization of Stop Names and Some Headsigns is Incorrect</title>
		</Manager>
		<Manager Number="289">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #743</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/743</url>
			<description>
		Summary: @themonki I'd like to get a new beta out early next week. Do you think you'd be able to do a quick Spanish translation of the &quot;What's New&quot; text I just added in a23be84? Any help is appreciated! Thanks for your continued work on the translation!
	</description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="290">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #745</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/745</url>
			<description>
		Summary: Reported by a user: Your location and planning a trip do not work even using with fi. it fails to keep my location if I'm riding on to a 2nd bus. It always stay @ the original location of where I live. Does not update to my new position, etc..... If I didn't ride the same buses all the time so that I can guessimate my location and the ETA, I would be up the creek. my original location is stored but the updating doesn't occur so that I'm fishing around for my 2nd bus and it doesn't show up. It doesn't keep up w/me moving around Steps to reproduce: Tap &quot;Plan a trip&quot; Enter origin and destination to get a trip plan Tap on &quot;Map view&quot; to change to the map Move around Expected behavior: The blue &quot;my location&quot; dot should follow my position Observed behavior: The blue &quot;my location&quot; dot always stays in the original position Device and Android version: App Version: 2.1.5 Model: ALCATEL ONETOUCH P310A OS Version: 4.2.2 / 17 Google Play Services App: 10.0.84 (032-137749526) Google Play Services Library: 9452000 Region/API: Tampa Bay (selected automatically) Loc: fused
	</description>
			<title>User location blue dot doesn't move on the trip plan map</title>
		</Manager>
		<Manager Number="291">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #746</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/746</url>
			<description>
		Summary: From user: Latest version not working. Got message, &quot;Opps, something has gone wrong. Try again later.&quot; No routes or busses. Tried force closing, Uninstaller, etc. Nothing works. ... Turns out I had no internet connection. My phone automatically connected to an open attwifi node (across the street from the bus stop), but that access point did not connect me to the internet. I forced my phone to &quot;forget&quot; that access point, and OneBusAway started working again. ... The message said something like &quot;It might work if you try again.&quot; Saying something like &quot;Please check your internet connection and try again&quot; might be enough of a reminder without offering a specific diagnosis. Looks like captive Internet portals result in an internal error (OBA Error code 500). It would be more useful to users if we prompt them to check their Internet connection than just tell them to try again. Steps to reproduce: Connect to captive internet portal without logging in Start app and try to load arrivals or use map Expected behavior: Give me an error message to check my Internet connection Observed behavior: We tell the user &quot;Oops, something went wrong. Try again and it might work.&quot; Device and Android version: N/A
	</description>
			<title>Improve captive Internet portal (OBA 500) error message to user</title>
		</Manager>
		<Manager Number="292">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #749</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/749</url>
			<description>
		Summary: For current master branch and v2.1.6 (73) - crash after planning a trip, when the app attempts to check for changes in the itinerary: java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object java.util.ArrayList.get(int)' on a null object reference
	at org.onebusaway.android.directions.realtime.RealtimeService.getItinerary(RealtimeService.java:276)
	at org.onebusaway.android.directions.realtime.RealtimeService.onHandleIntent(RealtimeService.java:76)
	at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:67)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loop(Looper.java:154)
	at android.os.HandlerThread.run(HandlerThread.java:61)
 Very likely caused by #678, which was manually merged due to conflicts in 7dc2793. I'm not sure this is consistently reproducible for all trips. I produced it back to-back on the same trip plan, but later couldn't repro it, although I couldn't find a trip with real-time info. @sdjacobs Would you be able to take a look at this? I'm halting the public rollout of v2.1.6 until we can figure this out so everyone doesn't encounter this during trip planning in Tampa. Steps to reproduce: Plan a trip with real-time info, and wait for the update on the same screen Expected behavior: Not crash Observed behavior: NPE and crash Device and Android version: LG G5 with Android 7.0
	</description>
			<title>NPE when trying to get updated trip plan in the background</title>
		</Manager>
		<Manager Number="293">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #752</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/752</url>
			<description>
		Summary: When the app is backgrounded and resumed, we lose the itinerary that was selected. Steps to reproduce: Plan a trip. Select itinerary 2 or 3. Press the home button. Press the overview button (rightmost button) and select OBA. Note the switch back to the first itinerary. Expected behavior: Go back to the itinerary that was previously selected. Observed behavior: The itinerary shown is the first one. Device and Android version: Android 7.0 on the emulator
	</description>
			<title>Selected itinerary does not persist on app resume</title>
		</Manager>
		<Manager Number="294">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #756</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/756</url>
			<description>
		Summary: Tapping on the trip plan map tab for the itineraries seems more laggy than prior to #671, which added start/end markers to the map. I believe this may be related to the data structures tracking the markers, possibly in conjunction with the fragment lifecycles here. I should do an audit of the fragment lifecycle - it seems strange things might be happening. For example, in DirectionsMapController.setState() it's not clear to me why we're calling onResume() at the end of the method - this should be called via the BaseMapFragment that the controller is hosted in. Steps to reproduce: Plan a trip In returned itinerary, tab on the Map tab Expected behavior: Prior to 0cac62a, the switch from the step-by-step directions tab and the map tab was pretty snappy and immediately loaded. Observed behavior: Following 0cac62a there seems to be a slight lag when switching tabs. Device and Android version: LG G5 w/ Android 7.0
	</description>
			<title>Performance regression for trip plan map tab following adding trip start/end markers</title>
		</Manager>
		<Manager Number="295">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #757</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/757</url>
			<description>
		Summary: Reported by user - when tapping on the manual refresh button for arrivals, it doesn't refresh the data. Strangely, the data auto-refreshes fine after a minute, and tapping on &quot;Load more arrivals&quot; successfully loads more arrivals and refreshes the data at that point. Some of my follow-up questions and answers from user: From your original screenshot - did you use a shortcut icon from your home screen to get to the arrivals view, or did you open the app and tap “Starred stops” in the main navigation drawer? No not shortcut. Open app from app drawer. Navigate to stop...Tap on stop. Data comes up...But no refresh. If you tap on the “Nearby” option in the main navigation drawer, then tap a stop on the map, does the refresh button work then? No. Same situation. Initial data but no refresh when I tap the swirl. It is like the swirl button is not connected to refresh call. Steps to reproduce: Go to the arrivals view for a stop Tap on the refresh button Expected behavior: Refresh the arrival info Observed behavior: Nothing happens Device and Android version: App Version: 2.1.5 Model: Pixel OS Version: 7.1.2 / 25 Google Play Services App: 10.2.98 (440-146496160) Google Play Services Library: 9452000 Region/API: Puget Sound (selected automatically) Loc: gps 5.0, 0 second(s) ago User says: It never worked. I got 7.1.2 about 3 weeks ago. I think I started with 7.1.0. Screenshots:
	</description>
			<title>Refresh button for arrivals doesn't work on Android 7.1.2</title>
		</Manager>
		<Manager Number="296">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #759</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/759</url>
			<description>
		Summary: @themonki I made a few string changes in fe277b3 which added two new strings: </description>
			<title>Update Spanish translation</title>
		</Manager>
		<Manager Number="297">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #763</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/763</url>
			<description>
		Summary: From HART: Can we expose the Badge# and replace the Trip# with the Run# and/or block #? We can add the block_id (from the references section in the arrivals-and-departures-for-stop API response, but we don't have the badge ID - that will need to be added by HART as a user entry field via the SeeClickFix admin console Steps to reproduce: Tap on &quot;Send feedback&quot; Tap on &quot;Report Arrival Time Problem&quot; Tap on a stop, then an arrival time, and submit the report. Expected behavior: In the report within the Open311 provider (e.g., SeeClickFix), the metadata at the bottom of the response should include the block_id. Observed behavior: Currently no block_id is included. For example, from https://seeclickfix.com/issues/3224941-arrival-times-schedules: service_date=02-22-2017; 
agency_name=Hillsborough Area Regional Transit; 
gtfs_stop_id=Hillsborough Area Regional Transit_3035; 
stop_name=Columbus Dr @ Howard Av; 
route_id=Hillsborough Area Regional Transit_15; 
route_display_name=15; 
trip_id=Hillsborough Area Regional Transit_234888; 
trip_headsign=East to Netpark TC; 
predicted=true; 
vehicle_id=Hillsborough Area Regional Transit_1602; 
vehicle_location=27.963869094848633 -82.51721954345703; 
schedule_deviation=13.000 min late; 
stop_arrival_time=07:51 AM; 
stop_departure_time=07:51 AM;
 Device and Android version: N/A
	</description>
			<title>Add block_id to Open311 issue report metadata</title>
		</Manager>
		<Manager Number="298">
			<labels>
				<label>enhancement</label>
				<label>your first PR</label>
			</labels>
			<bugID>Issue #765</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/765</url>
			<description>
		Summary: Requested by a user: Allow My Reminders to be sorted by departure time. Steps to reproduce: Go to main nav drawer and select &quot;My reminders&quot; Expected behavior: Allow me to sort the reminders, specifically by departure time Observed behavior: You can't sort the reminders Device and Android version: N/A
	</description>
			<title>Allow sorting My Reminders by departure time</title>
		</Manager>
		<Manager Number="299">
			<labels>
				<label>enhancement</label>
				<label>your first PR</label>
			</labels>
			<bugID>Issue #769</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/769</url>
			<description>
		Summary: Currently, you can set a custom reminder name so it shows up in the reminders list, but that name is not shown in the actual reminder notification - we currently just show &quot;Route 5 is arriving in 7 min!&quot;. It would be helpful to add the reminder name to the notification itself so riders can more easily differentiate them. The reminder notifications could use a UI update in general, too. Steps to reproduce: Tap on an arrival time Choose &quot;Set a reminder&quot; Set a reminder (if you want to be immediately notified, set it for more than the current ETA) Look at the reminder notification Expected behavior: The notification should include the reminder name Observed behavior: The notification does not include the reminder name - it just says &quot;Route 5 is arriving in 7 min!&quot;. Device and Android version: N/A
	</description>
			<title>Add custom reminder name to notification</title>
		</Manager>
		<Manager Number="300">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #770</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/770</url>
			<description>
		Summary: When trying to build a release via gradlew assembleRelease, I get the following error: :onebusaway-android:compileAgencyXAmazonReleaseNdk UP-TO-DATE
:onebusaway-android:compileAgencyXAmazonReleaseSources UP-TO-DATE
:onebusaway-android:lintVitalAgencyXAmazonRelease
:onebusaway-android:askForPasswords FAILED

FAILURE: Build failed with an exception.

* Where:
Build file 'E:\Android_Studio\onebusaway-android\onebusaway-android\build.gradle
' line: 295

* What went wrong:
Execution failed for task ':onebusaway-android:askForPasswords'.
&gt; Cannot invoke method readPassword() on null object

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug
option to get more log output.

BUILD FAILED

Total time: 6.552 secs
 I'm assuming this is related to changing from 'com.android.tools.build:gradle:2.2.3' to 'com.android.tools.build:gradle:2.3.0', as nothing else has changed. Steps to reproduce: Run gradlew assembleRelease Expected behavior: Prompt me for a password on the command line to sign the app with the keystore Observed behavior: I see the above stack trace Device and Android version: N/A
	</description>
			<title>Release builds broken - Cannot invoke method readPassword() on null object</title>
		</Manager>
		<Manager Number="301">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #772</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/772</url>
			<description>
		Summary: When OBA loads it shows my location and local bus stops but does not show the background map. The map area is blank with a &quot;Google&quot; shown in the bottom left where, I believe, it is normally. NOTE: Using Wifi priority mode. Steps to reproduce: This happens every time a start OBA. Phone: Samsung S7; T-Mobile OS: Android, v7, just updated today to todays update, but issue existed in prior version How can we reproduce the issue? See above. Observed behavior: See above Device and Android version: See above. Screenshots: Not available because I'm reporting this on my Windows computer. I could not find a way to report the but via the application.
	</description>
			<title>No background map</title>
		</Manager>
		<Manager Number="302">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #779</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/779</url>
			<description>
		Summary: Travis builds have started failing with the following error: FAILURE: Build failed with an exception.

* What went wrong:
A problem occurred configuring project ':onebusaway-android'.
&gt; Could not resolve all dependencies for configuration ':onebusaway-android:_agencyXAmazonDebugApkCopy'.
   &gt; Could not find org.onebusaway.util:comparators:1.0.0.
     Required by:
         project :onebusaway-android
 Example of failed Travis build: https://travis-ci.org/OneBusAway/onebusaway-android/builds/245560666 The machine hosting the OBA Maven repo recently moved (https://groups.google.com/forum/#!topic/onebusaway-developers/jYZ1odjulPM), so this is the likely culprit. Steps to reproduce: Do a fresh clone on a new machine that hasn't previously downloaded the org.onebusaway.util:comparators:1.0.0 artifact (or delete it from your machine) and build the project with gradlew assembleObaGoogleDebug Expected behavior: Successfully build Observed behavior: Build fails with: FAILURE: Build failed with an exception.

* What went wrong:
A problem occurred configuring project ':onebusaway-android'.
&gt; Could not resolve all dependencies for configuration ':onebusaway-android:_agencyXAmazonDebugApkCopy'.
   &gt; Could not find org.onebusaway.util:comparators:1.0.0.
     Required by:
         project :onebusaway-android
	</description>
			<title>Build fails due to missing artifact org.onebusaway.util:comparators:1.0.0</title>
		</Manager>
		<Manager Number="303">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #789</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/789</url>
			<description>
		Summary: We are going to use https://raw.githubusercontent.com/OneBusAway/onebusaway-multiregion-support/bikeshare-staging/staging/regions-v3.json in the beta release for bikeshare (currently in #776) to avoid impacting all OBA Android Tampa users with the new OTP server version until the new OTP server can go through sufficient QA. This issue is a reminder to change the Regions API back to the production URL prior to a production release.
	</description>
			<title>Change Regions API URL back to production</title>
		</Manager>
		<Manager Number="304">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #790</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/790</url>
			<description>
		Summary: I'm seeing a large number of NPEs (278 in last week, 2618 total, affecting 1301 users) in the Android Developer Console for OBA with the below stack trace: java.lang.NullPointerException: 
  at org.onebusaway.android.directions.realtime.RealtimeService.possibleReschedule (RealtimeService.java:124)
  at org.onebusaway.android.directions.realtime.RealtimeService.onHandleIntent (RealtimeService.java:82)
  at android.app.IntentService$ServiceHandler.handleMessage (IntentService.java:67)
  at android.os.Handler.dispatchMessage (Handler.java:102)
  at android.os.Looper.loop (Looper.java:154)
  at android.os.HandlerThread.run (HandlerThread.java:61)
 Steps to reproduce: Not sure - I'm assuming planning a trip and wait for the real-time refresh to happen Expected behavior: Not crash Observed behavior: App crashes Device and Android version: Wide variety - Android versions 5.1 to 7.0, LG, Samsung, and Pixel.
	</description>
			<title>NPE on real-time directions refresh</title>
		</Manager>
		<Manager Number="305">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #792</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/792</url>
			<description>
		Summary: If you switch to the Agency X or Agency Y build variants If you are located in Tampa, on initial install of these variants the bike share markers show up on the map, but if you tap on the bikeshare Layer floating action button it shows the layer as turned off (i.e., gray). The bike share layer FAB icon should be blue to indicate the layer is turned on Steps to reproduce: Set up an emulator or device with Tampa GPS location 1. Switch to agencyXGoogleDebug or agencyYGoogleDebug in Android Studio and do an initial install (see below for where you can see the &quot;Build Variants&quot; window in lower-left of Android Studio and where you can change build variants) Uninstall and re-install the app Tap on layers floating action button Expected behavior: The bike share markers should appear on the map and the bike share layer control should be blue to indicate it is on Observed behavior: The bike share markers appear on the map but the bike share layer control is gray, which inaccurately indicates the layer is turned off Device and Android version: LG G5 with Android 7.0 @carvalhorr Would you be able to take a look at this? Not an emergency, but I'd like to get it fixed in the next week or two.
	</description>
			<title>Bike share FAB shows layer off on initial install</title>
		</Manager>
		<Manager Number="306">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #794</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/794</url>
			<description>
		Summary: Reported by user for current 2.2.4 bikeshare beta: Currently in OBA android, when you want to plan a trip (using beta OTP client), you can notably choose between bikeshare or transit+bikeshare but can't choose transit only (transit+walk), whereas most of the time you need a separate subscription or ticket to be able to use bikeshare, even when you have unlimited access to transit system. Would it be possible to implement transit only option? Also, having a way to display current disruptions as in default OTP client would also be nice, at it can have a main impact on transit. I agree, we should have a transit-only option (which includes bus and rail). Steps to reproduce: Plan a trip in an area with bikeshare Expected behavior: Allow me to get trips only for transit, without any bikeshare legs Observed behavior: There is no way to eliminate bikeshare from a planned trip Device and Android version: N/A @carvalhorr Would you be able to take a look at this? I'd like to get this into the production release of the app.
	</description>
			<title>Trip planning (bikeshare beta) - add &quot;transit only&quot; mode</title>
		</Manager>
		<Manager Number="307">
			<labels>
				<label>bug</label>
				<label>won't fix</label>
			</labels>
			<bugID>Issue #800</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/800</url>
			<description>
		Summary: This sounds like a data issue, but I haven't had a chance to investigate yet. Below is correspondence with user and Sound Transit. From user: This app doesn't show the C line stopping at 28th and Roxbury. It shows only the 21 and at 30th and Roxbury it shows only the 21 also.... The 28th and Roxbury stop is a red rapid Transit stop. Please fix this. Sound Transit: I’m not sure how you’re looking for it but try searching for ‘22260’ which is the stop id showing the C line at 28th and Roxbury in addition to the 21 and 22. See the attached screenshot. Hope that helps. User: Yes that is the stop. When I open one bus away it displays the bus number 21 only... There is not a C line listed to stop at that particular stop. on onebusaway. I have used onebusaway four or five times a day. I live right by Roxhill Safeway. I ride the C line most every day. For 3 or 4 years I have looked at they stop on onebusaway for when the next bus is coming. It has a always listed the C line. But around 3 or 4 days ago the C line has disappeared from that particular bus stop on onebusaway. I looked again just now on onebusaway and it only list the 21.... Sound Transit: This appears to be an app/user issue. The data is all present and accounted for… Steps to reproduce: (According to user) In Puget Sound region, go to ‘22260’ in Android app Expected behavior: See C line Observed behavior: (According to user) C line is missing Device and Android version: App Version: 2.1.9 Model: LG-H918 OS Version: 7.0 / 24 Google Play Services App: 11.3.02 (440-161239932) Google Play Services Library: 9452000 Region/API: Puget Sound (selected automatically) Loc: gps XXXXXXX, 1 second(s) ago
	</description>
			<title>Puget Sound - C line missing from 28th and Roxbury</title>
		</Manager>
		<Manager Number="308">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #803</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/803</url>
			<description>
		Summary: If HomeActivity starts up and shows the &quot;Starred stops&quot; or &quot;My reminders&quot; fragments (instead of the BaseMapFragment), the partially initialized map layer FAB shows up in the bottom right corner as a blue circle: Steps to reproduce: Start the app and browse to &quot;Starred stops&quot; or &quot;My reminders&quot; sections via the nav drawer Close the app by hitting the back button or multitasking button and clicking the &quot;X&quot; in the upper right corner of the OneBusAway app Tap on the OBA icon to start the app again Expected behavior: The map layer FAB should be hidden when starting the app and showing the &quot;Starred stops&quot; or &quot;My reminders&quot; fragment Observed behavior: The map layer FAB is visible as a blue circle Device and Android version: LG G5 w/ Android 7.0 Screenshots: See above cc @carvalhorr
	</description>
			<title>Blue map layer FAB is visible when starting app with Starred stops</title>
		</Manager>
		<Manager Number="309">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #807</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/807</url>
			<description>
		Summary: If you manually select a region without bikeshare (e.g., &quot;Washington D.C.&quot;), and then return to the screen to select regions and hit the back button, the app crashes with the below stack trace:    Process: com.joulespersecond.seattlebusbot, PID: 17566
   java.lang.RuntimeException: Unable to resume activity {com.joulespersecond.seattlebusbot/org.onebusaway.android.ui.PreferencesActivity}: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.preference.Preference.onPrepareForRemoval()' on a null object reference
	   at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3480)
	   at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3520)
	   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1554)
	   at android.os.Handler.dispatchMessage(Handler.java:102)
	   at android.os.Looper.loop(Looper.java:154)
	   at android.app.ActivityThread.main(ActivityThread.java:6247)
	   at java.lang.reflect.Method.invoke(Native Method)
	   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
	   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
	Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.preference.Preference.onPrepareForRemoval()' on a null object reference
	   at android.preference.PreferenceGroup.removePreferenceInt(PreferenceGroup.java:188)
	   at android.preference.PreferenceGroup.removePreference(PreferenceGroup.java:181)
	   at org.onebusaway.android.ui.PreferencesActivity.onResume(PreferencesActivity.java:185)
	   at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1270)
	   at android.app.Activity.performResume(Activity.java:6861)
	   at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3457)
	   at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3520) 
	   at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1554) 
	   at android.os.Handler.dispatchMessage(Handler.java:102) 
	   at android.os.Looper.loop(Looper.java:154) 
	   at android.app.ActivityThread.main(ActivityThread.java:6247) 
	   at java.lang.reflect.Method.invoke(Native Method)
 Steps to reproduce: Settings-&gt;Your region Select region without bikeshare (&quot;Washington D.C.&quot;) Settings-&gt;Your region Hit back button Expected behavior: Return to the main Settings screen Observed behavior: Crash with above stack trace Device and Android version: LG G5 w/ Android 7.0 Screenshots: N/A cc @carvalhorr
	</description>
			<title>NPE when manually selecting region without bikeshare</title>
		</Manager>
		<Manager Number="310">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #809</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/809</url>
			<description>
		Summary: It looks like when switching out fragments when viewing &quot;Nearby&quot; mode in HomeActivity, one of the listeners becomes null, which results in an NPE:  FATAL EXCEPTION: main
   Process: com.joulespersecond.seattlebusbot, PID: 13040
   java.lang.NullPointerException: Attempt to invoke interface method 'void org.onebusaway.android.ui.LayersSpeedDialAdapter$LayerActivationListener.onDeactivateLayer(org.onebusaway.android.map.googlemapsv2.LayerInfo)' on a null object reference
	   at org.onebusaway.android.ui.LayersSpeedDialAdapter.onMenuItemClick(LayersSpeedDialAdapter.java:123)
	   at uk.co.markormesher.android_fab.FloatingActionButton.lambda$rebuildSpeedDialMenu$1(FloatingActionButton.java:445)
	   at uk.co.markormesher.android_fab.FloatingActionButton.access$lambda$1(FloatingActionButton.java)
	   at uk.co.markormesher.android_fab.FloatingActionButton$$Lambda$4.onClick(Unknown Source)
	   at android.view.View.performClick(View.java:5623)
	   at android.view.View$PerformClick.run(View.java:22433)
	   at android.os.Handler.handleCallback(Handler.java:751)
	   at android.os.Handler.dispatchMessage(Handler.java:95)
	   at android.os.Looper.loop(Looper.java:154)
	   at android.app.ActivityThread.main(ActivityThread.java:6247)
	   at java.lang.reflect.Method.invoke(Native Method)
	   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
	   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
 Steps to reproduce: Not sure - open route mode and switch back to normal mode on map, switch to and from &quot;Starred Stops&quot;, until it crashes Expected behavior: Not crash Observed behavior: Crash Device and Android version: LG G5 w/ Android 7.0
	</description>
			<title>NPE on layer listener when switching fragments</title>
		</Manager>
		<Manager Number="311">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #810</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/810</url>
			<description>
		Summary: When getting a phone call in the map view, after I returned to the app and tapped on the &quot;Out of region&quot; dialog, the app crashed and I got the following stack trace: Process: com.joulespersecond.seattlebusbot, PID: 26975
   java.lang.IllegalStateException: Fragment BaseMapFragment{bf9328a} not attached to Activity
	   at android.support.v4.app.Fragment.getResources(Fragment.java:636)
	   at org.onebusaway.android.map.googlemapsv2.BaseMapFragment.zoomToRegion(BaseMapFragment.java:797)
	   at org.onebusaway.android.map.googlemapsv2.BaseMapFragment$MapDialogFragment$2.onClick(BaseMapFragment.java:1231)
	   at android.support.v7.app.AlertController$ButtonHandler.handleMessage(AlertController.java:157)
	   at android.os.Handler.dispatchMessage(Handler.java:102)
	   at android.os.Looper.loop(Looper.java:154)
	   at android.app.ActivityThread.main(ActivityThread.java:6247)
	   at java.lang.reflect.Method.invoke(Native Method)
	   at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
	   at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
 Steps to reproduce: Select a region other than the one you're in Go to Nearby screen Answer a phone call After hanging up, reply to the &quot;Out of region&quot; dialog Expected behavior: Not crash Observed behavior: Crash Device and Android version: LG G5 w/ Android 7.0
	</description>
			<title>IllegalStateException when getting phone call while on map view and then selecting out-of-region dialog</title>
		</Manager>
		<Manager Number="312">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #811</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/811</url>
			<description>
		Summary: If you're in the Tampa region, if you go to the &quot;Starred stops&quot; screen, close the app, reopen the app, and then go to the &quot;Nearby&quot; screen, the Layers FAB isn't visible. It should be visible. Steps to reproduce: Select the Tampa region On the &quot;Nearby&quot; screen, unselect the bikeshare layer using the Layers FAB Go to the &quot;Starred stops&quot; screen using nav drawer Close the app (using back button) Reopen the app Go to the &quot;Nearby&quot; screen using nav drawer Expected behavior: Layers FAB should be visible Observed behavior: Layers FAB isn't visible Device and Android version: LG G5 w/ Android 7.0 Screenshots:
	</description>
			<title>Layers FAB isn't visible when starting app into Starred Stops fragment</title>
		</Manager>
		<Manager Number="313">
			<labels>
				<label>enhancement</label>
			</labels>
			<bugID>Issue #814</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/814</url>
			<description>
		Summary: We're long overdue for a proper system architecture diagram that visually explains how arrival estimates, service alerts, trip plans, bike share, and Open311 information makes its way into the OBA Android app. Steps to reproduce: Try to find system architecture information for the OBA Android app and the servers it communicates with. Expected behavior: Give me docs! Observed behavior: No docs! Device and Android version: N/A
	</description>
			<title>Add system architecture diagam</title>
		</Manager>
		<Manager Number="314">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #816</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/816</url>
			<description>
		Summary: If you try to create a starred stop shortcut on an Android 8.0 Oreo device, OBA Android says that the shortcut was created but no shortcut icon appears. This also applies to other app shortcuts too (Night light, etc.) - anything that uses Intent.setAction(INSTALL_SHORTCUT). Looks like Google changed the behavior on creating these shortcuts in Android 8.0 so this now fails silently. https://developer.android.com/about/versions/oreo/android-8.0-changes.html#as says: The com.android.launcher.action.INSTALL_SHORTCUT broadcast no longer has any effect on your app, because it is now a private, implicit broadcast. Instead, you should create an app shortcut by using the [requestPinShortcut()](https://developer.android.com/reference/android/content/pm/ShortcutManager.html#requestPinShortcut(android.content.pm.ShortcutInfo, android.content.IntentSender)) method from the ShortcutManager class. See https://stackoverflow.com/questions/44744184/how-to-create-shortcuts-on-android-o-when-targetting-less-than-it for details. Steps to reproduce: Create starred stop Go to Starred Stops fragment Long-press on stop and tap &quot;Create shortcut on home screen&quot; Expected behavior: A shortcut to that stop should appear on the home screen Observed behavior: Stop shortcut doesn't appear on home screen Device and Android version: Samsung Galaxy S8+ w/ Android 8.0 (Samsung beta) and Nexus 5X w/ Android 8.0 (production release)
	</description>
			<title>Can't create shortcuts on Android 8.0 Oreo</title>
		</Manager>
		<Manager Number="315">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #819</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/819</url>
			<description>
		Summary: MockRegion and MockObaStop are both missing copyright headers. The Apache license header should be added, with Copyright 2012-last commit date, listing Paul and USF (my email). Steps to reproduce: Look at MockRegion.java and MockObaStop.java Expected behavior: They should have copyright headers Observed behavior: They don't have copyright headers Device and Android version: N/A
	</description>
			<title>Missing copyright headers</title>
		</Manager>
		<Manager Number="316">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #822</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/822</url>
			<description>
		Summary: Some of the unit test classes are missing copyright headers, in particular LocationUtilsTest and MathUtilTest under util.test package. Steps to reproduce: Look at above files Expected behavior: Files should have a copyright header Observed behavior: Files don't have a copyright header Device and Android version: N/A
	</description>
			<title>Files missing copyright info</title>
		</Manager>
		<Manager Number="317">
			<labels>
				<label>bug</label>
			</labels>
			<bugID>Issue #826</bugID>
			<url>https://github.com/OneBusAway/onebusaway-android/issues/826</url>
			<description>
		Summary: If you run the unit tests, ReportProblemOpen311Test.testHillsboroughCounty() fails with: junit.framework.AssertionFailedError
at org.onebusaway.android.io.test.ReportProblemOpen311Test.testHillsboroughCounty(ReportProblemOpen311Test.java:103)
at android.test.AndroidTestRunner.runTest(AndroidTestRunner.java:198)
at android.test.AndroidTestRunner.runTest(AndroidTestRunner.java:183)
at android.test.InstrumentationTestRunner.onStart(InstrumentationTestRunner.java:560)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2102)
 It looks like HART changed their Open311 service types (i.e., issue categories) so now only 3 are identified as &quot;transit-related&quot; based on heuristic keyword matching (a word-around because SeeClickFix doesn't support explicit groups or keywords in their Open311 API). Our threshold for identifying deployments like HART where all services are transit-related is 4 (defined in ReportConstants.NUM_TRANSIT_SERVICES_THRESHOLD). Steps to reproduce: Run the unit tests Expected behavior: All tests should pass Observed behavior: ReportProblemOpen311Test.testHillsboroughCounty() fails Device and Android version: Reprod on Samsung Galaxy S8+ with Android 8.0 beta
	</description>
			<title>Hillsborough County Open311 test fails</title>
		</Manager>
	</Managers>
